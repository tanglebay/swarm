#!/bin/bash

if [ "$iotaHornetReleaseVersion" = "v2" ] && [ ! -z "$iotaHornetReleaseVersion" ] && [[ $iotaHornetVersion =~ ^2.* ]]; then
    # HORNET MENU
    while [ $exitCode -lt 1 ]; do
        source $swarmConfigs/iota-hornet.cfg
        clear
        CHOICE=$(
            whiptail --title "Hornet [IOTA] Menu" --menu "\nChoose an option" 24 65 0 \
            "" "" \
            "1)" "Hornet Info" \
            "2)" "Hornet Configuration" \
            "3)" "Hornet Management" \
            "4)" "Hornet Installer" 3>&2 2>&1 1>&3
        )
        exitstatus=$?
        if [ "$exitstatus" = "1" ]; then
            exitCode=1
        fi

        case $CHOICE in
            "1)")
                source $iotaHornetModule/iotaHornetInfo
            ;;
            "2)")
                while [ $exitCode -lt 1 ]; do
                    clear
                    CHOICE=$(
                        whiptail --title "Hornet [IOTA] Configuration" --menu "\nChoose an option" 24 65 0 \
                        "" "" \
                        "1)" "Hornet configuration" \
                        "2)" "Advanced Configuration" 3>&2 2>&1 1>&3
                    )

                    exitstatus=$?
                    if [ "$exitstatus" = "1" ]; then
                        exitCode=1
                    fi

                    case $CHOICE in
                        "1)")
                            source $iotaHornetModule/iotaHornetConfiguration
                        ;;
                        "2)")
                            while [ $exitCode -lt 1 ]; do
                                clear
                                CHOICE=$(
                                    whiptail --title "Hornet [IOTA] Configuration" --menu "\nChoose an option" 24 65 0 \
                                    "" "" \
                                    "1)" "Peering.json" \
                                    "2)" "Config_Mainnet.json" \
                                    "3)" "Config_Testnet.json" \
                                    "4)" "Iota-Hornet.cfg (SWARM)" 3>&2 2>&1 1>&3
                                )

                                exitstatus=$?
                                if [ "$exitstatus" = "1" ]; then
                                    exitCode=1
                                fi

                                case $CHOICE in
                                    "1)")
                                        sudo $swarmCLEditor $iotaHornetHome/peering.json
                                        if (whiptail --title "Hornet [IOTA] Configuration" --yesno --defaultno "Would you like to restart Hornet now?" 8 65); then
                                            if [ ! -f "/tmp/iota-hornet.lock" ]; then
                                                sudo touch /tmp/iota-hornet.lock > /dev/null 2>&1
                                            fi
                                            {
                                                echo 0
                                                echo 10
                                                for iotaInxPlugin in ${iotaInxPlugins[@]}
                                                do
                                                    if [ -f "/usr/bin/iota-inx-$iotaInxPlugin" ]; then
                                                        if [ ! -f "/tmp/iota-inx-$iotaInxPlugin.lock" ]; then
                                                            sudo touch /tmp/iota-inx-$iotaInxPlugin.lock > /dev/null 2>&1
                                                        fi
                                                        sudo systemctl stop iota-inx-$iotaInxPlugin 2>/dev/null
                                                    fi
                                                done
                                                unset iotaInxPlugin
                                                echo 33
                                                sudo systemctl restart iota-hornet > /dev/null 2>&1
                                                echo 66
                                                for iotaInxPlugin in ${iotaInxPlugins[@]}
                                                do
                                                    if [ -f "/usr/bin/iota-inx-$iotaInxPlugin" ]; then
                                                        sudo systemctl start iota-inx-$iotaInxPlugin 2>/dev/null
                                                        if [ -f "/tmp/iota-inx-$iotaInxPlugin.lock" ]; then
                                                            sudo rm -rf /tmp/iota-inx-$iotaInxPlugin.lock > /dev/null 2>&1
                                                        fi
                                                    fi
                                                done
                                                unset iotaInxPlugin
                                                echo 100
                                                sleep 0.25
                                            } | whiptail --gauge "Please wait while Hornet is restarting..." 8 65 0
                                            if [ -f "/tmp/iota-hornet.lock" ]; then
                                                sudo rm -rf /tmp/iota-hornet.lock > /dev/null 2>&1
                                            fi
                                        fi
                                    ;;
                                    "2)")
                                        sudo $swarmCLEditor $iotaHornetHome/config_mainnet.json
                                        if [ -f "/usr/bin/iota-hornet" ]; then
                                            if (whiptail --title "Hornet [IOTA] Configuration" --yesno --defaultno "Would you like to restart Hornet now?" 8 65); then
                                                if [ ! -f "/tmp/iota-hornet.lock" ]; then
                                                    sudo touch /tmp/iota-hornet.lock > /dev/null 2>&1
                                                fi
                                                {
                                                    echo 0
                                                    echo 10
                                                    for iotaInxPlugin in ${iotaInxPlugins[@]}
                                                    do
                                                        if [ -f "/usr/bin/iota-inx-$iotaInxPlugin" ]; then
                                                            if [ ! -f "/tmp/iota-inx-$iotaInxPlugin.lock" ]; then
                                                                sudo touch /tmp/iota-inx-$iotaInxPlugin.lock > /dev/null 2>&1
                                                            fi
                                                            sudo systemctl stop iota-inx-$iotaInxPlugin 2>/dev/null
                                                        fi
                                                    done
                                                    unset iotaInxPlugin
                                                    echo 33
                                                    sudo systemctl restart iota-hornet > /dev/null 2>&1
                                                    echo 66
                                                    for iotaInxPlugin in ${iotaInxPlugins[@]}
                                                    do
                                                        if [ -f "/usr/bin/iota-inx-$iotaInxPlugin" ]; then
                                                            sudo systemctl start iota-inx-$iotaInxPlugin 2>/dev/null
                                                            if [ -f "/tmp/iota-inx-$iotaInxPlugin.lock" ]; then
                                                                sudo rm -rf /tmp/iota-inx-$iotaInxPlugin.lock > /dev/null 2>&1
                                                            fi
                                                        fi
                                                    done
                                                    unset iotaInxPlugin
                                                    echo 100
                                                    sleep 0.25
                                                } | whiptail --gauge "Please wait while Hornet is restarting..." 8 65 0
                                                if [ -f "/tmp/iota-hornet.lock" ]; then
                                                    sudo rm -rf /tmp/iota-hornet.lock > /dev/null 2>&1
                                                fi
                                            fi
                                        fi
                                    ;;
                                    "3)")
                                        sudo $swarmCLEditor $iotaHornetHome/config_testnet.json
                                        if [ -f "/usr/bin/iota-hornet" ]; then
                                            if (whiptail --title "Hornet [IOTA] Configuration" --yesno --defaultno "Would you like to restart Hornet now?" 8 65); then
                                                if [ ! -f "/tmp/iota-hornet.lock" ]; then
                                                    sudo touch /tmp/iota-hornet.lock > /dev/null 2>&1
                                                fi
                                                {
                                                    echo 0
                                                    echo 10
                                                    for iotaInxPlugin in ${iotaInxPlugins[@]}
                                                    do
                                                        if [ -f "/usr/bin/iota-inx-$iotaInxPlugin" ]; then
                                                            if [ ! -f "/tmp/iota-inx-$iotaInxPlugin.lock" ]; then
                                                                sudo touch /tmp/iota-inx-$iotaInxPlugin.lock > /dev/null 2>&1
                                                            fi
                                                            sudo systemctl stop iota-inx-$iotaInxPlugin 2>/dev/null
                                                        fi
                                                    done
                                                    unset iotaInxPlugin
                                                    echo 33
                                                    sudo systemctl restart iota-hornet > /dev/null 2>&1
                                                    echo 66
                                                    for iotaInxPlugin in ${iotaInxPlugins[@]}
                                                    do
                                                        if [ -f "/usr/bin/iota-inx-$iotaInxPlugin" ]; then
                                                            sudo systemctl start iota-inx-$iotaInxPlugin 2>/dev/null
                                                            if [ -f "/tmp/iota-inx-$iotaInxPlugin.lock" ]; then
                                                                sudo rm -rf /tmp/iota-inx-$iotaInxPlugin.lock > /dev/null 2>&1
                                                            fi
                                                        fi
                                                    done
                                                    unset iotaInxPlugin
                                                    echo 100
                                                    sleep 0.25
                                                } | whiptail --gauge "Please wait while Hornet is restarting..." 8 65 0
                                                if [ -f "/tmp/iota-hornet.lock" ]; then
                                                    sudo rm -rf /tmp/iota-hornet.lock > /dev/null 2>&1
                                                fi
                                            fi
                                        fi
                                    ;;
                                    "4)")
                                        sudo $swarmCLEditor $swarmConfigs/iota-hornet.cfg
                                        if [ -f "/usr/bin/iota-hornet" ]; then
                                            if (whiptail --title "Hornet [IOTA] Configuration" --yesno --defaultno "Would you like to restart Hornet now?" 8 65); then
                                                if [ ! -f "/tmp/iota-hornet.lock" ]; then
                                                    sudo touch /tmp/iota-hornet.lock > /dev/null 2>&1
                                                fi
                                                {
                                                    echo 0
                                                    echo 25
                                                    source $iotaHornetModule/iotaHornetParser
                                                    echo 50
                                                    for iotaInxPlugin in ${iotaInxPlugins[@]}
                                                    do
                                                        if [ -f "/usr/bin/iota-inx-$iotaInxPlugin" ]; then
                                                            if [ ! -f "/tmp/iota-inx-$iotaInxPlugin.lock" ]; then
                                                                sudo touch /tmp/iota-inx-$iotaInxPlugin.lock > /dev/null 2>&1
                                                            fi
                                                            sudo systemctl stop iota-inx-$iotaInxPlugin 2>/dev/null
                                                        fi
                                                    done
                                                    unset iotaInxPlugin
                                                    sudo systemctl restart iota-hornet > /dev/null 2>&1
                                                    echo 75
                                                    for iotaInxPlugin in ${iotaInxPlugins[@]}
                                                    do
                                                        if [ -f "/usr/bin/iota-inx-$iotaInxPlugin" ]; then
                                                            sudo systemctl start iota-inx-$iotaInxPlugin 2>/dev/null
                                                            if [ -f "/tmp/iota-inx-$iotaInxPlugin.lock" ]; then
                                                                sudo rm -rf /tmp/iota-inx-$iotaInxPlugin.lock > /dev/null 2>&1
                                                            fi
                                                        fi
                                                    done
                                                    unset iotaInxPlugin
                                                    echo 100
                                                    sleep 0.25
                                                } | whiptail --gauge "Please wait while Hornet (Iota) is restarting..." 8 65 0
                                                if [ -f "/tmp/iota-hornet.lock" ]; then
                                                    sudo rm -rf /tmp/iota-hornet.lock > /dev/null 2>&1
                                                fi
                                            fi
                                        fi
                                    ;;
                                esac
                            done
                            exitCode=0
                        ;;
                    esac
                done
                exitCode=0
            ;;
            "3)")
                if [ -f "/usr/bin/iota-hornet" ]; then
                    while [ $exitCode -lt 1 ]; do
                        clear
                        CHOICE=$(
                            whiptail --title "Hornet [IOTA] Management" --menu "\nChoose your option" 24 65 0 \
                            "" "" \
                            "1)" "Event Validation" \
                            "2)" "Show Hornet log" \
                            "3)" "Start/Stop Hornet" \
                            "4)" "Reset Hornet event database" \
                            "5)" "Reset Hornet all databases" \
                            "6)" "Reset Hornet config" 3>&2 2>&1 1>&3
                        )
                        exitstatus=$?
                        if [ "$exitstatus" = "1" ]; then
                            exitCode=1
                        fi
                        case $CHOICE in
                            "1)")
                                if [ -f "/usr/bin/iota-inx-participation" ]; then
                                    while [ $exitCode -lt 1 ]; do
                                        clear
                                        CHOICE=$(
                                            whiptail --title "Hornet [IOTA] Events" --menu "\nChoose your option" 24 65 0 \
                                            "" "" \
                                            "1)" "Event Validation" \
                                            "2)" "Show latest event results" 3>&2 2>&1 1>&3
                                        )
                                        exitstatus=$?
                                        if [ "$exitstatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                while [ $exitCode -lt 1 ]; do
                                                    CHOICE=$(
                                                        whiptail --title "Hornet [IOTA] Events" --menu "\nChoose your option" 18 65 0 \
                                                        "" "" \
                                                        "1)" "Validate Staking Event" \
                                                        "2)" "Validate Voting Event" 3>&2 2>&1 1>&3
                                                    )
                                                    exitstatus=$?
                                                    if [ "$exitStatus" = "1" ]; then
                                                        exitCode=1
                                                    fi
                                                    if [ "$exitstatus" != "1" ]; then
                                                        case $CHOICE in
                                                            "1)")
                                                                eventType="staking"
                                                            ;;
                                                            "2)")
                                                                eventType="ballot"
                                                            ;;
                                                        esac
                                                        eventId=$(whiptail --inputbox "\nPlease enter the event id you want to validate" 10 65 --title "Hornet [IOTA] Events" 3>&1 1>&2 2>&3)
                                                        exitStatus=$?
                                                        if [ $exitStatus != 1 ] && [ ! -z "$eventId" ]; then
                                                            nodeId="iota"
                                                            source $swarmSharedModule/eventValidation
                                                        fi
                                                    fi
                                                    unset nodeId
                                                done
                                                exitCode=0
                                            ;;
                                            "2)")
                                                if [ -f "$swarmLogs/participation-event.log" ]; then
                                                    clear
                                                    echo ""
                                                    cat $swarmLogs/participation-event.log
                                                    echo ""
                                                    echo ""
                                                    read -n 1 -s -r -p "Press any key to continue"
                                                fi
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                else
                                    whiptail --title "Hornet [IOTA] Management" --msgbox "INX-Participation (Iota) is not installed, please install the plugin first." 8 65
                                fi
                            ;;
                            "2)")
                                # Display last 65 lines of log
                                sudo journalctl -fu iota-hornet | less -FRSXM
                                clear
                            ;;
                            "3)")
                                while [ $exitCode -lt 1 ]; do
                                    CHOICE=$(
                                        whiptail --title "Hornet [IOTA] Management" --menu "\nChoose your option" 24 65 0 \
                                        "" "" \
                                        "1)" "Restart Hornet" \
                                        "2)" "Start Hornet" \
                                        "3)" "Stop Hornet" \
                                        "4)" "Status Hornet" 3>&2 2>&1 1>&3
                                    )
                                    exitStatus=$?
                                    if [ "$exitStatus" = "1" ]; then
                                        exitCode=1
                                    fi
                                    case $CHOICE in
                                        "1)")
                                            if [ ! -f "/tmp/iota-hornet.lock" ]; then
                                                sudo touch /tmp/iota-hornet.lock > /dev/null 2>&1
                                            fi
                                            {
                                                echo 0
                                                echo 5
                                                for iotaInxPlugin in ${iotaInxPlugins[@]}
                                                do
                                                    if [ -f "/usr/bin/iota-inx-$iotaInxPlugin" ]; then
                                                        if [ ! -f "/tmp/iota-inx-$iotaInxPlugin.lock" ]; then
                                                            sudo touch /tmp/iota-inx-$iotaInxPlugin.lock > /dev/null 2>&1
                                                        fi
                                                        sudo systemctl stop iota-inx-$iotaInxPlugin 2>/dev/null
                                                    fi
                                                done
                                                unset iotaInxPlugin
                                                echo 33
                                                sudo systemctl restart iota-hornet > /dev/null 2>&1
                                                echo 66
                                                for iotaInxPlugin in ${iotaInxPlugins[@]}
                                                do
                                                    if [ -f "/usr/bin/iota-inx-$iotaInxPlugin" ]; then
                                                        sudo systemctl start iota-inx-$iotaInxPlugin 2>/dev/null
                                                        if [ -f "/tmp/iota-inx-$iotaInxPlugin.lock" ]; then
                                                            sudo rm -rf /tmp/iota-inx-$iotaInxPlugin.lock > /dev/null 2>&1
                                                        fi
                                                    fi
                                                done
                                                unset iotaInxPlugin
                                                echo 100
                                                sleep 0.25
                                            } | whiptail --gauge "Please wait while Hornet is restarting..." 8 65 0
                                            if [ -f "/tmp/iota-hornet.lock" ]; then
                                                sudo rm -rf /tmp/iota-hornet.lock > /dev/null 2>&1
                                            fi
                                            whiptail --title "Hornet [IOTA] Management" --msgbox "Hornet successfully restarted." 8 65
                                        ;;
                                        "2)")
                                            {
                                                echo 0
                                                echo 33
                                                sudo systemctl start iota-hornet > /dev/null 2>&1
                                                echo 66
                                                for iotaInxPlugin in ${iotaInxPlugins[@]}
                                                do
                                                    if [ -f "/usr/bin/iota-inx-$iotaInxPlugin" ]; then
                                                        sudo systemctl start iota-inx-$iotaInxPlugin 2>/dev/null
                                                        if [ -f "/tmp/iota-inx-$iotaInxPlugin.lock" ]; then
                                                            sudo rm -rf /tmp/iota-inx-$iotaInxPlugin.lock > /dev/null 2>&1
                                                        fi
                                                    fi
                                                done
                                                unset iotaInxPlugin
                                                echo 100
                                                sleep 0.25
                                            } | whiptail --gauge "Please wait while Hornet is starting..." 8 65 0
                                            if [ -f "/tmp/iota-hornet.lock" ]; then
                                                sudo rm -rf /tmp/iota-hornet.lock > /dev/null 2>&1
                                            fi
                                            whiptail --title "Hornet [IOTA] Management" --msgbox "Hornet successfully started." 8 65
                                        ;;
                                        "3)")
                                            if [ ! -f "/tmp/iota-hornet.lock" ]; then
                                                sudo touch /tmp/iota-hornet.lock > /dev/null 2>&1
                                            fi
                                            {
                                                echo 0
                                                for iotaInxPlugin in ${iotaInxPlugins[@]}
                                                do
                                                    if [ -f "/usr/bin/iota-inx-$iotaInxPlugin" ]; then
                                                        if [ ! -f "/tmp/iota-inx-$iotaInxPlugin.lock" ]; then
                                                            sudo touch /tmp/iota-inx-$iotaInxPlugin.lock > /dev/null 2>&1
                                                        fi
                                                        sudo systemctl stop iota-inx-$iotaInxPlugin 2>/dev/null
                                                    fi
                                                done
                                                unset iotaInxPlugin
                                                echo 50
                                                sudo systemctl stop iota-hornet > /dev/null 2>&1
                                                echo 100
                                                sleep 0.25
                                            } | whiptail --gauge "Please wait while Hornet is stopping..." 8 65 0
                                            whiptail --title "Hornet [IOTA] Management" --msgbox "Hornet successfully stopped." 8 65
                                        ;;
                                        "4)")
                                            iotaHornetStatus="$(sudo systemctl status iota-hornet)"
                                            whiptail --title "Hornet [IOTA] Management" --msgbox "$iotaHornetStatus" 15 65
                                        ;;
                                    esac
                                done
                                exitCode=0
                            ;;
                            "4)")
                                if (whiptail --title "Hornet [IOTA] Management" --yesno --defaultno "Are you sure you want to delete the hornet event database?" 8 65); then
                                    source $swarmConfigs/iota-hornet.cfg
                                    if [ ! -f "/tmp/iota-hornet.lock" ]; then
                                        sudo touch /tmp/iota-hornet.lock > /dev/null 2>&1
                                    fi
                                    {
                                        echo 0
                                        echo 10
                                        for iotaInxPlugin in ${iotaInxPlugins[@]}
                                        do
                                            if [ -f "/usr/bin/iota-inx-$iotaInxPlugin" ]; then
                                                if [ ! -f "/tmp/iota-inx-$iotaInxPlugin.lock" ]; then
                                                    sudo touch /tmp/iota-inx-$iotaInxPlugin.lock > /dev/null 2>&1
                                                fi
                                                sudo systemctl stop iota-inx-$iotaInxPlugin 2>/dev/null
                                            fi
                                        done
                                        unset iotaInxPlugin
                                        echo 20
                                        sudo systemctl stop iota-hornet > /dev/null 2>&1
                                        echo 40
                                        sudo rm -rf $iotaHornetHome/${iotaHornetNetwork}/database/participation > /dev/null 2>&1
                                        echo 60
                                        sudo systemctl start iota-hornet > /dev/null 2>&1
                                        echo 80
                                        for iotaInxPlugin in ${iotaInxPlugins[@]}
                                        do
                                            if [ -f "/usr/bin/iota-inx-$iotaInxPlugin" ]; then
                                                sudo systemctl restart iota-inx-$iotaInxPlugin 2>/dev/null
                                                if [ -f "/tmp/iota-inx-$iotaInxPlugin.lock" ]; then
                                                    sudo rm -rf /tmp/iota-inx-$iotaInxPlugin.lock > /dev/null 2>&1
                                                fi
                                            fi
                                        done
                                        unset iotaInxPlugin
                                        echo 100
                                        sleep 0.25
                                    } | whiptail --gauge "Please wait while the cleanup is running (this may take a while)..." 8 65 0
                                    if [ -f "/tmp/iota-hornet.lock" ]; then
                                        sudo rm -rf /tmp/iota-hornet.lock > /dev/null 2>&1
                                    fi
                                    whiptail --title "Hornet [IOTA] Management" --msgbox "Event database successfully reset." 8 65
                                fi
                            ;;
                            "5)")
                                if (whiptail --title "Hornet [IOTA] Management" --yesno --defaultno "Are you sure you want to delete the Hornet database?" 8 65); then
                                    if (whiptail --title "Hornet [IOTA] Management" --yesno --defaultno "Do you want to use an alternative source for the snapshot?" 8 65); then
                                        CHOICE=$(
                                            whiptail --title "Hornet [IOTA] Management" --menu "\nChoose your option" 24 65 0 \
                                            "" "" \
                                            "1)" "Download Snapshot for genesis" \
                                            "2)" "Download Snapshot via URL" 3>&2 2>&1 1>&3
                                        )
                                        exitstatus=$?
                                        if [ "$exitstatus" != "1" ]; then
                                            case $CHOICE in
                                                "1)")
                                                    source $swarmModule/swarmAuth
                                                    if [ "$swarmAuth" = "200" ]; then
                                                        iotaHornetSnapshotSourceValid=$(curl --max-time 2 -s -o /dev/null -w "%{http_code}" https://$swarmAuthUser:$swarmAuthPwd@$cdnUrl/snapshots/iota-mainnet/event/genesis_snapshot.bin)
                                                        if [ "$iotaHornetSnapshotSourceValid" = "200" ]; then
                                                            iotaHornetSnapshotSource="https://$swarmAuthUser:$swarmAuthPwd@$cdnUrl/snapshots/iota-mainnet/event/genesis_snapshot.bin"
                                                        else
                                                            unset iotaHornetSnapshotSourceValid
                                                            exitstatus=1
                                                        fi
                                                    else
                                                        exitstatus=1
                                                    fi
                                                ;;
                                                "2)")
                                                    iotaHornetSnapshotSource=$(whiptail --inputbox "\nPlease specify the download url for the full snapshot" 10 65 --title "Hornet [IOTA] Management" 3>&1 1>&2 2>&3)
                                                    exitstatus=$?
                                                    if [ "$exitStatus" != 1 ]; then
                                                        iotaHornetSnapshotSourceValid=$(curl --max-time 2 -s -o /dev/null -w "%{http_code}" $iotaHornetSnapshotSource)
                                                        if [ "$iotaHornetSnapshotSourceValid" != "200" ]; then
                                                            unset iotaHornetSnapshotSource iotaHornetSnapshotSourceValid
                                                            exitstatus=1
                                                        fi
                                                    else
                                                        unset iotaHornetSnapshotSource
                                                        exitstatus=1
                                                    fi
                                                ;;
                                            esac
                                        fi
                                    fi
                                    if [ "$exitstatus" != "1" ]; then
                                        source $swarmConfigs/iota-hornet.cfg
                                        if [ ! -f "/tmp/iota-hornet.lock" ]; then
                                            sudo touch /tmp/iota-hornet.lock > /dev/null 2>&1
                                        fi
                                        {
                                            echo 0
                                            echo 10
                                            for iotaInxPlugin in ${iotaInxPlugins[@]}
                                            do
                                                if [ -f "/usr/bin/iota-inx-$iotaInxPlugin" ]; then
                                                    if [ ! -f "/tmp/iota-inx-$iotaInxPlugin.lock" ]; then
                                                        sudo touch /tmp/iota-inx-$iotaInxPlugin.lock > /dev/null 2>&1
                                                    fi
                                                    sudo systemctl stop iota-inx-$iotaInxPlugin 2>/dev/null
                                                fi
                                            done
                                            unset iotaInxPlugin
                                            echo 20
                                            if [ "$killall" = "true" ]; then
                                                sudo killall -s SIGKILL iota-hornet > /dev/null 2>&1
                                            else
                                                sudo systemctl stop iota-hornet > /dev/null 2>&1
                                            fi
                                            echo 40
                                            sudo rm -rf $iotaHornetHome/${iotaHornetNetwork}/database $iotaHornetHome/${iotaHornetNetwork}/snapshots/*.bin > /dev/null 2>&1
                                            if [ ! -z "$iotaHornetSnapshotSource" ]; then
                                                sudo -u hornet wget -q -O $iotaHornetHome/${iotaHornetNetwork}/snapshots/full_snapshot.bin $iotaHornetSnapshotSource
                                            fi
                                            sudo sed -i 's/^iotaHornetStatusCounter=.*/iotaHornetStatusCounter=0/' $swarmConfigs/watchdog.cfg
                                            sudo sed -i 's/^iotaHornetSyncCounter=.*/iotaHornetSyncCounter=0/' $swarmConfigs/watchdog.cfg
                                            echo 60
                                            sudo systemctl start iota-hornet > /dev/null 2>&1
                                            echo 80
                                            for iotaInxPlugin in ${iotaInxPlugins[@]}
                                            do
                                                if [ -f "/usr/bin/iota-inx-$iotaInxPlugin" ]; then
                                                    sudo systemctl start iota-inx-$iotaInxPlugin 2>/dev/null
                                                    if [ -f "/tmp/iota-inx-$iotaInxPlugin.lock" ]; then
                                                        sudo rm -rf /tmp/iota-inx-$iotaInxPlugin.lock > /dev/null 2>&1
                                                    fi
                                                fi
                                            done
                                            unset iotaInxPlugin
                                            echo 100
                                            sleep 0.25
                                        } | whiptail --gauge "Please wait while the cleanup is running (this may take a while)..." 8 65 0
                                        if [ -f "/tmp/iota-hornet.lock" ]; then
                                            sudo rm -rf /tmp/iota-hornet.lock > /dev/null 2>&1
                                        fi
                                        whiptail --title "Hornet [IOTA] Management" --msgbox "${iotaHornetNetwork}DB successfully reset." 8 65
                                    fi
                                fi
                            ;;
                            "6)")
                                if (whiptail --title "Hornet [IOTA] Management" --yesno --defaultno "Are you sure you want to reset the hornet config file?" 8 65); then
                                    source $swarmConfigs/iota-hornet.cfg
                                    source $iotaHornetModule/iotaHornetConfigs
                                    if [ ! -f "/tmp/iota-hornet.lock" ]; then
                                        sudo touch /tmp/iota-hornet.lock > /dev/null 2>&1
                                    fi
                                    {
                                        echo 0
                                        echo 20
                                        sudo systemctl stop iota-hornet > /dev/null 2>&1
                                        echo 40
                                        sudo -u hornet wget -q -O $iotaHornetHome/$iotaHornetConfig.json https://raw.githubusercontent.com/iotaledger/hornet/production/config_defaults.json
                                        source $iotaHornetModule/iotaHornetParser
                                        echo 60
                                        for iotaInxPlugin in ${iotaInxPlugins[@]}
                                        do
                                            if [ -f "/usr/bin/iota-inx-$iotaInxPlugin" ]; then
                                                if [ ! -f "/tmp/iota-inx-$iotaInxPlugin.lock" ]; then
                                                    sudo touch /tmp/iota-inx-$iotaInxPlugin.lock > /dev/null 2>&1
                                                fi
                                                sudo systemctl stop iota-inx-$iotaInxPlugin 2>/dev/null
                                            fi
                                        done
                                        unset iotaInxPlugin
                                        sudo systemctl start iota-hornet > /dev/null 2>&1
                                        echo 80
                                        for iotaInxPlugin in ${iotaInxPlugins[@]}
                                        do
                                            if [ -f "/usr/bin/iota-inx-$iotaInxPlugin" ]; then
                                                sudo systemctl start iota-inx-$iotaInxPlugin 2>/dev/null
                                                if [ -f "/tmp/iota-inx-$iotaInxPlugin.lock" ]; then
                                                    sudo rm -rf /tmp/iota-inx-$iotaInxPlugin.lock > /dev/null 2>&1
                                                fi
                                            fi
                                        done
                                        unset iotaInxPlugin
                                        echo 100
                                        sleep 0.25
                                    } | whiptail --gauge "Please wait while the config reset is running (this may take a while)..." 8 65 0
                                    if [ -f "/tmp/iota-hornet.lock" ]; then
                                        sudo rm -rf /tmp/iota-hornet.lock > /dev/null 2>&1
                                    fi
                                    whiptail --title "Hornet [IOTA] Debugging" --msgbox "${iotaHornetNetwork} config successfully reset." 8 65
                                fi
                            ;;
                        esac
                    done
                    exitCode=0
                else
                    whiptail --title "Hornet [IOTA] Debugging" --msgbox "Hornet installation not found, please install Hornet first." 8 65
                fi
            ;;
            "4)")
                while [ $exitCode -lt 1 ]; do
                    CHOICE=$(
                        whiptail --title "Hornet [IOTA] Installer" --menu "\nChoose your option" 24 65 0 \
                        "" "" \
                        "1)" "Update Hornet" \
                        "2)" "Install Hornet" \
                        "3)" "Remove Hornet" 3>&2 2>&1 1>&3
                    )

                    exitstatus=$?
                    if [ "$exitstatus" = "1" ]; then
                        exitCode=1
                    fi

                    case $CHOICE in
                        "1)")
                            if [ -f "/usr/bin/iota-hornet" ]; then
                                if (whiptail --title "Hornet [IOTA] Installer" --yesno --defaultno "Do you really want to update Hornet?" 8 65); then
                                    # Update HORNET
                                    source $iotaHornetModule/iotaHornetVersion
                                    if [ ! -z "$latestIotaHornetVersion" ]; then
                                        if [ ! -f "/tmp/iota-hornet.lock" ]; then
                                            sudo touch /tmp/iota-hornet.lock > /dev/null 2>&1
                                        fi
                                        {
                                            echo 0
                                            echo 33
                                            source $iotaHornetModule/iotaHornetVersion
                                            echo 66
                                            source $iotaHornetModule/iotaHornetInstaller                      
                                            echo 100
                                            sleep 0.5
                                        } | whiptail --gauge "Please wait while Hornet is updated..." 8 65 0
                                        {
                                            # CALL MODULE CONFIGPARSER
                                            source $iotaHornetModule/iotaHornetParser
                                            for iotaInxPlugin in ${iotaInxPlugins[@]}
                                            do
                                                if [ -f "/usr/bin/iota-inx-$iotaInxPlugin" ]; then
                                                    if [ ! -f "/tmp/iota-inx-$iotaInxPlugin.lock" ]; then
                                                        sudo touch /tmp/iota-inx-$iotaInxPlugin.lock > /dev/null 2>&1
                                                    fi
                                                    sudo systemctl stop iota-inx-$iotaInxPlugin 2>/dev/null
                                                fi
                                            done
                                            unset iotaInxPlugin
                                            sudo systemctl restart iota-hornet 2>/dev/null
                                            sleep 5
                                            for iotaInxPlugin in ${iotaInxPlugins[@]}
                                            do
                                                if [ -f "/usr/bin/iota-inx-$iotaInxPlugin" ]; then
                                                    sudo systemctl start iota-inx-$iotaInxPlugin 2>/dev/null
                                                    if [ -f "/tmp/iota-inx-$iotaInxPlugin.lock" ]; then
                                                        sudo rm -rf /tmp/iota-inx-$iotaInxPlugin.lock > /dev/null 2>&1
                                                    fi
                                                fi
                                            done
                                            unset iotaInxPlugin
                                        } | whiptail --gauge "Please wait while parsing the configuration..." 8 65 0
                                        iotaHornetChecksum=$(cat /tmp/iota-hornet.checksum 2>/dev/null)
                                        whiptail --title "Hornet [IOTA] Installer" --msgbox "Hornet successfully updated.\n\nChecksum: $iotaHornetChecksum" 10 65
                                        if [ -f "/tmp/iota-hornet.checksum" ]; then
                                            sudo rm -rf /tmp/iota-hornet.checksum > /dev/null 2>&1
                                            unset iotaHornetChecksum
                                        fi
                                        if [ -f "/tmp/iota-hornet.lock" ]; then
                                            sudo rm -rf /tmp/iota-hornet.lock > /dev/null 2>&1
                                        fi
                                    else
                                        whiptail --title "Hornet [IOTA] Installer" --msgbox "Sorry, but Hornet update aborted." 10 65
                                    fi
                                fi
                            else
                                whiptail --title "Hornet [IOTA] Installer" --msgbox "Sorry, but Hornet is not installed." 8 65
                            fi
                        ;;
                        "2)")
                            if [ -f "/usr/bin/iota-hornet" ] || [ -f "/usr/bin/goiota" ] || [ -f "/usr/bin/wasp" ]; then
                                if (whiptail --title "Hornet [IOTA] Installer" --yesno --defaultno "Already installed nodes found on the system!\nIt is not recommended to run multiple nodes on one host.\n\nDo you still want to continue?" 12 65); then
                                    iotaHornetSkipInstallation=false
                                else
                                    iotaHornetSkipInstallation=true
                                fi
                            else
                                iotaHornetSkipInstallation=false
                            fi
                            # INSTALL Hornet
                            if [ ! -f "/usr/bin/iota-hornet" ] && [ "$iotaHornetSkipInstallation" = "false" ]; then
                                if [ ! -f "/tmp/iota-hornet.lock" ]; then
                                    sudo touch /tmp/iota-hornet.lock > /dev/null 2>&1
                                fi
                                source $swarmConfigs/iota-hornet.cfg
                                source $iotaHornetModule/iotaHornetConfigs
                                source $iotaHornetModule/iotaHornetVersion
                                {
                                    echo 0
                                    echo 10
                                    echo 30
                                    source $iotaHornetModule/iotaHornetInstaller
                                    echo 50
                                    if [ -f "/usr/bin/iota-hornet" ]; then
                                        source $swarmConfigs/iota-hornet.cfg
                                        echo 60
                                        # CALL MODULE CONFIGPARSER
                                        source $iotaHornetModule/iotaHornetParser
                                        echo 70
                                        if [ "$ufw" = "true" ]; then
                                            if [ "$iotaHornetRunAsEntryNode" != "true" ]; then
                                                sudo ufw allow $iotaHornetGossipPort/tcp > /dev/null 2>&1
                                            fi
                                            if [[ $iotaHornetEnablePlugins = *autopeering* ]]; then
                                                sudo ufw allow $iotaHornetAutopeeringPort/udp > /dev/null 2>&1
                                            fi
                                        fi
                                        sudo systemctl start iota-hornet > /dev/null 2>&1
                                        echo 80
                                        sleep 2
                                        iotaHornetStatus="$(systemctl show -p ActiveState --value iota-hornet)"
                                        if [ "$iotaHornetStatus" != "active" ]; then
                                            sudo systemctl restart iota-hornet > /dev/null 2>&1
                                        fi
                                        echo 100
                                    fi
                                } | whiptail --gauge "Please wait while installing Hornet..." 8 65 0
                                if [ -f "/usr/bin/iota-hornet" ]; then
                                    if [ -f "/tmp/iota-hornet.checksum" ]; then
                                        iotaHornetChecksum=$(cat /tmp/iota-hornet.checksum)
                                    fi
                                    whiptail --title "Hornet [IOTA] Installer" --msgbox "Hornet installation finished!\n\nYou need to open the following ports for peering\n\nGossip: $iotaHornetGossipPort/tcp\nAutopeering: $iotaHornetAutopeeringPort/udp\n\nChecksum: $iotaHornetChecksum" 17 65
                                    if [ -f "/tmp/iota-hornet.checksum" ]; then
                                        sudo rm -rf /tmp/iota-hornet.checksum > /dev/null 2>&1
                                    fi
                                    if (whiptail --title "Proxy [IOTA] Hornet" --yesno --defaultno "Do you want to set up the proxy with the installation?" 8 65); then
                                        source $swarmConfigs/proxy.cfg
                                        if [ -z "$proxyIotaHornetUrl" ]; then
                                            proxyUrl="example.com:443"
                                            proxyUrl=$(whiptail --inputbox "\nSet your domain and port for Hornet" 10 65 $proxyUrl --title "Proxy [IOTA] Hornet" 3>&1 1>&2 2>&3)
                                            exitStatus=$?
                                            if [ "$proxyUrl" = "my.example.com:443" ]; then
                                                unset proxyUrl
                                            fi
                                            if [ "$exitStatus" != "1" ]; then
                                                source $proxyModule/proxyUrlValidation
                                                if [ "$proxyUrlValid" = "true" ]; then
                                                    proxyIotaHornetUrl=$proxyUrl
                                                    sudo sed -i 's/^proxyIotaHornetUrl=.*/proxyIotaHornetUrl="'$proxyUrl'"/' $swarmConfigs/proxy.cfg
                                                    source $proxyModule/proxyDeployment
                                                fi
                                            fi
                                            unset proxyUrl proxyUrlValid
                                        else
                                            proxyUrl=$proxyIotaHornetUrl
                                            source $proxyModule/proxyUrlValidation
                                            if [ "$proxyUrlValid" = "true" ]; then
                                                source $proxyModule/proxyDeployment
                                            fi
                                            unset proxyUrl proxyUrlValid
                                        fi
                                    fi
                                else
                                    {
                                        echo 0
                                        echo 25
                                        source $swarmConfigs/iota-hornet.cfg
                                        echo 50
                                        source $iotaHornetModule/iotaHornetRemoval
                                        echo 75
                                        echo 100
                                    } | whiptail --gauge "Please wait while the Hornet files are removed..." 8 65 0
                                    whiptail --title "Hornet [IOTA] Installer" --msgbox "Error while installing Hornet! Please try again later." 8 65
                                fi
                                if [ -f "/tmp/iota-hornet.lock" ]; then
                                    sudo rm -rf /tmp/iota-hornet.lock > /dev/null 2>&1
                                fi
                            else
                                if [ -f "/usr/bin/iota-hornet" ]; then
                                    whiptail --title "Hornet [IOTA] Installer" --msgbox "Hornet already installed." 8 65
                                else
                                    if [ "$iotaHornetSkipInstallation" = "true" ]; then
                                        whiptail --title "Hornet [IOTA] Installer" --msgbox "Installation of Hornet aborted." 8 65
                                    fi
                                fi
                            fi
                            unset iotaHornetSkipInstallation iotaHornetChecksum
                        ;;
                        "3)")
                            if (whiptail --title "Hornet [IOTA] Installer" --yesno --defaultno "Do you really want to remove Hornet?" 8 65); then
                                {
                                    echo 0
                                    iotaHornetRemoval=true
                                    echo 50
                                    source $iotaHornetModule/iotaHornetRemoval
                                    echo 100
                                    sleep 0.5
                                } | whiptail --gauge "Please wait while Hornet will be removed..." 8 65 0
                                whiptail --title "Hornet [IOTA] Installer" --msgbox "Hornet successfully removed." 8 65
                            fi
                        ;;
                    esac
                done
                exitCode=0
            ;;
        esac
    done
    exitCode=0
else
    # HORNET MENU
    while [ $exitCode -lt 1 ]; do
        source $swarmConfigs/iota-hornet.cfg
        clear
        CHOICE=$(
            whiptail --title "Hornet [IOTA] Menu" --menu "\nChoose an option" 24 65 0 \
            "" "" \
            "1)" "Hornet Info" \
            "2)" "Hornet Configurations" \
            "3)" "Hornet Management" \
            "4)" "Hornet Installer" 3>&2 2>&1 1>&3
        )
        exitstatus=$?
        if [ "$exitstatus" = "1" ]; then
            exitCode=1
        fi

        case $CHOICE in
            "1)")
                source $iotaHornetModule/iotaHornetInfo
            ;;
            "2)")
                while [ $exitCode -lt 1 ]; do
                    clear
                    CHOICE=$(
                        whiptail --title "Hornet [IOTA] Configuration" --menu "\nChoose an option" 24 65 0 \
                        "" "" \
                        "1)" "Hornet configuration" \
                        "2)" "Advanced Configuration" 3>&2 2>&1 1>&3
                    )

                    exitstatus=$?
                    if [ "$exitstatus" = "1" ]; then
                        exitCode=1
                    fi

                    case $CHOICE in
                        "1)")
                            source $iotaHornetModule/iotaHornetConfiguration
                        ;;
                        "2)")
                            while [ $exitCode -lt 1 ]; do
                                clear
                                CHOICE=$(
                                    whiptail --title "Hornet [IOTA] Configuration" --menu "\nChoose an option" 24 65 0 \
                                    "" "" \
                                    "1)" "Peering.json" \
                                    "2)" "Mainnet.json" \
                                    "3)" "Iota-Hornet.cfg (SWARM)" 3>&2 2>&1 1>&3
                                )

                                exitstatus=$?
                                if [ "$exitstatus" = "1" ]; then
                                    exitCode=1
                                fi

                                case $CHOICE in
                                    "1)")
                                        sudo $swarmCLEditor $iotaHornetHome/peering.json
                                        if (whiptail --title "Hornet [IOTA] Configuration" --yesno --defaultno "Would you like to restart hornet now?" 8 65); then
                                            if [ ! -f "/tmp/iota-hornet.lock" ]; then
                                                sudo touch /tmp/iota-hornet.lock > /dev/null 2>&1
                                            fi
                                            {
                                                echo 0
                                                echo 50
                                                sudo systemctl restart iota-hornet > /dev/null 2>&1
                                                echo 100
                                                sleep 0.25
                                            } | whiptail --gauge "Please wait while Hornet is restarting..." 8 65 0
                                            if [ -f "/tmp/iota-hornet.lock" ]; then
                                                sudo rm -rf /tmp/iota-hornet.lock > /dev/null 2>&1
                                            fi
                                        fi
                                    ;;
                                    "2)")
                                        sudo $swarmCLEditor $iotaHornetHome/config.json
                                        if (whiptail --title "Hornet [IOTA] Configuration" --yesno --defaultno "Would you like to restart hornet now?" 8 65); then
                                            if [ ! -f "/tmp/iota-hornet.lock" ]; then
                                                sudo touch /tmp/iota-hornet.lock > /dev/null 2>&1
                                            fi
                                            {
                                                echo 0
                                                echo 50
                                                sudo systemctl restart iota-hornet > /dev/null 2>&1
                                                echo 100
                                                sleep 0.25
                                            } | whiptail --gauge "Please wait while Hornet is restarting..." 8 65 0
                                            if [ -f "/tmp/iota-hornet.lock" ]; then
                                                sudo rm -rf /tmp/iota-hornet.lock > /dev/null 2>&1
                                            fi
                                        fi
                                    ;;
                                    "3)")
                                        sudo $swarmCLEditor $swarmConfigs/iota-hornet.cfg
                                        if (whiptail --title "Hornet [IOTA] Configuration" --yesno --defaultno "Would you like to restart hornet now?" 8 65); then
                                            if [ ! -f "/tmp/iota-hornet.lock" ]; then
                                                sudo touch /tmp/iota-hornet.lock > /dev/null 2>&1
                                            fi
                                            {
                                                echo 0
                                                source $iotaHornetModule/iotaHornetParser
                                                echo 50
                                                sudo systemctl restart itota-hornet > /dev/null 2>&1
                                                echo 100
                                                sleep 0.25
                                            } | whiptail --gauge "Please wait while Hornet is restarting..." 8 65 0
                                            if [ -f "/tmp/iota-hornet.lock" ]; then
                                                sudo rm -rf /tmp/iota-hornet.lock > /dev/null 2>&1
                                            fi
                                        fi
                                    ;;
                                esac
                            done
                            exitCode=0
                        ;;
                    esac
                done
                exitCode=0
            ;;
            "3)")
                if [ -f "/usr/bin/iota-hornet" ]; then
                    while [ $exitCode -lt 1 ]; do
                        clear
                        CHOICE=$(
                            whiptail --title "Hornet [IOTA] Management" --menu "\nChoose your option" 24 65 0 \
                            "" "" \
                            "1)" "Event Validation" \
                            "2)" "Show Hornet log" \
                            "3)" "Start/Stop Hornet" \
                            "4)" "Reset Hornet event database" \
                            "5)" "Reset Hornet all databases" \
                            "6)" "Reset Hornet config" 3>&2 2>&1 1>&3
                        )
                        exitstatus=$?
                        if [ "$exitstatus" = "1" ]; then
                            exitCode=1
                        fi
                        case $CHOICE in
                            "1)")
                                while [ $exitCode -lt 1 ]; do
                                    clear
                                    CHOICE=$(
                                        whiptail --title "Hornet [IOTA] Events" --menu "\nChoose your option" 24 65 0 \
                                        "" "" \
                                        "1)" "Event Validation" \
                                        "2)" "Show latest event results" 3>&2 2>&1 1>&3
                                    )
                                    exitstatus=$?
                                    if [ "$exitstatus" = "1" ]; then
                                        exitCode=1
                                    fi
                                    case $CHOICE in
                                        "1)")
                                            while [ $exitCode -lt 1 ]; do
                                                CHOICE=$(
                                                    whiptail --title "Hornet [IOTA] Events" --menu "\nChoose your option" 24 65 0 \
                                                    "" "" \
                                                    "1)" "Validate Staking Event" \
                                                    "2)" "Validate Voting Event" 3>&2 2>&1 1>&3
                                                )
                                                exitStatus=$?
                                                if [ "$exitStatus" = "1" ]; then
                                                    exitCode=1
                                                fi
                                                if [ "$exitStatus" = "0" ]; then
                                                    case $CHOICE in
                                                        "1)")
                                                            eventType="staking"
                                                        ;;
                                                        "2)")
                                                            eventType="ballot"
                                                        ;;
                                                    esac
                                                    eventId=$(whiptail --inputbox "\nPlease enter the event id you want to validate" 10 65 --title "Hornet [IOTA] Events" 3>&1 1>&2 2>&3)
                                                    exitStatus=$?
                                                    if [ $exitStatus != 1 ] && [ ! -z "$eventId" ]; then
                                                        eventNetwork="iota"
                                                        source $swarmSharedModule/eventValidation
                                                    fi
                                                fi
                                            done
                                            exitCode=0
                                        ;;
                                        "2)")
                                            if [ -f "/tmp/participation-event.log" ]; then
                                                clear
                                                echo ""
                                                cat /tmp/participation-event.log
                                                echo ""
                                                echo ""
                                                read -n 1 -s -r -p "Press any key to continue"
                                            else
                                                whiptail --title "Hornet [IOTA] Events" --msgbox "No log file was found, please validate an event first." 8 65
                                            fi
                                        ;;
                                    esac
                                done
                                exitCode=0
                            ;;
                            "2)")
                                # Display last 65 lines of log
                                sudo journalctl -fu iota-hornet | less -FRSXM
                                clear
                            ;;
                            "3)")
                                while [ $exitCode -lt 1 ]; do
                                    CHOICE=$(
                                        whiptail --title "Hornet [IOTA] Management" --menu "\nChoose your option" 24 65 0 \
                                        "" "" \
                                        "1)" "Restart Hornet" \
                                        "2)" "Start Hornet" \
                                        "3)" "Stop Hornet" \
                                        "4)" "Status Hornet" 3>&2 2>&1 1>&3
                                    )
                                    exitStatus=$?
                                    if [ "$exitStatus" = "1" ]; then
                                        exitCode=1
                                    fi
                                    case $CHOICE in
                                        "1)")
                                            if [ ! -f "/tmp/iota-hornet.lock" ]; then
                                                sudo touch /tmp/iota-hornet.lock > /dev/null 2>&1
                                            fi
                                            {
                                                echo 0
                                                echo 50
                                                sudo systemctl restart iota-hornet > /dev/null 2>&1
                                                echo 100
                                                sleep 0.25
                                            } | whiptail --gauge "Please wait while Hornet is restarting..." 8 65 0
                                            if [ -f "/tmp/iota-hornet.lock" ]; then
                                                sudo rm -rf /tmp/iota-hornet.lock > /dev/null 2>&1
                                            fi
                                            whiptail --title "Hornet [IOTA] Management" --msgbox "Hornet successfully restarted" 8 65
                                        ;;
                                        "2)")
                                            {
                                                echo 0
                                                echo 50
                                                sudo systemctl start iota-hornet > /dev/null 2>&1
                                                echo 100
                                                sleep 0.25
                                            } | whiptail --gauge "Please wait while Hornet is starting..." 8 65 0
                                            if [ -f "/tmp/iota-hornet.lock" ]; then
                                                sudo rm -rf /tmp/iota-hornet.lock > /dev/null 2>&1
                                            fi
                                            whiptail --title "Hornet [IOTA] Management" --msgbox "Hornet successfully started" 8 65
                                        ;;
                                        "3)")
                                            if [ ! -f "/tmp/iota-hornet.lock" ]; then
                                                sudo touch /tmp/iota-hornet.lock > /dev/null 2>&1
                                            fi
                                            {
                                                echo 0
                                                echo 50
                                                sudo systemctl stop iota-hornet > /dev/null 2>&1
                                                echo 100
                                                sleep 0.25
                                            } | whiptail --gauge "Please wait while Hornet is stopping..." 8 65 0
                                            whiptail --title "Hornet [IOTA] Management" --msgbox "Hornet successfully stopped." 8 65
                                        ;;
                                        "4)")
                                            iotaHornetStatus="$(sudo systemctl status iota-hornet)"
                                            whiptail --title "Hornet [IOTA] Management" --msgbox "$iotaHornetStatus" 15 65
                                        ;;
                                    esac
                                done
                                exitCode=0
                            ;;
                            "4)")
                                if (whiptail --title "Hornet [IOTA] Management" --yesno --defaultno "Are you sure you want to delete the hornet event database?" 8 65); then
                                    source $swarmConfigs/iota-hornet.cfg
                                    if [ ! -f "/tmp/iota-hornet.lock" ]; then
                                        sudo touch /tmp/iota-hornet.lock > /dev/null 2>&1
                                    fi
                                    {
                                        echo 0
                                        echo 25
                                        sudo systemctl stop iota-hornet > /dev/null 2>&1
                                        echo 50
                                        sudo rm -rf $iotaHornetHome/${iotaHornetNetwork}db/participation > /dev/null 2>&1
                                        echo 75
                                        sudo systemctl start iota-hornet > /dev/null 2>&1
                                        echo 100
                                        sleep 0.25
                                    } | whiptail --gauge "Please wait while the cleanup is running (this may take a while)..." 8 65 0
                                    if [ -f "/tmp/iota-hornet.lock" ]; then
                                        sudo rm -rf /tmp/iota-hornet.lock > /dev/null 2>&1
                                    fi
                                    whiptail --title "Hornet [IOTA] Management" --msgbox "Event database successfully reset." 8 65
                                fi
                            ;;
                            "5)")
                                if (whiptail --title "Hornet [IOTA] Management" --yesno --defaultno "Are you sure you want to delete the hornet database?" 8 65); then
                                    if (whiptail --title "Hornet [IOTA] Management" --yesno --defaultno "Do you want to use an alternative source for the snapshot?" 8 65); then
                                        CHOICE=$(
                                            whiptail --title "Hornet [IOTA] Management" --menu "\nChoose your option" 24 65 0 \
                                            "" "" \
                                            "1)" "Download Snapshot for ASMB 3" \
                                            "2)" "Download Snapshot for ICG Vote" \
                                            "3)" "Download Snapshot for ASMB 2" \
                                            "4)" "Download Snapshot for ASMB/SMR" \
                                            "5)" "Download Snapshot via URL" 3>&2 2>&1 1>&3
                                        )
                                        exitstatus=$?
                                        if [ "$exitstatus" != "1" ]; then
                                            case $CHOICE in
                                                "1)")
                                                    source $swarmModule/swarmAuth
                                                    if [ "$swarmAuth" = "200" ]; then
                                                        iotaHornetSnapshotSourceValid=$(curl --max-time 2 -s -o /dev/null -w "%{http_code}" https://$swarmAuthUser:$swarmAuthPwd@$cdnUrl/snapshots/full_snapshot-asmb3.bin)
                                                        if [ "$iotaHornetSnapshotSourceValid" = "200" ]; then
                                                            iotaHornetSnapshotSource="https://$swarmAuthUser:$swarmAuthPwd@$cdnUrl/snapshots/full_snapshot-asmb3.bin"
                                                        else
                                                            exitstatus=1
                                                        fi
                                                    else
                                                        exitstatus=1
                                                    fi
                                                ;;
                                                "2)")
                                                    source $swarmModule/swarmAuth
                                                    if [ "$swarmAuth" = "200" ]; then
                                                        iotaHornetSnapshotSourceValid=$(curl --max-time 2 -s -o /dev/null -w "%{http_code}" https://$swarmAuthUser:$swarmAuthPwd@$cdnUrl/snapshots/full_iota-community-governance-vote.bin)
                                                        if [ "$iotaHornetSnapshotSourceValid" = "200" ]; then
                                                            iotaHornetSnapshotSource="https://$swarmAuthUser:$swarmAuthPwd@$cdnUrl/snapshots/full_iota-community-governance-vote.bin"
                                                        else
                                                            exitstatus=1
                                                        fi
                                                    else
                                                        exitstatus=1
                                                    fi
                                                ;;
                                                "3)")
                                                    source $swarmModule/swarmAuth
                                                    if [ "$swarmAuth" = "200" ]; then
                                                        iotaHornetSnapshotSourceValid=$(curl --max-time 2 -s -o /dev/null -w "%{http_code}" https://$swarmAuthUser:$swarmAuthPwd@$cdnUrl/snapshots/full_snapshot-asmb2.bin)
                                                        if [ "$iotaHornetSnapshotSourceValid" = "200" ]; then
                                                            iotaHornetSnapshotSource="https://$swarmAuthUser:$swarmAuthPwd@$cdnUrl/snapshots/full_snapshot-asmb2.bin"
                                                        else
                                                            exitstatus=1
                                                        fi
                                                    else
                                                        exitstatus=1
                                                    fi
                                                ;;
                                                "4)")
                                                    source $swarmModule/swarmAuth
                                                    if [ "$swarmAuth" = "200" ]; then
                                                        iotaHornetSnapshotSourceValid=$(curl --max-time 2 -s -o /dev/null -w "%{http_code}" https://$swarmAuthUser:$swarmAuthPwd@$cdnUrl/snapshots/full_snapshot-asmb-smr.bin)
                                                        if [ "$iotaHornetSnapshotSourceValid" = "200" ]; then
                                                            iotaHornetSnapshotSource="https://$swarmAuthUser:$swarmAuthPwd@$cdnUrl/snapshots/full_snapshot-asmb-smr.bin"
                                                        else
                                                            exitstatus=1
                                                        fi
                                                    else
                                                        exitstatus=1
                                                    fi
                                                ;;
                                                "5)")
                                                    iotaHornetSnapshotSource=$(whiptail --inputbox "\nPlease specify the download url for the full snapshot" 10 65 --title "Hornet (IOTA) - Management" 3>&1 1>&2 2>&3)
                                                    exitstatus=$?
                                                    if [ "$exitStatus" != 1 ]; then
                                                        iotaHornetSnapshotSourceValid=$(curl --max-time 2 -s -o /dev/null -w "%{http_code}" $iotaHornetSnapshotSource)
                                                        if [ "$iotaHornetSnapshotSourceValid" != "200" ]; then
                                                            exitstatus=1
                                                        fi
                                                    else
                                                        exitstatus=1
                                                    fi
                                                ;;
                                            esac
                                        fi
                                    fi
                                    if [ "$exitstatus" != "1" ]; then
                                        if [ ! -f "/tmp/iota-hornet.lock" ]; then
                                            sudo touch /tmp/iota-hornet.lock > /dev/null 2>&1
                                        fi
                                        source $swarmConfigs/iota-hornet.cfg
                                        source $iotaHornetModule/iotaHornetConfigs
                                        {
                                            echo 0
                                            echo 20
                                            if [ "$killall" = "true" ]; then
                                                sudo killall -s SIGKILL iota-hornet > /dev/null 2>&1
                                            else
                                                sudo systemctl stop iota-hornet > /dev/null 2>&1
                                            fi
                                            echo 40
                                            sudo rm -rf $iotaHornetHome/${iotaHornetNetwork}db $iotaHornetHome/snapshots/${iotaHornetNetwork}/*.bin
                                            if [ ! -z "$iotaHornetSnapshotSource" ]; then
                                                sudo -u hornet wget -q -O $iotaHornetHome/snapshots/${iotaHornetNetwork}/full_snapshot.bin $iotaHornetSnapshotSource
                                            fi
                                            if [[ $iotaHornetEnablePlugins = *participation* ]]; then
                                                iotaHornetDisableParticipation=true
                                                source $iotaHornetConfigParsers/iotaHornetEnablePlugins
                                                unset iotaHornetDisableParticipation restartIotaHornet
                                            fi
                                            sudo sed -i 's/^iotaHornetStatusCounter=.*/hornetStatusCounter=0/' $swarmConfigs/watchdog.cfg
                                            echo 60
                                            sudo systemctl start iota-hornet > /dev/null 2>&1
                                            echo 80
                                            if [[ $iotaHornetEnablePlugins = *participation* ]]; then
                                                swarmSleepCounter=1
                                                whiptailGauge=85
                                                while [ $swarmSleepCounter -lt 3 ]; do
                                                    sleep 5
                                                    echo $whiptailGauge
                                                    let whiptailGauge=$whiptailGauge+5
                                                    let swarmSleepCounter=$swarmSleepCounter+1
                                                done
                                                unset swarmSleepCounter whiptailGauge
                                                source $iotaHornetConfigParsers/iotaHornetEnablePlugins
                                                if [ "$restartIotaHornet" = "true" ]; then
                                                    sudo systemctl restart iota-hornet > /dev/null 2>&1
                                                    unset restartIotaHornet
                                                fi
                                            fi
                                            echo 100
                                            sleep 0.25
                                        } | whiptail --gauge "Please wait while the cleanup is running (this may take a while)..." 8 65 0
                                        if [ -f "/tmp/iota-hornet.lock" ]; then
                                            sudo rm -rf /tmp/iota-hornet.lock > /dev/null 2>&1
                                        fi
                                        whiptail --title "Hornet [IOTA] Management" --msgbox "${iotaHornetNetwork}DB successfully reset." 8 65
                                    fi
                                fi
                            ;;
                            "6)")
                                if (whiptail --title "Hornet [IOTA] Management" --yesno --defaultno "Are you sure you want to reset the hornet config file?" 8 65); then
                                    source $swarmConfigs/iota-hornet.cfg
                                    source $iotaHornetModule/iotaHornetConfigs
                                    if [ ! -f "/tmp/iota-hornet.lock" ]; then
                                        sudo touch /tmp/iota-hornet.lock > /dev/null 2>&1
                                    fi
                                    {
                                        echo 0
                                        echo 20
                                        sudo systemctl stop iota-hornet > /dev/null 2>&1
                                        echo 40
                                        if [ "$iotaHornetNetwork" = "mainnet" ]; then
                                            sudo -u hornet wget -q -O $iotaHornetHome/config.json https://raw.githubusercontent.com/iotaledger/hornet/production/$iotaHornetConfig.json
                                        else
                                            sudo -u hornet wget -q -O $iotaHornetHome/$iotaHornetConfig.json https://raw.githubusercontent.com/iotaledger/hornet/develop/$iotaHornetConfig.json
                                        fi
                                        echo 60
                                        source $iotaHornetModule/iotaHornetParser
                                        echo 80
                                        sudo systemctl start iota-hornet > /dev/null 2>&1
                                        echo 100
                                        sleep 0.25
                                    } | whiptail --gauge "Please wait while the config reset is running (this may take a while)..." 8 65 0
                                    if [ -f "/tmp/iota-hornet.lock" ]; then
                                        sudo rm -rf /tmp/iota-hornet.lock > /dev/null 2>&1
                                    fi
                                    whiptail --title "Hornet [IOTA] Management" --msgbox "${iotaHornetNetwork} config successfully reset." 8 65
                                fi
                            ;;
                        esac
                    done
                    exitCode=0
                else
                    whiptail --title "Hornet [IOTA] Management" --msgbox "Hornet installation not found, please install Hornet first." 8 65
                fi
            ;;
            "4)")
                while [ $exitCode -lt 1 ]; do
                    CHOICE=$(
                        whiptail --title "Hornet [IOTA] Installer" --menu "\nChoose your option" 24 65 0 \
                        "" "" \
                        "1)" "Update Hornet" \
                        "2)" "Install Hornet" \
                        "3)" "Remove Hornet" 3>&2 2>&1 1>&3
                    )

                    exitstatus=$?
                    if [ "$exitstatus" = "1" ]; then
                        exitCode=1
                    fi

                    case $CHOICE in
                        "1)")
                            if [ -f "/usr/bin/iota-hornet" ]; then
                                if (whiptail --title "Hornet [IOTA] Installer" --yesno --defaultno "Do you really want to update Hornet?" 8 65); then
                                    # Update HORNET
                                    source $iotaHornetModule/iotaHornetVersion
                                    if [ ! -z "$latestIotaHornetVersion" ]; then
                                        if [ ! -f "/tmp/iota-hornet.lock" ]; then
                                            sudo touch /tmp/iota-hornet.lock > /dev/null 2>&1
                                        fi
                                        {
                                            echo 0
                                            echo 33
                                            source $iotaHornetModule/iotaHornetInstaller
                                            echo 66
                                            source $iotaHornetModule/iotaHornetParser
                                            echo 100
                                            sleep 0.5
                                        } | whiptail --gauge "Please wait while Hornet is updated..." 8 65 0
                                        {
                                            echo 0
                                            echo 33
                                            sudo systemctl restart iota-hornet
                                            echo 66
                                            echo 100
                                        } | whiptail --gauge "Please wait while restarting Hornet..." 8 65 0
                                        iotaHornetChecksum=$(cat /tmp/iota-hornet.checksum 2>/dev/null)
                                        whiptail --title "Hornet [IOTA] Installer" --msgbox "Hornet successfully updated.\n\nChecksum: $iotaHornetChecksum" 10 65
                                        if [ -f "/tmp/iota-hornet.checksum" ]; then
                                            sudo rm -rf /tmp/iota-hornet.checksum 2>/dev/null
                                            unset iotaHornetChecksum
                                        fi
                                        if [ -f "/tmp/iota-hornet.lock" ]; then
                                            sudo rm -rf /tmp/iota-hornet.lock > /dev/null 2>&1
                                        fi
                                    else
                                        whiptail --title "Hornet [IOTA] Installer" --msgbox "Sorry, but Hornet update aborted." 10 65
                                    fi
                                fi
                                unset iotaHornetChecksum
                            else
                                whiptail --title "Hornet [IOTA] Installer" --msgbox "Sorry, but Hornet is not installed." 8 65
                            fi
                        ;;
                        "2)")
                            if [ -f "/usr/bin/iota-hornet" ] || [ -f "/usr/bin/goiota" ] || [ -f "/usr/bin/wasp" ]; then
                                if (whiptail --title "Hornet [IOTA] Installer" --yesno --defaultno "Already installed nodes found on the system!\nIt is not recommended to run multiple nodes on one host.\n\nDo you still want to continue?" 12 65); then
                                    iotaHornetSkipInstallation=false
                                else
                                    iotaHornetSkipInstallation=true
                                fi
                            else
                                iotaHornetSkipInstallation=false
                            fi
                            # INSTALL Hornet
                            if [ ! -f "/usr/bin/iota-hornet" ] && [ "$iotaHornetSkipInstallation" = "false" ]; then
                                if [ ! -f "/tmp/iota-hornet.lock" ]; then
                                    sudo touch /tmp/iota-hornet.lock > /dev/null 2>&1
                                fi
                                {
                                    echo 0
                                    echo 10
                                    source $swarmConfigs/iota-hornet.cfg
                                    echo 30
                                    source $iotaHornetModule/iotaHornetVersion
                                    echo 40
                                    source $iotaHornetModule/iotaHornetInstaller
                                    echo 50
                                    if [ -f "/usr/bin/iota-hornet" ]; then
                                        source $swarmConfigs/iota-hornet.cfg
                                        echo 60
                                        # CALL MODULE CONFIGPARSER
                                        source $iotaHornetModule/iotaHornetParser
                                        echo 70
                                        if [ "$ufw" = "true" ]; then
                                            if [ "$iotaHornetRunAsEntryNode" != "true" ]; then
                                                sudo ufw allow $iotaHornetGossipPort/tcp > /dev/null 2>&1
                                            fi
                                            if [[ $iotaHornetEnablePlugins = *autopeering* ]]; then
                                                sudo ufw allow $iotaHornetAutopeeringPort/udp > /dev/null 2>&1
                                            fi
                                        fi
                                        sudo systemctl start iota-hornet > /dev/null 2>&1
                                        echo 80
                                        sleep 2
                                        iotaHornetStatus="$(systemctl show -p ActiveState --value iota-hornet)"
                                        if [ "$iotaHornetStatus" != "active" ]; then
                                            sudo systemctl restart iota-hornet > /dev/null 2>&1
                                        fi
                                        echo 100
                                    fi
                                } | whiptail --gauge "Please wait while installing Hornet..." 8 65 0
                                if [ -f "/usr/bin/iota-hornet" ]; then
                                    if [ -f "/tmp/iota-hornet.checksum" ]; then
                                        iotaHornetChecksum=$(cat /tmp/iota-hornet.checksum)
                                    fi
                                    whiptail --title "Hornet [IOTA] Installer" --msgbox "Hornet installation finished!\n\nYou need to open the following ports for peering\n\nGossip: $iotaHornetGossipPort/tcp\nAutopeering: $iotaHornetAutopeeringPort/udp\n\nChecksum: $iotaHornetChecksum" 17 65
                                    if [ -f "/tmp/iota-hornet.checksum" ]; then
                                        sudo rm -rf /tmp/iota-hornet.checksum > /dev/null 2>&1
                                    fi
                                    if (whiptail --title "Proxy [IOTA] Hornet" --yesno --defaultno "Do you want to set up the proxy with the installation?" 8 65); then
                                        source $swarmConfigs/proxy.cfg
                                        if [ -z "$proxyIotaHornetUrl" ]; then
                                            proxyUrl="example.com:443"
                                            proxyUrl=$(whiptail --inputbox "\nSet your domain and port for Hornet" 10 65 $proxyUrl --title "Proxy [IOTA] Hornet" 3>&1 1>&2 2>&3)
                                            exitStatus=$?
                                            if [ "$proxyUrl" = "my.example.com:443" ]; then
                                                unset proxyUrl
                                            fi
                                            if [ "$exitStatus" != "1" ]; then
                                                source $proxyModule/proxyUrlValidation
                                                if [ "$proxyUrlValid" = "true" ]; then
                                                    proxyIotaHornetUrl=$proxyUrl
                                                    sudo sed -i 's/^proxyIotaHornetUrl=.*/proxyIotaHornetUrl="'$proxyUrl'"/' $swarmConfigs/proxy.cfg
                                                    source $proxyModule/proxyDeployment
                                                fi
                                            fi
                                            unset proxyUrl proxyUrlValid
                                        else
                                            proxyUrl=$proxyIotaHornetUrl
                                            source $proxyModule/proxyUrlValidation
                                            if [ "$proxyUrlValid" = "true" ]; then
                                                source $proxyModule/proxyDeployment
                                            fi
                                            unset proxyUrl proxyUrlValid
                                        fi
                                    fi
                                else
                                    {
                                        echo 0
                                        echo 25
                                        source $swarmConfigs/iota-hornet.cfg
                                        echo 50
                                        source $iotaHornetModule/iotaHornetRemoval
                                        echo 75
                                        echo 100
                                    } | whiptail --gauge "Please wait while the Hornet files are removed...." 8 65 0
                                    whiptail --title "Hornet [IOTA] Installer" --msgbox "Error while installing Hornet! Please try again later." 8 65
                                fi
                                if [ -f "/tmp/iota-hornet.lock" ]; then
                                    sudo rm -rf /tmp/iota-hornet.lock > /dev/null 2>&1
                                fi
                            else
                                if [ -f "/usr/bin/iota-hornet" ]; then
                                    whiptail --title "Hornet [IOTA] Installer" --msgbox "Hornet already installed." 8 65
                                else
                                    if [ "$iotaHornetSkipInstallation" = "true" ]; then
                                        whiptail --title "Hornet [IOTA] Installer" --msgbox "Installation of Hornet aborted." 8 65
                                    fi
                                fi
                            fi
                            unset iotaHornetSkipInstallation iotaHornetChecksum
                        ;;
                        "3)")
                            if (whiptail --title "Hornet [IOTA] Installer" --yesno --defaultno "Do you really want to remove Hornet?" 8 65); then
                                {
                                    echo 0
                                    echo 50
                                    source $iotaHornetModule/iotaHornetRemoval
                                    echo 100
                                    sleep 0.5
                                } | whiptail --gauge "Please wait while Hornet will be removed..." 8 65 0
                                whiptail --title "Hornet [IOTA] Installer" --msgbox "Hornet successfully removed." 8 65
                            fi
                        ;;
                    esac
                done
                exitCode=0
            ;;
        esac
    done
    exitCode=0
fi
