#!/bin/bash

echo "====== INSTALLATION STARTED ======" > /tmp/iotaHornetInstaller.log
# General
if ! id hornet >/dev/null 2>&1; then
    echo "-> Create user" >> /tmp/iotaHornetInstaller.log
    useradd --no-create-home --system hornet >/dev/null
fi

if [ ! -d "$iotaHornetHome" ]; then
    echo "-> Create home folder" >> /tmp/iotaHornetInstaller.log
    sudo mkdir -p $iotaHornetHome > /dev/null 2>&1
    sudo chown -R hornet:hornet $iotaHornetHome > /dev/null 2>&1
fi

if [ ! -f "/usr/bin/iota-hornet" ]; then
    iotaHornetFirstInstall=true
fi

# Install GO
if ! [ -x "$(command -v go)" ] > /dev/null 2>&1; then
    echo "-> Install go via snap" >> /tmp/iotaHornetInstaller.log
    sudo snap install go --classic > /dev/null 2>&1
fi

# Create Service
if [ ! -f "/lib/systemd/system/iota-hornet.service" ]; then
    echo "-> Copy new service file from templates" >> /tmp/iotaHornetInstaller.log
    sudo cp -rf $swarmTemplates/app-service/iota-hornet.service /lib/systemd/system/iota-hornet.service > /dev/null 2>&1
    if [ ! -f "/etc/systemd/system/multi-user.target.wants/iota-hornet.service" ]; then
        echo "-> Register service" >> /tmp/iotaHornetInstaller.log
        sudo systemctl enable iota-hornet > /dev/null 2>&1
    fi
    sudo systemctl daemon-reload > /dev/null 2>&1
fi

if [ -f "/etc/default/iota-hornet" ]; then
    iotaHornetServiceDefault=$(cat /etc/default/iota-hornet)
    if [[ $iotaHornetServiceDefault = *config.json* ]]; then
        sudo rm -rf /etc/default/iota-hornet > /dev/null 2>&1
    fi
    unset iotaHornetServiceDefault
fi
if [ ! -f "/etc/default/iota-hornet" ]; then
    if [ "$iotaHornetNetwork" = "mainnet" ]; then
        echo "-> Create OPTIONS file for service" >> /tmp/iotaHornetInstaller.log
        echo "OPTIONS=\"--config config_mainnet.json\"" > /etc/default/iota-hornet
    fi
fi

##############################################################################################################################################

# Create dir if not exist
echo "-> Create tmp folder" >> /tmp/iotaHornetInstaller.log
sudo mkdir -p /tmp/iota-hornet > /dev/null 2>&1

# Download latest iota-hornet
echo "-> Download archive for v${latestIotaHornetVersion}" >> /tmp/iotaHornetInstaller.log
( cd /tmp/iota-hornet/ ; sudo wget -q https://$cdnUrl/apps/hornet/v${latestIotaHornetVersion}/hornet-v${latestIotaHornetVersion}_linux_$osArchitecture.tar.gz )
if [ -f "/tmp/iota-hornet/hornet-v${latestIotaHornetVersion}_linux_$osArchitecture.tar.gz" ]; then
    iotaHornetDownloadChecksum=$(sudo shasum -a 512 /tmp/iota-hornet/hornet-v${latestIotaHornetVersion}_linux_$osArchitecture.tar.gz | awk '{ print $1 }')
    echo "-> Generate local checksum: $iotaHornetDownloadChecksum" >> /tmp/iotaHornetInstaller.log
fi

# Download checksum
echo "-> Download remote checksum file" >> /tmp/iotaHornetInstaller.log
( cd /tmp/iota-hornet/ ; sudo wget -q https://$cdnUrl/apps/hornet/v${latestIotaHornetVersion}/hornet_checksums_linux_$osArchitecture.txt )
iotaHornetChecksum=$(sudo cat /tmp/iota-hornet/hornet_checksums_linux_$osArchitecture.txt | awk '{ print $1 }')
echo $iotaHornetChecksum > /tmp/iota-hornet.checksum
echo "-> Remote checksum: $iotaHornetChecksum" >> /tmp/iotaHornetInstaller.log

# Unzip archive
if [ "$iotaHornetDownloadChecksum" = "$iotaHornetChecksum" ] && [ ! -z "$iotaHornetDownloadChecksum" ] && [ ! -z "$iotaHornetChecksum" ]; then
    echo "-> Unzip archive" >> /tmp/iotaHornetInstaller.log
    ( cd /tmp/iota-hornet ; sudo tar -xzf /tmp/iota-hornet/hornet-v${latestIotaHornetVersion}_linux_$osArchitecture.tar.gz ) > /dev/null 2>&1

    # Copy binary
    if [ -f "/tmp/iota-hornet/hornet" ]; then
        iotaHornetStatus="$(systemctl show -p ActiveState --value iota-hornet)"
        if [ "$iotaHornetStatus" = "active" ]; then
            echo "-> Stop service" >> /tmp/iotaHornetInstaller.log
            sudo systemctl stop iota-hornet > /dev/null 2>&1
        fi

        echo "-> Copy new binary file" >> /tmp/iotaHornetInstaller.log
        sudo cp -rf /tmp/iota-hornet/hornet /usr/bin/iota-hornet > /dev/null 2>&1
        sudo chmod +x /usr/bin/iota-hornet > /dev/null 2>&1
        newIotaHornetBinary=true
    fi
fi

##############################################################################################################################################

if [ "$newIotaHornetBinary" = "true" ]; then
    ### Mainnet Config
    if [ "$iotaHornetNetwork" = "mainnet" ]; then
        if [ -f "/tmp/iota-hornet/hornet-${latestIotaHornetVersion}_Linux_$osArchitecture/config_iota.json" ]; then
            echo "-> Copy new config file" >> /tmp/iotaHornetInstaller.log
            sudo cp -rf /tmp/iota-hornet/hornet-${latestIotaHornetVersion}_Linux_$osArchitecture/config_iota.json $iotaHornetHome/config_mainnet.json > /dev/null 2>&1
            if [ -s "$iotaHornetHome/config_mainnet.json" ]; then
                newIotaHornetConfig=true
            fi
        fi
    fi
fi

##############################################################################################################################################

if [ "$newIotaHornetConfig" = "true" ]; then
    # Run installer modules
    echo "-> Set permissions" >> /tmp/iotaHornetInstaller.log
    sudo chown -R hornet:hornet $iotaHornetHome > /dev/null 2>&1
    sudo chmod 644 $iotaHornetHome/*.json > /dev/null 2>&1

    restartIotaHornet=true
    iotaHornetUpdated=true
fi

# Remove temporary files
echo "-> Remove tmp folder" >> /tmp/iotaHornetInstaller.log
sudo rm -rf /tmp/iota-hornet > /dev/null 2>&1

if [ "$iotaHornetFirstInstall" = "true" ]; then
    sudo systemctl start iota-hornet > /dev/null 2>&1
    unset iotaHornetFirstInstall
fi

echo "====== INSTALLATION FINISHED ======" >> /tmp/iotaHornetInstaller.log
unset newIotaHornetBinary newIotaHornetConfig iotaHornetDownloadChecksum