#!/bin/bash
source $swarmConfigs/wasp.cfg
source $swarmConfigs/proxy.cfg
source $proxyModules/proxyParser

sudo systemctl stop wasp > /dev/null 2>&1

sudo systemctl disable wasp > /dev/null 2>&1

sudo rm -rf /usr/bin/wasp /var/lib/wasp /lib/systemd/system/wasp.service /etc/default/wasp > /dev/null 2>&1

sudo systemctl daemon-reload > /dev/null 2>&1

sudo rm -rf $waspHome > /dev/null 2>&1

if id wasp >/dev/null 2>&1; then
    sudo deluser wasp >/dev/null
fi

if [ -x "$(command -v apache2-utils)" ] && [ ! -f "/usr/bin/goshimmer" ]; then
    sudo apt -qq purge apache-utils -y > /dev/null 2>&1
    sudo apt -qq autoremove -y > /dev/null 2>&1
fi

getInxInstallations=$(ls /usr/bin/ | grep -E 'dashboard|indexer|mqtt|participation')
if [ -z "$getInxInstallations" ] && [ ! -f "/usr/bin/hornet" ] && [ ! -f "/usr/bin/hornet-shimmer" ] && [ ! -f "/usr/bin/goshimmer" ]; then
    sudo snap remove go > /dev/null 2>&1
fi

if [ -f "/etc/nginx/sites-enabled/wasp-dashboard" ] || [ -f "/etc/nginx/sites-enabled/wasp-api" ]; then
    if [ "$ufw" = "true" ]; then
        sudo ufw delete allow $waspGossipPort/tcp > /dev/null 2>&1
        if [ "$proxyWaspDashboardPort" != "$proxyIotaHornetPort" ] && [ "$proxyWaspDashboardPort" != "$proxyIotaBeePort" ] && [ "$proxyWaspDashboardPort" != "$proxyShimmerBeePort" ] && [ "$proxyWaspDashboardPort" != "$proxyGoshimmerPort" ]; then
            sudo ufw delete allow $proxyWaspDashboardPort/tcp > /dev/null 2>&1
        fi
        if [ "$proxyWaspApiPort" != "$proxyIotaHornetPort" ] && [ "$proxyWaspApiPort" != "$proxyHornetShimmerPort" ] && [ "$proxyWaspApiPort" != "$proxyIotaBeePort" ] && [ "$proxyWaspApiPort" != "$proxyShimmerBeePort" ] && [ "$proxyWaspApiPort" != "$proxyGoshimmerPort" ]; then
            sudo ufw delete allow $proxyWaspApiPort/tcp > /dev/null 2>&1
        fi
    fi
    sudo sed -i 's/^proxyWaspDashboardUrl=.*/proxyWaspDashboardUrl=""/' $swarmConfigs/proxy.cfg
    sudo sed -i 's/^proxyWaspApiUrl=.*/proxyWaspApiUrl=""/' $swarmConfigs/proxy.cfg
    sudo rm -rf /etc/nginx/sites-enabled/wasp* > /dev/null 2>&1
    sudo rm -rf /etc/nginx/wasp > /dev/null 2>&1
    sudo systemctl reload nginx
fi