#!/bin/bash

# General
if ! id inx >/dev/null 2>&1; then
    useradd --no-create-home --system inx >/dev/null
fi

if [ ! -d "$inxDashboardHome" ]; then
    sudo mkdir -p $inxDashboardHome > /dev/null 2>&1
    sudo chown -R inx:inx $inxDashboardHome > /dev/null 2>&1
fi

# Install GO
if ! [ -x "$(command -v go)" ] > /dev/null 2>&1; then
    sudo snap install go --classic > /dev/null 2>&1
fi

# Create Service
if [ ! -f "/lib/systemd/system/inx-dashboard.service" ]; then
    sudo cp -rf $swarmHome/templates/inx/inx-dashboard.service /lib/systemd/system/inx-dashboard.service
    if [ ! -f "/etc/default/inx-dashboard" ]; then
        echo "OPTIONS=\"--config config.json\"" > /etc/default/inx-dashboard
    fi
    if [ ! -f "/etc/systemd/system/multi-user.target.wants/inx-dashboard.service" ]; then
        sudo systemctl enable inx-dashboard > /dev/null 2>&1
    fi
    sudo systemctl daemon-reload > /dev/null 2>&1
fi

##############################################################################################################################################

# Create dir if not exist
sudo mkdir -p /tmp/inx-dashboard > /dev/null 2>&1

if [ "$osArchitecture" = "amd64" ]; then
    source $swarmModules/swarmAuth
    if [ "$swarmAuth" = "200" ]; then
        # Download latest inx-dashboard
        ( cd /tmp/inx-dashboard/ ; sudo wget -q https://$swarmAuthUser:$swarmAuthPwd@$swarmUrl/download/inx/inx-dashboard/v${latestInxDashboardVersion}/inx-dashboard-v${latestInxDashboardVersion}_linux_$osArchitecture.tar.gz )
        if [ -f "/tmp/inx-dashboard/inx-dashboard-v${latestInxDashboardVersion}_linux_$osArchitecture.tar.gz" ]; then
            inxDashboardDownloadChecksum=$(sudo shasum -a 512 /tmp/inx-dashboard/inx-dashboard-v${latestInxDashboardVersion}_linux_$osArchitecture.tar.gz | awk '{ print $1 }')
        fi

        # Download checksum
        ( cd /tmp/inx-dashboard/ ; sudo wget -q https://$swarmAuthUser:$swarmAuthPwd@$swarmUrl/download/inx/inx-dashboard/v${latestInxDashboardVersion}/checksums.txt )
        inxDashboardChecksum=$(sudo grep "inx-dashboard-v${latestInxDashboardVersion}_linux_$osArchitecture.tar.gz" /tmp/inx-dashboard/checksums.txt | awk '{ print $1 }')
        echo $inxDashboardChecksum > /tmp/inx-dashboard.checksum

        # Unzip archive
        if [ "$inxDashboardDownloadChecksum" = "$inxDashboardChecksum" ] && [ ! -z "$inxDashboardDownloadChecksum" ] && [ ! -z "$inxDashboardChecksum" ]; then
            ( cd /tmp/inx-dashboard ; sudo tar -xzf /tmp/inx-dashboard/inx-dashboard-v${latestInxDashboardVersion}_linux_$osArchitecture.tar.gz ) > /dev/null 2>&1

            # Copy binary
            if [ -f "/tmp/inx-dashboard/inx-dashboard" ]; then
                inxDashboardStatus="$(systemctl show -p ActiveState --value inx-dashboard)"
                if [ "$inxDashboardStatus" = "active" ]; then
                    sudo systemctl stop inx-dashboard > /dev/null 2>&1
                fi

                sudo cp -rf /tmp/inx-dashboard/inx-dashboard /usr/bin/inx-dashboard > /dev/null 2>&1
                sudo chmod +x /usr/bin/inx-dashboard > /dev/null 2>&1
                newInxDashboardBinary=true
            fi
        fi
    fi
fi

##############################################################################################################################################

if [ "$newInxDashboardBinary" = "true" ]; then
    if [ -f "/tmp/inx-dashboard/config_template.json" ]; then
        sudo cp -rf /tmp/inx-dashboard/config_template.json /var/lib/inx-dashboard/config.json > /dev/null 2>&1
        newInxDashboardConfig=true
    fi
    if [ -f "/tmp/inx-dashboard/config.json" ]; then
        sudo cp -rf /tmp/inx-dashboard/config.json /var/lib/inx-dashboard/config.json > /dev/null 2>&1
        newInxDashboardConfig=true
    fi
fi

##############################################################################################################################################

if [ "$newInxDashboardConfig" = "true" ]; then
    # Run installer modules
    sudo chown -R inx:inx $inxDashboardHome > /dev/null 2>&1

    restartInxDashboard=true
    inxDashboardUpdated=true
fi

# Remove temporary files
sudo rm -rf /tmp/inx-dashboard > /dev/null 2>&1


unset newInxDashboardBinary newInxDashboardConfig inxDashboardDownloadChecksum