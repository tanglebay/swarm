#!/bin/bash

# Load new env
source /var/lib/swarm/environment

sudo chmod +x $swarmHome/swarm $swarmPlugins/watchdog > /dev/null 2>&1

source $swarmModules/swarmParser

( crontab -l | grep -v -F "$watchdogCronCmd" ) | crontab - > /dev/null 2>&1
( crontab -l | grep -v -F "$watchdogCronCmd" ; echo "$watchdogCronJob" ) | crontab - > /dev/null 2>&1

if [ -f "/usr/bin/hornet" ]; then
    source $hornetModules/hornetParser
    if [ "$restartHornet" = "true" ]; then
        sudo systemctl restart hornet
        unset restartHornet
    fi
fi
if [ -f "/usr/bin/hornet-shimmer" ]; then
    source $hornetShimmerModules/hornetShimmerParser
    if [ "$restartHornetShimmer" = "true" ]; then
        sudo systemctl restart hornet-shimmer
        unset restartHornetShimmer
    fi
fi
if [ -f "/usr/bin/bee" ]; then
    beeIgnorePeersUpdate=true
    source $beeModules/beeParser
    if [ "$restartBee" = "true" ]; then
        sudo systemctl restart bee
        unset restartBee
    fi
    unset beeIgnorePeersUpdate
fi
if [ -f "/usr/bin/bee-shimmer" ]; then
    beeShimmerIgnorePeersUpdate=true
    source $beeShimmerModules/beeShimmerParser
    if [ "$restartBeeShimmer" = "true" ]; then
        sudo systemctl restart bee-shimmer
        unset restartBeeShimmer
    fi
    unset beeShimmerIgnorePeersUpdate
fi
if [ -f "/usr/bin/goshimmer" ]; then
    source $goshimmerModules/goshimmerParser
    if [ "$restartGoshimmer" = "true" ]; then
        sudo systemctl restart goshimmer
        unset restartGoshimmer
    fi
fi
if [ -f "/usr/bin/wasp" ]; then
    source $waspModules/waspParser
    if [ "$restartWasp" = "true" ]; then
        sudo systemctl restart wasp
        unset restartWasp
    fi
fi

source $proxyModules/proxyAutomaticDeployment