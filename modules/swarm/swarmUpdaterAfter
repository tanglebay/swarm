#!/bin/bash

sudo chmod +x $swarmHome/swarm $swarmHome/watchdog > /dev/null 2>&1

source $swarmModule/swarmConfigs
source $swarmModule/swarmParser

if [ -f "/tmp/watchdog.state" ]; then
    sudo rm -rf /tmp/watchdog.state > /dev/null 2>&1
fi

( crontab -l | grep -v -F "/var/lib/swarm/plugins/watchdog" ) | crontab - > /dev/null 2>&1
( crontab -l | grep -v -F "$watchdogCronCmd" ) | crontab - > /dev/null 2>&1
( crontab -l | grep -v -F "$watchdogCronCmd" ; echo "$watchdogCronJob" ) | crontab - > /dev/null 2>&1

source $swarmModule/swarmUpdaterAppService

for swarmApp in ${swarmApps[@]}
do
    if [ -f "/usr/bin/$swarmApp" ]; then
        source $swarmModule/swarmAppVars
        source ${!swarmAppModule}/${swarmAppPrefix}Parser
        swarmAppRestart=restart${swarmAppPrefix^}
        if [ "${!swarmAppRestart}" = "true" ]; then
            if [ ! -f "/tmp/$swarmApp.lock" ]; then
                sudo touch /tmp/$swarmApp.lock > /dev/null 2>&1
            fi
            if [ "$swarmApp" = "iota-hornet" ]; then
                source $iotaInxModule/iotaInxAppStop
                sudo systemctl restart $swarmApp > /dev/null 2>&1
                bash $iotaInxModule/iotaInxAppStart &
                unset restartIotaHornet
            fi
            if [ "$swarmApp" = "shimmer-hornet" ]; then
                source $shimmerInxModule/shimmerInxAppStop
                sudo systemctl restart $swarmApp > /dev/null 2>&1
                bash $shimmerInxModule/shimmerInxAppStart &
                unset restartShimmerHornet
            fi
            if [[ $swarmApp != *hornet* ]]; then
                sudo systemctl restart $swarmApp > /dev/null 2>&1
            fi
            if [ -f "/tmp/$swarmApp.lock" ]; then
                sudo rm -rf /tmp/$swarmApp.lock > /dev/null 2>&1
            fi
        fi
        unset swarmAppRestart swarmAppModule
    fi
    unset swarmAppPrefix
done
unset swarmApp

source $proxyModule/proxyAutomaticDeployment

source $proxyModule/proxySwarmEndpoint

# Set updated var
swarmUpdated=true
