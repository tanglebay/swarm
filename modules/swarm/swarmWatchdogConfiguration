#!/bin/bash
crontab -l | grep -q "$watchdogCronCmd" && watchdogStatus=enabled || watchdogStatus=disabled
while [ $exitCode -lt 1 ]; do
    if [ "$swarmAutoUpdate" = "true" ]; then
        swarmAutoUpdateMenu="Disable"
    else
        swarmAutoUpdateMenu="Enable"
    fi
    if [ "$proxyCheck" = "true" ]; then
        proxyCheckMenu="Disable"
    else
        proxyCheckMenu="Enable"
    fi

    CHOICE=$(
        whiptail --title "Watchdog - Configuration" --menu "\nChoose an option" 24 65 0 \
        "1)" "Hornet [Watchdog]" \
        "2)" "INX [Watchdog]" \
        "3)" "GoShimmer [Watchdog]" \
        "4)" "WASP [Watchdog]" \
        "5)" "Telegram Notifications [Watchdog]" \
        "6)" "Update Watchdog" 3>&2 2>&1 1>&3
    )
    exitStatus=$?
    if [ "$exitStatus" = "1" ]; then
        exitCode=1
    fi
    case $CHOICE in
        "1)")
            while [ $exitCode -lt 1 ]; do
                CHOICE=$(
                    whiptail --title "Hornet - Watchdog" --menu "\nChoose an option" 24 65 0 \
                    "1)" "Hornet [IOTA]" \
                    "2)" "Hornet [SHIMMER]" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        while [ $exitCode -lt 1 ]; do
                            source $swarmConfigs/swarm.cfg
                            if [ "$iotaHornetAutoUpdate" = "true" ]; then
                                iotaHornetAutoUpdateMenu="Disable"
                            else
                                iotaHornetAutoUpdateMenu="Enable"
                            fi
                            if [ "$iotaHornetAllowDbReset" = "true" ]; then
                                iotaHornetAllowDbResetMenu="Forbid"
                            else
                                iotaHornetAllowDbResetMenu="Allow"
                            fi
                            if [ "$iotaHornetServiceStatusCheck" = "true" ]; then
                                iotaHornetServiceStatusCheckMenu="Disable"
                            else
                                iotaHornetServiceStatusCheckMenu="Enable"
                            fi
                            if [ "$iotaHornetParticipationAutoAdd" = "true" ]; then
                                iotaHornetParticipationAutoAddMenu="Disable"
                            else
                                iotaHornetParticipationAutoAddMenu="Enable"
                            fi

                            CHOICE=$(
                                whiptail --title "SWARM [IOTA] Hornet" --menu "\nChoose an option" 24 65 0 \
                                "1)" "$iotaHornetAutoUpdateMenu Hornet AutoUpdater" \
                                "2)" "$iotaHornetAllowDbResetMenu Hornet database reset" \
                                "3)" "$iotaHornetServiceStatusCheckMenu Hornet service status check" \
                                "4)" "$iotaHornetParticipationAutoAddMenu auto-add participation events" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    if [ "$iotaHornetAutoUpdate" = "true" ]; then
                                        iotaHornetAutoUpdate=false
                                        iotaHornetAutoUpdateMenu="disabled"
                                    else
                                        iotaHornetAutoUpdate=true
                                        iotaHornetAutoUpdateMenu="enabled"
                                    fi
                                    sudo sed -i 's/^iotaHornetAutoUpdate=.*/iotaHornetAutoUpdate='$iotaHornetAutoUpdate'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "Watchdog [IOTA] Hornet" --msgbox "Hornet AutoUpdater $iotaHornetAutoUpdateMenu." 8 65
                                ;;
                                "2)")
                                    if [ "$iotaHornetAllowDbReset" = "true" ]; then
                                        iotaHornetAllowDbReset=false
                                        iotaHornetAllowDbResetMenu="disabled"
                                    else
                                        iotaHornetAllowDbReset=true
                                        iotaHornetAllowDbResetMenu="enabled"
                                    fi
                                    sudo sed -i 's/^iotaHornetAllowDbReset=.*/iotaHornetAllowDbReset='$iotaHornetAllowDbReset'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "SWARM [IOTA] Hornet" --msgbox "Delete Hornet database $iotaHornetAllowDbResetMenu for Watchdog." 8 65
                                ;;
                                "3)")
                                    if [ "$iotaHornetServiceStatusCheck" = "true" ]; then
                                        iotaHornetServiceStatusCheck=false
                                        iotaHornetServiceStatusCheckMenu="disabled"
                                    else
                                        iotaHornetServiceStatusCheck=true
                                        iotaHornetServiceStatusCheckMenu="enabled"
                                    fi
                                    sudo sed -i 's/^iotaHornetServiceStatusCheck=.*/iotaHornetServiceStatusCheck='$iotaHornetServiceStatusCheck'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "SWARM [IOTA] Hornet" --msgbox "Watchdog Hornet service check $iotaHornetServiceStatusCheckMenu." 8 65
                                ;;
                                "4)")
                                    if [ "$iotaHornetServiceStatusCheck" = "true" ]; then
                                        iotaHornetParticipationAutoAdd=false
                                        iotaHornetParticipationAutoAddMenu="disabled"
                                    else
                                        iotaHornetParticipationAutoAdd=true
                                        iotaHornetParticipationAutoAddMenu="enabled"
                                    fi
                                    sudo sed -i 's/^iotaHornetParticipationAutoAdd=.*/iotaHornetParticipationAutoAdd='$iotaHornetParticipationAutoAdd'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "SWARM [IOTA] Hornet" --msgbox "Watchdog auto-add participation events $iotaHornetParticipationAutoAddMenu." 8 65
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                    "2)")
                        while [ $exitCode -lt 1 ]; do
                            source $swarmConfigs/swarm.cfg
                            if [ "$shimmerHornetAutoUpdate" = "true" ]; then
                                shimmerHornetAutoUpdateMenu="Disable"
                            else
                                shimmerHornetAutoUpdateMenu="Enable"
                            fi
                            if [ "$shimmerHornetAllowDbReset" = "true" ]; then
                                shimmerHornetAllowDbResetMenu="Forbid"
                            else
                                shimmerHornetAllowDbResetMenu="Allow"
                            fi
                            if [ "$shimmerHornetServiceStatusCheck" = "true" ]; then
                                shimmerHornetServiceStatusCheckMenu="Disable"
                            else
                                shimmerHornetServiceStatusCheckMenu="Enable"
                            fi

                            CHOICE=$(
                                whiptail --title "Hornet [SHIMMER] Watchdog" --menu "\nChoose an option" 24 65 0 \
                                "1)" "$shimmerHornetAutoUpdateMenu Hornet-Shimmer AutoUpdater" \
                                "2)" "$shimmerHornetAllowDbResetMenu Hornet-Shimmer database reset" \
                                "3)" "$shimmerHornetServiceStatusCheckMenu Hornet-Shimmer service status check" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    if [ "$shimmerHornetAutoUpdate" = "true" ]; then
                                        shimmerHornetAutoUpdate=false
                                        shimmerHornetAutoUpdateMenu="disabled"
                                    else
                                        shimmerHornetAutoUpdate=true
                                        shimmerHornetAutoUpdateMenu="enabled"
                                    fi
                                    sudo sed -i 's/^shimmerHornetAutoUpdate=.*/shimmerHornetAutoUpdate='$shimmerHornetAutoUpdate'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "Hornet [SHIMMER] Watchdog" --msgbox "Hornet AutoUpdater $shimmerHornetAutoUpdateMenu." 8 65
                                ;;
                                "2)")
                                    if [ "$shimmerHornetAllowDbReset" = "true" ]; then
                                        shimmerHornetAllowDbReset=false
                                        shimmerHornetAllowDbResetMenu="disabled"
                                    else
                                        shimmerHornetAllowDbReset=true
                                        shimmerHornetAllowDbResetMenu="enabled"
                                    fi
                                    sudo sed -i 's/^shimmerHornetAllowDbReset=.*/shimmerHornetAllowDbReset='$shimmerHornetAllowDbReset'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "Hornet [SHIMMER] Watchdog" --msgbox "Delete Hornet database $shimmerHornetAllowDbResetMenu for Watchdog." 8 65
                                ;;
                                "3)")
                                    if [ "$shimmerHornetServiceStatusCheck" = "true" ]; then
                                        shimmerHornetServiceStatusCheck=false
                                        shimmerHornetServiceStatusCheckMenu="disabled"
                                    else
                                        shimmerHornetServiceStatusCheck=true
                                        shimmerHornetServiceStatusCheckMenu="enabled"
                                    fi
                                    sudo sed -i 's/^shimmerHornetServiceStatusCheck=.*/shimmerHornetServiceStatusCheck='$shimmerHornetServiceStatusCheck'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "Hornet [SHIMMER] Watchdog" --msgbox "Watchdog Hornet service check $shimmerHornetServiceStatusCheckMenu." 8 65
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                esac
            done
            exitCode=0
        ;;
        "2)")
            while [ $exitCode -lt 1 ]; do
                CHOICE=$(
                    whiptail --title "SWARM [SWARM] INX" --menu "\nChoose an option" 24 65 0 \
                    "1)" "INX-Dashboard" \
                    "2)" "INX-Indexer" \
                    "3)" "INX-MQTT" \
                    "4)" "INX-Participation" \
                    "5)" "INX-POI" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        while [ $exitCode -lt 1 ]; do
                            source $swarmConfigs/swarm.cfg
                            if [ "$shimmerInxDashboardAutoUpdate" = "true" ]; then
                                shimmerInxDashboardAutoUpdateMenu="Disable"
                            else
                                shimmerInxDashboardAutoUpdateMenu="Enable"
                            fi
                            if [ "$shimmerInxDashboardServiceStatusCheck" = "true" ]; then
                                shimmerInxDashboardServiceStatusCheckMenu="Disable"
                            else
                                shimmerInxDashboardServiceStatusCheckMenu="Enable"
                            fi

                            CHOICE=$(
                                whiptail --title "INX-Dashboard [SHIMMER] Watchdog" --menu "\nChoose an option" 24 65 0 \
                                "1)" "$shimmerInxDashboardAutoUpdateMenu INX-Dashboard AutoUpdater" \
                                "2)" "$shimmerInxDashboardServiceStatusCheckMenu INX-Dashboard service status check" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    if [ "$shimmerInxDashboardAutoUpdate" = "true" ]; then
                                        shimmerInxDashboardAutoUpdate=false
                                        shimmerInxDashboardAutoUpdateMenu="disabled"
                                    else
                                        shimmerInxDashboardAutoUpdate=true
                                        shimmerInxDashboardAutoUpdateMenu="enabled"
                                    fi
                                    sudo sed -i 's/^shimmerInxDashboardAutoUpdate=.*/shimmerInxDashboardAutoUpdate='$shimmerInxDashboardAutoUpdate'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "INX-Dashboard [SHIMMER] Watchdog" --msgbox "INX-Dashboard AutoUpdater $shimmerInxDashboardAutoUpdateMenu." 8 65
                                ;;
                                "2)")
                                    if [ "$shimmerInxDashboardServiceStatusCheck" = "true" ]; then
                                        shimmerInxDashboardServiceStatusCheck=false
                                        shimmerInxDashboardServiceStatusCheckMenu="disabled"
                                    else
                                        shimmerInxDashboardServiceStatusCheck=true
                                        shimmerInxDashboardServiceStatusCheckMenu="enabled"
                                    fi
                                    sudo sed -i 's/^shimmerInxDashboardServiceStatusCheck=.*/shimmerInxDashboardServiceStatusCheck='$shimmerInxDashboardServiceStatusCheck'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "INX-Dashboard [SHIMMER] Watchdog" --msgbox "Watchdog INX-Dashboard service check $shimmerInxDashboardServiceStatusCheckMenu." 8 65
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                    "2)")
                        while [ $exitCode -lt 1 ]; do
                            source $swarmConfigs/swarm.cfg
                            if [ "$shimmerInxIndexerAutoUpdate" = "true" ]; then
                                shimmerInxIndexerAutoUpdateMenu="Disable"
                            else
                                shimmerInxIndexerAutoUpdateMenu="Enable"
                            fi
                            if [ "$shimmerInxIndexerAllowDbReset" = "true" ]; then
                                shimmerInxIndexerAllowDbResetMenu="Forbid"
                            else
                                shimmerInxIndexerAllowDbResetMenu="Allow"
                            fi
                            if [ "$shimmerInxIndexerServiceStatusCheck" = "true" ]; then
                                shimmerInxIndexerServiceStatusCheckMenu="Disable"
                            else
                                shimmerInxIndexerServiceStatusCheckMenu="Enable"
                            fi

                            CHOICE=$(
                                whiptail --title "Watchdog [SHIMMER] INX" --menu "\nChoose an option" 24 65 0 \
                                "1)" "$shimmerInxIndexerAutoUpdateMenu AutoUpdater" \
                                "2)" "$shimmerInxIndexerAllowDbResetMenu database reset" \
                                "3)" "$shimmerInxIndexerServiceStatusCheckMenu service status check" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    if [ "$shimmerInxIndexerAutoUpdate" = "true" ]; then
                                        shimmerInxIndexerAutoUpdate=false
                                        shimmerInxIndexerAutoUpdateMenu="disabled"
                                    else
                                        shimmerInxIndexerAutoUpdate=true
                                        shimmerInxIndexerAutoUpdateMenu="enabled"
                                    fi
                                    sudo sed -i 's/^shimmerInxIndexerAutoUpdate=.*/shimmerInxIndexerAutoUpdate='$shimmerInxIndexerAutoUpdate'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "INX-Indexer [SHIMMER] Watchdog" --msgbox "INX-Indexer AutoUpdater $shimmerInxIndexerAutoUpdateMenu." 8 65
                                ;;
                                "2)")
                                    if [ "$shimmerInxIndexerAllowDbReset" = "true" ]; then
                                        shimmerInxIndexerAllowDbReset=false
                                        shimmerInxIndexerAllowDbResetMenu="disabled"
                                    else
                                        shimmerInxIndexerAllowDbReset=true
                                        shimmerInxIndexerAllowDbResetMenu="enabled"
                                    fi
                                    sudo sed -i 's/^shimmerInxIndexerAllowDbReset=.*/shimmerInxIndexerAllowDbReset='$shimmerInxIndexerAllowDbReset'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "[SHIMMER] INX-Indexer - Watchdog" --msgbox "Delete INX-Indexer database $shimmerInxIndexerAllowDbResetMenu for Watchdog." 8 65
                                ;;
                                "3)")
                                    if [ "$shimmerInxIndexerServiceStatusCheck" = "true" ]; then
                                        shimmerInxIndexerServiceStatusCheck=false
                                        shimmerInxIndexerServiceStatusCheckMenu="disabled"
                                    else
                                        shimmerInxIndexerServiceStatusCheck=true
                                        shimmerInxIndexerServiceStatusCheckMenu="enabled"
                                    fi
                                    sudo sed -i 's/^shimmerInxIndexerServiceStatusCheck=.*/shimmerInxIndexerServiceStatusCheck='$shimmerInxIndexerServiceStatusCheck'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "INX-Indexer [SHIMMER] Watchdog" --msgbox "Watchdog INX-Indexer service check $shimmerInxIndexerServiceStatusCheckMenu." 8 65
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                    "3)")
                        while [ $exitCode -lt 1 ]; do
                            source $swarmConfigs/swarm.cfg
                            if [ "$shimmerInxMqttAutoUpdate" = "true" ]; then
                                shimmerInxMqttAutoUpdateMenu="Disable"
                            else
                                shimmerInxMqttAutoUpdateMenu="Enable"
                            fi
                            if [ "$shimmerInxMqttServiceStatusCheck" = "true" ]; then
                                shimmerInxMqttServiceStatusCheckMenu="Disable"
                            else
                                shimmerInxMqttServiceStatusCheckMenu="Enable"
                            fi

                            CHOICE=$(
                                whiptail --title "INX-MQTT [SHIMMER] Watchdog" --menu "\nChoose an option" 24 65 0 \
                                "1)" "$shimmerInxMqttAutoUpdateMenu AutoUpdater" \
                                "2)" "$shimmerInxMqttServiceStatusCheckMenu service status check" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    if [ "$shimmerInxMqttAutoUpdate" = "true" ]; then
                                        shimmerInxMqttAutoUpdate=false
                                        shimmerInxMqttAutoUpdateMenu="disabled"
                                    else
                                        shimmerInxMqttAutoUpdate=true
                                        shimmerInxMqttAutoUpdateMenu="enabled"
                                    fi
                                    sudo sed -i 's/^shimmerInxMqttAutoUpdate=.*/shimmerInxMqttAutoUpdate='$shimmerInxMqttAutoUpdate'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "INX-MQTT [SHIMMER] Watchdog" --msgbox "INX-MQTT AutoUpdater $shimmerInxMqttAutoUpdateMenu." 8 65
                                ;;
                                "2)")
                                    if [ "$shimmerInxMqttServiceStatusCheck" = "true" ]; then
                                        shimmerInxMqttServiceStatusCheck=false
                                        shimmerInxMqttServiceStatusCheckMenu="disabled"
                                    else
                                        shimmerInxMqttServiceStatusCheck=true
                                        shimmerInxMqttServiceStatusCheckMenu="enabled"
                                    fi
                                    sudo sed -i 's/^shimmerInxMqttServiceStatusCheck=.*/shimmerInxMqttServiceStatusCheck='$shimmerInxMqttServiceStatusCheck'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "INX-MQTT [SHIMMER] Watchdog" --msgbox "Watchdog INX-MQTT service check $shimmerInxMqttServiceStatusCheckMenu." 8 65
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                    "4)")
                        while [ $exitCode -lt 1 ]; do
                            source $swarmConfigs/swarm.cfg
                            if [ "$shimmerInxParticipationAutoUpdate" = "true" ]; then
                                shimmerInxParticipationAutoUpdateMenu="Disable"
                            else
                                shimmerInxParticipationAutoUpdateMenu="Enable"
                            fi
                            if [ "$shimmerInxParticipationAllowDbReset" = "true" ]; then
                                shimmerInxParticipationAllowDbResetMenu="Forbid"
                            else
                                shimmerInxParticipationAllowDbResetMenu="Allow"
                            fi
                            if [ "$shimmerInxParticipationServiceStatusCheck" = "true" ]; then
                                shimmerInxParticipationServiceStatusCheckMenu="Disable"
                            else
                                shimmerInxParticipationServiceStatusCheckMenu="Enable"
                            fi
                            if [ "$shimmerInxParticipationAutoAdd" = "true" ]; then
                                shimmerInxParticipationAutoAddMenu="Disable"
                            else
                                shimmerInxParticipationAutoAddMenu="Enable"
                            fi

                            CHOICE=$(
                                whiptail --title "INX-Participation [SHIMMER] Watchdog" --menu "\nChoose an option" 24 65 0 \
                                "1)" "$shimmerInxParticipationAutoUpdateMenu AutoUpdater" \
                                "2)" "$shimmerInxParticipationAllowDbResetMenu database reset" \
                                "3)" "$shimmerInxParticipationServiceStatusCheckMenu service status check" \
                                "4)" "$shimmerInxParticipationAutoAddMenu auto-add participation events" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    if [ "$shimmerInxParticipationAutoUpdate" = "true" ]; then
                                        shimmerInxParticipationAutoUpdate=false
                                        shimmerInxParticipationAutoUpdateMenu="disabled"
                                    else
                                        shimmerInxParticipationAutoUpdate=true
                                        shimmerInxParticipationAutoUpdateMenu="enabled"
                                    fi
                                    sudo sed -i 's/^shimmerInxParticipationAutoUpdate=.*/shimmerInxParticipationAutoUpdate='$shimmerInxParticipationAutoUpdate'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "INX-Participation [SHIMMER] Watchdog" --msgbox "INX-Participation AutoUpdater $shimmerInxParticipationAutoUpdateMenu." 8 65
                                ;;
                                "2)")
                                    if [ "$shimmerInxParticipationAllowDbReset" = "true" ]; then
                                        shimmerInxParticipationAllowDbReset=false
                                        shimmerInxParticipationAllowDbResetMenu="disabled"
                                    else
                                        shimmerInxParticipationAllowDbReset=true
                                        shimmerInxParticipationAllowDbResetMenu="enabled"
                                    fi
                                    sudo sed -i 's/^shimmerInxParticipationAllowDbReset=.*/shimmerInxParticipationAllowDbReset='$shimmerInxParticipationAllowDbReset'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "INX-Participation [SHIMMER] Watchdog" --msgbox "Delete INX-Participation database $shimmerInxParticipationAllowDbResetMenu for Watchdog." 8 65
                                ;;
                                "3)")
                                    if [ "$shimmerInxParticipationServiceStatusCheck" = "true" ]; then
                                        shimmerInxParticipationServiceStatusCheck=false
                                        shimmerInxParticipationServiceStatusCheckMenu="disabled"
                                    else
                                        shimmerInxParticipationServiceStatusCheck=true
                                        shimmerInxParticipationServiceStatusCheckMenu="enabled"
                                    fi
                                    sudo sed -i 's/^shimmerInxParticipationServiceStatusCheck=.*/shimmerInxParticipationServiceStatusCheck='$shimmerInxParticipationServiceStatusCheck'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "INX-Participation [SHIMMER] Watchdog" --msgbox "Watchdog INX-Participation service check $shimmerInxParticipationServiceStatusCheckMenu." 8 65
                                ;;
                                "4)")
                                    if [ "$shimmerInxParticipationAutoAdd" = "true" ]; then
                                        shimmerInxParticipationAutoAdd=false
                                        shimmerInxParticipationAutoAddMenu="disabled"
                                    else
                                        shimmerInxParticipationAutoAdd=true
                                        shimmerInxParticipationAutoAddMenu="enabled"
                                    fi
                                    sudo sed -i 's/^shimmerInxParticipationAutoAdd=.*/shimmerInxParticipationAutoAdd='$shimmerInxParticipationAutoAdd'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "INX-Participation [SHIMMER] Watchdog" --msgbox "Watchdog auto-add participation events $shimmerInxParticipationAutoAddMenu." 8 65
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                    "5)")
                        while [ $exitCode -lt 1 ]; do
                            source $swarmConfigs/swarm.cfg
                            if [ "$shimmerInxPoiAutoUpdate" = "true" ]; then
                                shimmerInxPoiAutoUpdateMenu="Disable"
                            else
                                shimmerInxPoiAutoUpdateMenu="Enable"
                            fi
                            if [ "$shimmerInxPoiServiceStatusCheck" = "true" ]; then
                                shimmerInxPoiServiceStatusCheckMenu="Disable"
                            else
                                shimmerInxPoiServiceStatusCheckMenu="Enable"
                            fi

                            CHOICE=$(
                                whiptail --title "INX-POI [SHIMMER] Watchdog" --menu "\nChoose an option" 24 65 0 \
                                "1)" "$shimmerInxPoiAutoUpdateMenu AutoUpdater" \
                                "2)" "$shimmerInxPoiServiceStatusCheckMenu service status check" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    if [ "$shimmerInxPoiAutoUpdate" = "true" ]; then
                                        shimmerInxPoiAutoUpdate=false
                                        shimmerInxPoiAutoUpdateMenu="disabled"
                                    else
                                        shimmerInxPoiAutoUpdate=true
                                        shimmerInxPoiAutoUpdateMenu="enabled"
                                    fi
                                    sudo sed -i 's/^shimmerInxPoiAutoUpdate=.*/shimmerInxPoiAutoUpdate='$shimmerInxPoiAutoUpdate'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "INX-POI [SHIMMER] Watchdog" --msgbox "INX-POI AutoUpdater $shimmerInxPoiAutoUpdateMenu!" 8 65
                                ;;
                                "2)")
                                    if [ "$shimmerInxPoiServiceStatusCheck" = "true" ]; then
                                        shimmerInxPoiServiceStatusCheck=false
                                        shimmerInxPoiServiceStatusCheckMenu="disabled"
                                    else
                                        shimmerInxPoiServiceStatusCheck=true
                                        shimmerInxPoiServiceStatusCheckMenu="enabled"
                                    fi
                                    sudo sed -i 's/^shimmerInxPoiServiceStatusCheck=.*/shimmerInxPoiServiceStatusCheck='$shimmerInxPoiServiceStatusCheck'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "INX-POI [SHIMMER] Watchdog" --msgbox "Watchdog INX-POI service check $shimmerInxPoiServiceStatusCheckMenu!" 8 65
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                esac
            done
            exitCode=0
        ;;
        "3)")
            while [ $exitCode -lt 1 ]; do
                source $swarmConfigs/swarm.cfg
                if [ "$goshimmerAutoUpdate" = "true" ]; then
                    goshimmerAutoUpdateMenu="Disable"
                else
                    goshimmerAutoUpdateMenu="Enable"
                fi
                if [ "$goshimmerDbReset" = "true" ]; then
                    goshimmerDbResetMenu="Forbid"
                else
                    goshimmerDbResetMenu="Allow"
                fi
                if [ "$goshimmerServiceStatusCheck" = "true" ]; then
                    goshimmerServiceStatusCheckMenu="Disable"
                else
                    goshimmerServiceStatusCheckMenu="Enable"
                fi
                if [ "$goshimmerDbBackupDownload" = "true" ]; then
                    goshimmerDbBackupDownloadMenu="Disable"
                else
                    goshimmerDbBackupDownloadMenu="Enable"
                fi
                CHOICE=$(
                    whiptail --title "SWARM - GoShimmer" --menu "\nChoose an option" 24 65 0 \
                    "1)" "$goshimmerAutoUpdateMenu GoShimmer AutoUpdater" \
                    "2)" "$goshimmerDbBackupDownloadMenu GoShimmer DB backup download" \
                    "3)" "$goshimmerDbResetMenu GoShimmer database reset" \
                    "4)" "$goshimmerServiceStatusCheckMenu GoShimmer status check" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        if [ "$goshimmerAutoUpdate" = "true" ]; then
                            goshimmerAutoUpdate=false
                            goshimmerAutoUpdateMenu="disabled"
                        else
                            goshimmerAutoUpdate=true
                            goshimmerAutoUpdateMenu="enabled"
                        fi
                        sudo sed -i 's/^goshimmerAutoUpdate=.*/goshimmerAutoUpdate='$goshimmerAutoUpdate'/' $swarmConfigs/swarm.cfg
                        whiptail --title "Watchdog - GoShimmer" --msgbox "GoShimmer AutoUpdater $goshimmerAutoUpdateMenu!" 8 65
                    ;;
                    "2)")
                        if [ "$goshimmerDbBackupDownload" = "true" ]; then
                            goshimmerDbBackupDownload=false
                            sudo sed -i 's/^goshimmerDbBackupDownload=.*/goshimmerDbBackupDownload=false/' $swarmConfigs/swarm.cfg
                            whiptail --title "GoShimmer - DB Download" --msgbox "GoShimmer DB backup download disabled." 8 65
                        else
                            goshimmerDbBackupDownload=true
                            sudo sed -i 's/^goshimmerDbBackupDownload=.*/goshimmerDbBackupDownload=true/' $swarmConfigs/swarm.cfg
                            whiptail --title "GoShimmer - DB Download" --msgbox "GoShimmer DB download enabled." 8 65
                        fi
                    ;;
                    "3)")
                        if [ "$goshimmerDbReset" = "true" ]; then
                            goshimmerDbReset=false
                            goshimmerDbResetMenu="disabled"
                        else
                            goshimmerDbReset=true
                            goshimmerDbResetMenu="enabled"
                        fi
                        sudo sed -i 's/^goshimmerDbReset=.*/goshimmerDbReset='$goshimmerDbReset'/' $swarmConfigs/swarm.cfg
                        whiptail --title "SWARM - GoShimmer" --msgbox "Delete GoShimmer database $goshimmerDbResetMenu for Watchdog!" 8 65
                    ;;
                    "4)")
                        if [ "$goshimmerServiceStatusCheck" = "true" ]; then
                            goshimmerServiceStatusCheck=false
                            goshimmerServiceStatusCheckMenu="disabled"
                        else
                            goshimmerServiceStatusCheck=true
                            goshimmerServiceStatusCheckMenu="enabled"
                        fi
                        sudo sed -i 's/^goshimmerServiceStatusCheck=.*/goshimmerServiceStatusCheck='$goshimmerServiceStatusCheck'/' $swarmConfigs/swarm.cfg
                        whiptail --title "SWARM - GoShimmer" --msgbox "GoShimmer status check $goshimmerServiceStatusCheckMenu." 8 65
                    ;;
                esac
            done
            exitCode=0
        ;;
        "4)")
            while [ $exitCode -lt 1 ]; do
                source $swarmConfigs/swarm.cfg
                if [ "$waspAutoUpdate" = "true" ]; then
                    waspAutoUpdateMenu="Disable"
                else
                    waspAutoUpdateMenu="Enable"
                fi
                if [ "$waspAllowDbReset" = "true" ]; then
                    waspAllowDbResetMenu="Forbid"
                else
                    waspAllowDbResetMenu="Allow"
                fi
                if [ "$waspServiceStatusCheck" = "true" ]; then
                    waspServiceStatusCheckMenu="disabled"
                else
                    waspServiceStatusCheckMenu="enabled"
                fi
                CHOICE=$(
                    whiptail --title "SWARM - WASP" --menu "\nChoose an option" 24 65 0 \
                    "1)" "$waspAutoUpdateMenu WASP AutoUpdater" \
                    "2)" "$waspAllowDbResetMenu WASP database reset" \
                    "3)" "$waspServiceStatusCheckMenu WASP status check" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        if [ "$waspAutoUpdate" = "true" ]; then
                            waspAutoUpdate=false
                            waspAutoUpdateMenu="disabled"
                        else
                            waspAutoUpdate=true
                            waspAutoUpdateMenu="enabled"
                        fi
                        sudo sed -i 's/^waspAutoUpdate=.*/waspAutoUpdate='$waspAutoUpdate'/' $swarmConfigs/swarm.cfg
                        whiptail --title "Watchdog - WASP" --msgbox "WASP AutoUpdater $waspAutoUpdateMenu!" 8 65
                    ;;
                    "2)")
                        if [ "$waspAllowDbReset" = "true" ]; then
                            waspAllowDbReset=false
                            waspAllowDbResetMenu="disabled"
                        else
                            waspAllowDbReset=true
                            waspAllowDbResetMenu="enabled"
                        fi
                        sudo sed -i 's/^waspAllowDbReset=.*/waspAllowDbReset='$waspAllowDbReset'/' $swarmConfigs/swarm.cfg
                        whiptail --title "SWARM - WASP" --msgbox "Delete WASP database $waspAllowDbResetMenu for Watchdog!" 8 65
                    ;;
                    "3)")
                        if [ "$waspServiceStatusCheck" = "true" ]; then
                            waspServiceStatusCheck=false
                            waspServiceStatusCheckMenu="disabled"
                        else
                            waspServiceStatusCheck=true
                            waspServiceStatusCheckMenu="enabled"
                        fi
                        sudo sed -i 's/^waspServiceStatusCheck=.*/waspServiceStatusCheck='$waspServiceStatusCheck'/' $swarmConfigs/swarm.cfg
                        whiptail --title "SWARM - WASP" --msgbox "WASP status check $waspServiceStatusCheckMenu." 8 65
                    ;;
                esac
            done
            exitCode=0
        ;;
        "5)")
            while [ $exitCode -lt 1 ]; do
                source $swarmConfigs/swarm.cfg
                if [ "$telegramNotifications" = "true" ]; then
                    telegramNotificationsStatus="Disable"
                else
                    telegramNotificationsStatus="Enable"
                fi
                CHOICE=$(
                    whiptail --title "SWARM - Telegram Notifications" --menu "\nChoose an option" 24 65 0 \
                    "1)" "$telegramNotificationsStatus Telegram Notifications" \
                    "2)" "Set Telegram Bot Token" \
                    "3)" "Set Telegram Channel ID" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        if [ "$telegramNotifications" = "true" ]; then
                            telegramText="[$HOSTNAME] Watchdog Telegram notifications via SWARM disabled."
                            source $watchdogModules/watchdogTelegram
                            telegramNotifications=false
                            sudo sed -i 's/^telegramNotifications=.*/telegramNotifications=false/' $swarmConfigs/swarm.cfg
                            whiptail --title "SWARM - Telegram Notifications" --msgbox "Telegram notification for Watchdog disabled." 8 65
                        else
                            telegramNotifications=true
                            sudo sed -i 's/^telegramNotifications=.*/telegramNotifications=true/' $swarmConfigs/swarm.cfg
                            telegramText="[$HOSTNAME] Watchdog Telegram notifications via SWARM enabled."
                            source $watchdogModules/watchdogTelegram
                            whiptail --title "SWARM - Telegram Notifications" --msgbox "Telegram notification for Watchdog enabled." 8 65
                        fi
                    ;;
                    "2)")
                        currentTelegramBotToken="$telegramBotToken"
                        telegramBotToken=$(whiptail --inputbox "\nEnter your Telegram Bot Token" 10 65 $telegramBotToken --title "SWARM - Telegram Notifications" 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ "$exitStatus" != "1" ] && [ "$currentTelegramBotToken" != "$telegramBotToken" ]; then
                            sudo sed -i 's~^telegramBotToken=.*~telegramBotToken="'$telegramBotToken'"~' $swarmConfigs/swarm.cfg
                            whiptail --title "SWARM - Telegram Notifications" --msgbox "New Telegram bot token successfully set." 8 65
                        fi
                    ;;
                    "3)")
                        currentTelegramChannelId="$telegramChannelId"
                        telegramChannelId=$(whiptail --inputbox "\nEnter your Telegram Channel ID" 10 65 $telegramChannelId --title "SWARM - Telegram Notifications" 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ "$exitStatus" != "1" ] && [ "$currentTelegramChannelId" != "$telegramChannelId" ]; then
                            sudo sed -i 's~^telegramChannelId=.*~telegramChannelId="'$telegramChannelId'"~' $swarmConfigs/swarm.cfg
                            whiptail --title "SWARM - Telegram Notifications" --msgbox "New Telegram channel ID successfully set." 8 65
                        fi
                    ;;
                esac
            done
            exitCode=0
        ;;
        "6)")
            if (whiptail --title "Watchdog - Update" --yesno --defaultno "Do you really want to update Watchdog?" 8 65); then
                ( crontab -l | grep -v -F "$watchdogCronCmd" ) | crontab - > /dev/null 2>&1
                ( crontab -l | grep -v -F "$watchdogCronCmd" ; echo "$watchdogCronJob" ) | crontab - > /dev/null 2>&1
                whiptail --title "Watchdog - Update" --msgbox "Watchdog cronjob updated." 8 65
            fi
        ;;
    esac
done
exitCode=0