#!/bin/bash
crontab -l | grep -q "$watchdogCronCmd" && watchdogStatus=enabled || watchdogStatus=disabled
while [ $exitCode -lt 1 ]; do
    if [ "$swarmAutoUpdate" = "true" ]; then
        swarmAutoUpdateMenu="Disable"
    else
        swarmAutoUpdateMenu="Enable"
    fi
    if [ "$proxyCheck" = "true" ]; then
        proxyCheckMenu="Disable"
    else
        proxyCheckMenu="Enable"
    fi

    CHOICE=$(
        whiptail --title "Watchdog - Configuration" --menu "\nWachtdog: $watchdogStatus\n\nChoose an option" 24 65 0 \
        "1)" "Hornet [Watchdog]" \
        "2)" "Bee [Watchdog]" \
        "3)" "INX [Watchdog]" \
        "4)" "GoShimmer [Watchdog]" \
        "5)" "WASP [Watchdog]" \
        "6)" "Telegram Notifications [Watchdog]" \
        "7)" "Update Watchdog" 3>&2 2>&1 1>&3
    )
    exitStatus=$?
    if [ "$exitStatus" = "1" ]; then
        exitCode=1
    fi
    case $CHOICE in
        "1)")
            while [ $exitCode -lt 1 ]; do
                CHOICE=$(
                    whiptail --title "Watchdog - Hornet" --menu "\nChoose an option" 24 65 0 \
                    "1)" "Hornet (IOTA)" \
                    "2)" "Hornet (Shimmer)" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        while [ $exitCode -lt 1 ]; do
                            source $swarmConfigs/swarm.cfg
                            if [ "$iotaHornetAutoUpdate" = "true" ]; then
                                iotaHornetAutoUpdateMenu="Disable"
                            else
                                iotaHornetAutoUpdateMenu="Enable"
                            fi
                            if [ "$iotaHornetAllowDbReset" = "true" ]; then
                                iotaHornetAllowDbResetMenu="Forbid"
                            else
                                iotaHornetAllowDbResetMenu="Allow"
                            fi
                            if [ "$iotaHornetServiceStatusCheck" = "true" ]; then
                                iotaHornetServiceStatusCheckMenu="Disable"
                            else
                                iotaHornetServiceStatusCheckMenu="Enable"
                            fi

                            CHOICE=$(
                                whiptail --title "Watchdog - Hornet (IOTA)" --menu "\nChoose an option" 24 65 0 \
                                "1)" "Hornet (IOTA) sync check" \
                                "2)" "$iotaHornetAutoUpdateMenu Hornet (IOTA) AutoUpdater" \
                                "3)" "$iotaHornetAllowDbResetMenu Hornet (IOTA) database reset" \
                                "4)" "$iotaHornetServiceStatusCheckMenu Hornet (IOTA) service status check" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/swarm.cfg
                                        if [ "$iotaHornetCheckSync" = "true" ]; then
                                            iotaHornetCheckSyncMenu="Disable"
                                        else
                                            iotaHornetCheckSyncMenu="Enable"
                                        fi
                                        CHOICE=$(
                                            whiptail --title "Watchdog - Hornet (IOTA)" --menu "\nChoose an option" 24 65 0 \
                                            "1)" "$iotaHornetCheckSyncMenu Hornet (IOTA) sync check" \
                                            "2)" "Set max milestones" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$iotaHornetCheckSync" = "true" ]; then
                                                    iotaHornetCheckSync=false
                                                    iotaHornetCheckSyncMenu="disabled"
                                                else
                                                    iotaHornetCheckSync=true
                                                    iotaHornetCheckSyncMenu="enabled"
                                                fi
                                                sudo sed -i 's/^iotaHornetCheckSync=.*/iotaHornetCheckSync='$iotaHornetCheckSync'/' $swarmConfigs/swarm.cfg
                                                whiptail --title "Watchdog - Hornet (IOTA)" --msgbox "Hornet (IOTA) sync check $iotaHornetCheckSyncMenu." 8 65
                                            ;;
                                            "2)")
                                                source $swarmConfigs/swarm.cfg
                                                iotaHornetMaxMilestones=$(whiptail --inputbox "\nSet the maximum difference between LMI and LSMI before the resync starts and a new database/snapshot is initialized" 10 65 $iotaHornetMaxMilestones --title "Watchdog - Hornet (IOTA)" 3>&1 1>&2 2>&3)
                                                exitStatus=$?
                                                if [ "$exitStatus" .= "1" ]; then
                                                    if [ $iotaHornetMaxMilestones -eq $iotaHornetMaxMilestones ] && [ $iotaHornetMaxMilestones -gt 0 ] 2>/dev/null; then
                                                        sudo sed -i 's/^iotaHornetMaxMilestones=.*/iotaHornetMaxMilestones='$iotaHornetMaxMilestones'/' $swarmConfigs/swarm.cfg
                                                        whiptail --title "Watchdog - Hornet (IOTA)" --msgbox "Max milestones for Hornet (IOTA) set to $iotaHornetMaxMilestones milestones." 8 65
                                                    fi
                                                fi
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                                "2)")
                                    if [ "$iotaHornetAutoUpdate" = "true" ]; then
                                        iotaHornetAutoUpdate=false
                                        iotaHornetAutoUpdateMenu="disabled"
                                    else
                                        iotaHornetAutoUpdate=true
                                        iotaHornetAutoUpdateMenu="enabled"
                                    fi
                                    sudo sed -i 's/^iotaHornetAutoUpdate=.*/iotaHornetAutoUpdate='$iotaHornetAutoUpdate'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "Watchdog - Hornet (IOTA)" --msgbox "Hornet (IOTA) AutoUpdater $iotaHornetAutoUpdateMenu." 8 65
                                ;;
                                "3)")
                                    if [ "$iotaHornetAllowDbReset" = "true" ]; then
                                        iotaHornetAllowDbReset=false
                                        iotaHornetAllowDbResetMenu="disabled"
                                    else
                                        iotaHornetAllowDbReset=true
                                        iotaHornetAllowDbResetMenu="enabled"
                                    fi
                                    sudo sed -i 's/^iotaHornetAllowDbReset=.*/iotaHornetAllowDbReset='$iotaHornetAllowDbReset'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "Watchdog - Hornet (IOTA)" --msgbox "Delete Hornet database $iotaHornetAllowDbResetMenu for Watchdog." 8 65
                                ;;
                                "4)")
                                    if [ "$iotaHornetServiceStatusCheck" = "true" ]; then
                                        iotaHornetServiceStatusCheck=false
                                        iotaHornetServiceStatusCheckMenu="disabled"
                                    else
                                        iotaHornetServiceStatusCheck=true
                                        iotaHornetServiceStatusCheckMenu="enabled"
                                    fi
                                    sudo sed -i 's/^iotaHornetServiceStatusCheck=.*/iotaHornetServiceStatusCheck='$iotaHornetServiceStatusCheck'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "Watchdog - Hornet (IOTA)" --msgbox "Hornet (IOTA) service check $iotaHornetServiceStatusCheckMenu." 8 65
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                    "2)")
                        while [ $exitCode -lt 1 ]; do
                            source $swarmConfigs/swarm.cfg
                            if [ "$shimmerHornetAutoUpdate" = "true" ]; then
                                shimmerHornetAutoUpdateMenu="Disable"
                            else
                                shimmerHornetAutoUpdateMenu="Enable"
                            fi
                            if [ "$shimmerHornetAllowDbReset" = "true" ]; then
                                shimmerHornetAllowDbResetMenu="Forbid"
                            else
                                shimmerHornetAllowDbResetMenu="Allow"
                            fi
                            if [ "$shimmerHornetServiceStatusCheck" = "true" ]; then
                                shimmerHornetServiceStatusCheckMenu="Disable"
                            else
                                shimmerHornetServiceStatusCheckMenu="Enable"
                            fi

                            CHOICE=$(
                                whiptail --title "Watchdog - Hornet (Shimmer)" --menu "\nChoose an option" 24 65 0 \
                                "1)" "Hornet (Shimmer) Sync-Check" \
                                "2)" "$shimmerHornetAutoUpdateMenu Hornet (Shimmer) AutoUpdater" \
                                "3)" "$shimmerHornetAllowDbResetMenu Hornet (Shimmer) database reset" \
                                "4)" "$shimmerHornetServiceStatusCheckMenu Hornet (Shimmer) service status check" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/swarm.cfg
                                        if [ "$shimmerHornetCheckSync" = "true" ]; then
                                            shimmerHornetCheckSyncMenu="Disable"
                                        else
                                            shimmerHornetCheckSyncMenu="Enable"
                                        fi
                                        CHOICE=$(
                                            whiptail --title "Watchdog - Hornet (Shimmer)" --menu "\nChoose an option" 24 65 0 \
                                            "1)" "$shimmerHornetCheckSyncMenu Sync-Check" \
                                            "2)" "Set max milestones" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$shimmerHornetCheckSync" = "true" ]; then
                                                    shimmerHornetCheckSync=false
                                                    shimmerHornetCheckSyncMenu="disabled"
                                                else
                                                    shimmerHornetCheckSync=true
                                                    shimmerHornetCheckSyncMenu="enabled"
                                                fi
                                                sudo sed -i 's/^shimmerHornetCheckSync=.*/shimmerHornetCheckSync='$shimmerHornetCheckSync'/' $swarmConfigs/swarm.cfg
                                                whiptail --title "Watchdog - Hornet (Shimmer)" --msgbox "Hornet (Shimmer) sync check $shimmerHornetCheckSyncMenu." 8 65
                                            ;;
                                            "2)")
                                                source $swarmConfigs/swarm.cfg
                                                shimmerHornetMaxMilestones=$(whiptail --inputbox "\nSet the maximum difference between LMI and LSMI before the resync starts and a new database/snapshot is initialized" 10 65 $shimmerHornetMaxMilestones --title "Watchdog - Hornet (Shimmer) Sync" 3>&1 1>&2 2>&3)
                                                exitStatus=$?
                                                if [ "$exitStatus" .= "1" ]; then
                                                    if [ $shimmerHornetMaxMilestones -eq $shimmerHornetMaxMilestones ] && [ $shimmerHornetMaxMilestones -gt 0 ] 2>/dev/null; then
                                                        sudo sed -i 's/^shimmerHornetMaxMilestones=.*/shimmerHornetMaxMilestones='$shimmerHornetMaxMilestones'/' $swarmConfigs/swarm.cfg
                                                        whiptail --title "Watchdog - Hornet (Shimmer)" --msgbox "Max milestones for Hornet (Shimmer) set to $shimmerHornetMaxMilestones milestones." 8 65
                                                    fi
                                                fi
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                                "2)")
                                    if [ "$shimmerHornetAutoUpdate" = "true" ]; then
                                        shimmerHornetAutoUpdate=false
                                        shimmerHornetAutoUpdateMenu="disabled"
                                    else
                                        shimmerHornetAutoUpdate=true
                                        shimmerHornetAutoUpdateMenu="enabled"
                                    fi
                                    sudo sed -i 's/^shimmerHornetAutoUpdate=.*/shimmerHornetAutoUpdate='$shimmerHornetAutoUpdate'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "Watchdog - Hornet (Shimmer)" --msgbox "Hornet (Shimmer) AutoUpdater $shimmerHornetAutoUpdateMenu." 8 65
                                ;;
                                "3)")
                                    if [ "$shimmerHornetAllowDbReset" = "true" ]; then
                                        shimmerHornetAllowDbReset=false
                                        shimmerHornetAllowDbResetMenu="disabled"
                                    else
                                        shimmerHornetAllowDbReset=true
                                        shimmerHornetAllowDbResetMenu="enabled"
                                    fi
                                    sudo sed -i 's/^shimmerHornetAllowDbReset=.*/shimmerHornetAllowDbReset='$shimmerHornetAllowDbReset'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "Watchdog - Hornet (Shimmer)" --msgbox "Delete Hornet (Shimmer) database $shimmerHornetAllowDbResetMenu for Watchdog." 8 65
                                ;;
                                "4)")
                                    if [ "$shimmerHornetServiceStatusCheck" = "true" ]; then
                                        shimmerHornetServiceStatusCheck=false
                                        shimmerHornetServiceStatusCheckMenu="disabled"
                                    else
                                        shimmerHornetServiceStatusCheck=true
                                        shimmerHornetServiceStatusCheckMenu="enabled"
                                    fi
                                    sudo sed -i 's/^shimmerHornetServiceStatusCheck=.*/shimmerHornetServiceStatusCheck='$shimmerHornetServiceStatusCheck'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "Watchdog - Hornet (Shimmer)" --msgbox "Watchdog Hornet (Shimmer) service check $shimmerHornetServiceStatusCheckMenu." 8 65
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                esac
            done
            exitCode=0
        ;;
        "2)")
            while [ $exitCode -lt 1 ]; do
                CHOICE=$(
                    whiptail --title "Watchdog - Bee" --menu "\nChoose an option" 24 65 0 \
                    "1)" "Bee (IOTA)" \
                    "2)" "Bee (Shimmer)" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        while [ $exitCode -lt 1 ]; do
                            source $swarmConfigs/swarm.cfg
                            if [ "$iotaBeeAutoUpdate" = "true" ]; then
                                iotaBeeAutoUpdateMenu="Disable"
                            else
                                iotaBeeAutoUpdateMenu="Enable"
                            fi
                            if [ "$iotaBeeAllowDbReset" = "true" ]; then
                                iotaBeeAllowDbResetMenu="Forbid"
                            else
                                iotaBeeAllowDbResetMenu="Allow"
                            fi
                            if [ "$iotaBeeServiceStatusCheck" = "true" ]; then
                                iotaBeeServiceStatusCheckMenu="Disable"
                            else
                                iotaBeeServiceStatusCheckMenu="Enable"
                            fi
                            CHOICE=$(
                                whiptail --title "Watchdog - Bee (IOTA)" --menu "\nChoose an option" 24 65 0 \
                                "1)" "Bee (IOTA) Sync-Check" \
                                "2)" "$iotaBeeAutoUpdateMenu Bee (IOTA)AutoUpdater" \
                                "3)" "$iotaBeeAllowDbResetMenu Bee (IOTA)database reset" \
                                "4)" "$iotaBeeServiceStatusCheckMenu Bee (IOTA) service status check" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/swarm.cfg
                                        if [ "$iotaBeeCheckSync" = "true" ]; then
                                            iotaBeeCheckSyncMenu="Disable"
                                        else
                                            iotaBeeCheckSyncMenu="Enable"
                                        fi
                                        CHOICE=$(
                                            whiptail --title "Watchdog - Bee (IOTA)" --menu "\nChoose an option" 24 65 0 \
                                            "1)" "$iotaBeeCheckSyncMenu Sync-Check" \
                                            "2)" "Set max milestones" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$iotaBeeCheckSync" = "true" ]; then
                                                    iotaBeeCheckSync=false
                                                    iotaBeeCheckSyncMenu="disabled"
                                                else
                                                    iotaBeeCheckSync=true
                                                    iotaBeeCheckSyncMenu="enabled"
                                                fi
                                                sudo sed -i 's/^iotaBeeCheckSync=.*/iotaBeeCheckSync='$iotaBeeCheckSync'/' $swarmConfigs/swarm.cfg
                                                whiptail --title "Watchdog - Bee (IOTA)" --msgbox "Bee (IOTA) sync check $iotaBeeCheckSyncMenu." 8 65
                                            ;;
                                            "2)")
                                                source $swarmConfigs/swarm.cfg
                                                iotaBeeMaxLmi=$(whiptail --inputbox "\nSet the maximum difference between LMI and LSMI before the resync starts and a new database/snapshot is initialized" 10 65 $iotaBeeMaxMilestones --title "Watchdog - Bee Sync" 3>&1 1>&2 2>&3)
                                                exitStatus=$?
                                                if [ "$exitStatus" .= "1" ]; then
                                                    if [ $iotaBeeMaxMilestones -eq $iotaBeeMaxMilestones ] && [ $iotaBeeMaxMilestones -gt 0 ] 2>/dev/null; then
                                                        sudo sed -i 's/^iotaBeeMaxMilestones=.*/iotaBeeMaxMilestones='$iotaBeeMaxMilestones'/' $swarmConfigs/swarm.cfg
                                                        whiptail --title "Watchdog - Bee (IOTA)" --msgbox "Max milestones for Bee (IOTA) set to $iotaBeeMaxMilestones milestones." 8 65
                                                    fi
                                                fi
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                                "2)")
                                    if [ "$iotaBeeAutoUpdate" = "true" ]; then
                                        iotaBeeAutoUpdate=false
                                        iotaBeeAutoUpdateMenu="disabled"
                                    else
                                        iotaBeeAutoUpdate=true
                                        iotaBeeAutoUpdateMenu="enabled"
                                    fi
                                    sudo sed -i 's/^iotaBeeAutoUpdate=.*/iotaBeeAutoUpdate='$iotaBeeAutoUpdate'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "Watchdog - Bee (IOTA)" --msgbox "Bee (IOTA) AutoUpdater $iotaBeeAutoUpdateMenu." 8 65
                                ;;
                                "3)")
                                    if [ "$iotaBeeAllowDbReset" = "true" ]; then
                                        iotaBeeAllowDbReset=false
                                        iotaBeeAllowDbResetMenu="disabled"
                                    else
                                        iotaBeeAllowDbReset=true
                                        iotaBeeAllowDbResetMenu="enabled"
                                    fi
                                    sudo sed -i 's/^iotaBeeAllowDbReset=.*/iotaBeeAllowDbReset='$iotaBeeAllowDbReset'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "Watchdog - Bee (IOTA)" --msgbox "Delete Bee (IOTA) database $iotaBeeAllowDbResetMenu for Watchdog." 8 65
                                ;;
                                "4)")
                                    if [ "$iotaBeeServiceStatusCheck" = "true" ]; then
                                        iotaBeeServiceStatusCheck=false
                                        iotaBeeServiceStatusCheckMenu="disabled"
                                    else
                                        iotaBeeServiceStatusCheck=true
                                        iotaBeeServiceStatusCheckMenu="enabled"
                                    fi
                                    sudo sed -i 's/^iotaBeeServiceStatusCheck=.*/iotaBeeServiceStatusCheck='$iotaBeeServiceStatusCheck'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "Watchdog - Bee (IOTA)" --msgbox "Watchdog Bee (IOTA) service check $iotaBeeServiceStatusCheckMenu." 8 65
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                    "2)")
                        while [ $exitCode -lt 1 ]; do
                            source $swarmConfigs/swarm.cfg
                            if [ "$shimmerBeeAutoUpdate" = "true" ]; then
                                shimmerBeeAutoUpdateMenu="Disable"
                            else
                                shimmerBeeAutoUpdateMenu="Enable"
                            fi
                            if [ "$shimmerBeeAllowDbReset" = "true" ]; then
                                shimmerBeeAllowDbResetMenu="Forbid"
                            else
                                shimmerBeeAllowDbResetMenu="Allow"
                            fi
                            if [ "$shimmerBeeServiceStatusCheck" = "true" ]; then
                                shimmerBeeServiceStatusCheckMenu="Disable"
                            else
                                shimmerBeeServiceStatusCheckMenu="Enable"
                            fi

                            CHOICE=$(
                                whiptail --title "Watchdog - Bee (Shimmer)" --menu "\nChoose an option" 24 65 0 \
                                "1)" "Bee (Shimmer) Sync-Check" \
                                "2)" "$shimmerBeeAutoUpdateMenu Bee (Shimmer) AutoUpdater" \
                                "3)" "$shimmerBeeAllowDbResetMenu Bee (Shimmer) database reset" \
                                "4)" "$shimmerBeeServiceStatusCheckMenu Bee (Shimmer) service status check" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/swarm.cfg
                                        if [ "$shimmerBeeCheckSync" = "true" ]; then
                                            shimmerBeeCheckSyncMenu="Disable"
                                        else
                                            shimmerBeeCheckSyncMenu="Enable"
                                        fi
                                        CHOICE=$(
                                            whiptail --title "Watchdog - Bee (Shimmer)" --menu "\nChoose an option" 24 65 0 \
                                            "1)" "$shimmerBeeCheckSyncMenu Sync-Check" \
                                            "2)" "Set max milestones" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$shimmerBeeCheckSync" = "true" ]; then
                                                    shimmerBeeCheckSync=false
                                                    shimmerBeeCheckSyncMenu="disabled"
                                                else
                                                    shimmerBeeCheckSync=true
                                                    shimmerBeeCheckSyncMenu="enabled"
                                                fi
                                                sudo sed -i 's/^shimmerBeeCheckSync=.*/shimmerBeeCheckSync='$shimmerBeeCheckSync'/' $swarmConfigs/swarm.cfg
                                                whiptail --title "Watchdog - Bee (Shimmer)" --msgbox "Bee (Shimmer) sync check $shimmerBeeCheckSyncMenu." 8 65
                                            ;;
                                            "2)")
                                                source $swarmConfigs/swarm.cfg
                                                iotaBeeMaxLmi=$(whiptail --inputbox "\nSet the maximum difference between LMI and LSMI before the resync starts and a new database/snapshot is initialized" 10 65 $shimmerBeeMaxMilestones --title "Watchdog - Bee (Shimmer) Sync" 3>&1 1>&2 2>&3)
                                                exitStatus=$?
                                                if [ "$exitStatus" .= "1" ]; then
                                                    if [ $shimmerBeeMaxMilestones -eq $shimmerBeeMaxMilestones ] && [ $shimmerBeeMaxMilestones -gt 0 ] 2>/dev/null; then
                                                        sudo sed -i 's/^shimmerBeeMaxMilestones=.*/shimmerBeeMaxMilestones='$shimmerBeeMaxMilestones'/' $swarmConfigs/swarm.cfg
                                                        whiptail --title "Watchdog - Bee (Shimmer)" --msgbox "Max milestones for Bee set to $shimmerBeeMaxMilestones milestones." 8 65
                                                    fi
                                                fi
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                                "2)")
                                    if [ "$shimmerBeeAutoUpdate" = "true" ]; then
                                        shimmerBeeAutoUpdate=false
                                        shimmerBeeAutoUpdateMenu="disabled"
                                    else
                                        shimmerBeeAutoUpdate=true
                                        shimmerBeeAutoUpdateMenu="enabled"
                                    fi
                                    sudo sed -i 's/^shimmerBeeAutoUpdate=.*/shimmerBeeAutoUpdate='$shimmerBeeAutoUpdate'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "Watchdog - Bee (Shimmer)" --msgbox "Bee (Shimmer) AutoUpdater $shimmerBeeAutoUpdateMenu." 8 65
                                ;;
                                "3)")
                                    if [ "$shimmerBeeAllowDbReset" = "true" ]; then
                                        shimmerBeeAllowDbReset=false
                                        shimmerBeeAllowDbResetMenu="disabled"
                                    else
                                        shimmerBeeAllowDbReset=true
                                        shimmerBeeAllowDbResetMenu="enabled"
                                    fi
                                    sudo sed -i 's/^shimmerBeeAllowDbReset=.*/shimmerBeeAllowDbReset='$shimmerBeeAllowDbReset'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "Watchdog - Bee (Shimmer)" --msgbox "Delete Bee (Shimmer) database $shimmerBeeAllowDbResetMenu for Watchdog." 8 65
                                ;;
                                "4)")
                                    if [ "$shimmerBeeServiceStatusCheck" = "true" ]; then
                                        shimmerBeeServiceStatusCheck=false
                                        shimmerBeeServiceStatusCheckMenu="disabled"
                                    else
                                        shimmerBeeServiceStatusCheck=true
                                        shimmerBeeServiceStatusCheckMenu="enabled"
                                    fi
                                    sudo sed -i 's/^shimmerBeeServiceStatusCheck=.*/shimmerBeeServiceStatusCheck='$shimmerBeeServiceStatusCheck'/' $swarmConfigs/swarm.cfg
                                    whiptail --title "Watchdog - Bee (Shimmer)" --msgbox "Watchdog Hornet (Shimmer) service check $shimmerBeeServiceStatusCheckMenu." 8 65
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                esac
            done
            exitCode=0
        ;;
        "3)")
            while [ $exitCode -lt 1 ]; do
                CHOICE=$(
                    whiptail --title "Watchdog - INX" --menu "\nChoose an option" 24 65 0 \
                    "1)" "INX (IOTA)" \
                    "2)" "INX (Shimmer)" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        while [ $exitCode -lt 1 ]; do
                            CHOICE=$(
                                whiptail --title "Watchdog - INX (IOTA)" --menu "\nChoose an option" 24 65 0 \
                                "1)" "INX-Indexer (IOTA)" \
                                "2)" "INX-MQTT (IOTA)" \
                                "3)" "INX-Participation (IOTA)" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/swarm.cfg
                                        if [ "$iotaInxDashboardAutoUpdate" = "true" ]; then
                                            iotaInxDashboardAutoUpdateMenu="Disable"
                                        else
                                            iotaInxDashboardAutoUpdateMenu="Enable"
                                        fi
                                        if [ "$iotaInxDashboardServiceStatusCheck" = "true" ]; then
                                            iotaInxDashboardServiceStatusCheckMenu="Disable"
                                        else
                                            iotaInxDashboardServiceStatusCheckMenu="Enable"
                                        fi

                                        CHOICE=$(
                                            whiptail --title "Watchdog - INX-Dashboard (IOTA)" --menu "\nChoose an option" 24 65 0 \
                                            "1)" "$iotaInxDashboardAutoUpdateMenu INX-Dashboard AutoUpdater" \
                                            "2)" "$iotaInxDashboardServiceStatusCheckMenu INX-Dashboard service status check" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$iotaInxDashboardAutoUpdate" = "true" ]; then
                                                    iotaInxDashboardAutoUpdate=false
                                                    iotaInxDashboardAutoUpdateMenu="disabled"
                                                else
                                                    iotaInxDashboardAutoUpdate=true
                                                    iotaInxDashboardAutoUpdateMenu="enabled"
                                                fi
                                                sudo sed -i 's/^iotaInxDashboardAutoUpdate=.*/iotaInxDashboardAutoUpdate='$iotaInxDashboardAutoUpdate'/' $swarmConfigs/swarm.cfg
                                                whiptail --title "Watchdog - INX-Dashboard (IOTA)" --msgbox "INX-Dashboard (IOTA) AutoUpdater $iotaInxDashboardAutoUpdateMenu." 8 65
                                            ;;
                                            "2)")
                                                if [ "$iotaInxDashboardServiceStatusCheck" = "true" ]; then
                                                    iotaInxDashboardServiceStatusCheck=false
                                                    iotaInxDashboardServiceStatusCheckMenu="disabled"
                                                else
                                                    iotaInxDashboardServiceStatusCheck=true
                                                    iotaInxDashboardServiceStatusCheckMenu="enabled"
                                                fi
                                                sudo sed -i 's/^iotaInxDashboardServiceStatusCheck=.*/iotaInxDashboardServiceStatusCheck='$iotaInxDashboardServiceStatusCheck'/' $swarmConfigs/swarm.cfg
                                                whiptail --title "Watchdog - INX-Dashboard (IOTA)" --msgbox "Watchdog INX-Dashboard (IOTA) service check $iotaInxDashboardServiceStatusCheckMenu." 8 65
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                                "2)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/swarm.cfg
                                        if [ "$iotaInxIndexerAutoUpdate" = "true" ]; then
                                            iotaInxIndexerAutoUpdateMenu="Disable"
                                        else
                                            iotaInxIndexerAutoUpdateMenu="Enable"
                                        fi
                                        if [ "$iotaInxIndexerAllowDbReset" = "true" ]; then
                                            iotaInxIndexerAllowDbResetMenu="Forbid"
                                        else
                                            iotaInxIndexerAllowDbResetMenu="Allow"
                                        fi
                                        if [ "$iotaInxIndexerServiceStatusCheck" = "true" ]; then
                                            iotaInxIndexerServiceStatusCheckMenu="Disable"
                                        else
                                            iotaInxIndexerServiceStatusCheckMenu="Enable"
                                        fi

                                        CHOICE=$(
                                            whiptail --title "Watchdog - INX-Indexer (IOTA)" --menu "\nChoose an option" 24 65 0 \
                                            "1)" "$iotaInxIndexerAutoUpdateMenu INX-Indexer AutoUpdater" \
                                            "2)" "$iotaInxIndexerAllowDbResetMenu INX-Indexer database reset" \
                                            "3)" "$iotaInxIndexerServiceStatusCheckMenu INX-Indexer service status check" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$iotaInxIndexerAutoUpdate" = "true" ]; then
                                                    iotaInxIndexerAutoUpdate=false
                                                    iotaInxIndexerAutoUpdateMenu="disabled"
                                                else
                                                    iotaInxIndexerAutoUpdate=true
                                                    iotaInxIndexerAutoUpdateMenu="enabled"
                                                fi
                                                sudo sed -i 's/^iotaInxIndexerAutoUpdate=.*/iotaInxIndexerAutoUpdate='$iotaInxIndexerAutoUpdate'/' $swarmConfigs/swarm.cfg
                                                whiptail --title "Watchdog - INX-Indexer (IOTA)" --msgbox "INX-Indexer (IOTA) AutoUpdater $iotaInxIndexerAutoUpdateMenu." 8 65
                                            ;;
                                            "2)")
                                                if [ "$iotaInxIndexerAllowDbReset" = "true" ]; then
                                                    iotaInxIndexerAllowDbReset=false
                                                    iotaInxIndexerAllowDbResetMenu="disabled"
                                                else
                                                    iotaInxIndexerAllowDbReset=true
                                                    iotaInxIndexerAllowDbResetMenu="enabled"
                                                fi
                                                sudo sed -i 's/^iotaInxIndexerAllowDbReset=.*/iotaInxIndexerAllowDbReset='$iotaInxIndexerAllowDbReset'/' $swarmConfigs/swarm.cfg
                                                whiptail --title "Watchdog - INX-Indexer (IOTA)" --msgbox "Delete INX-Indexer (IOTA) database $iotaInxIndexerAllowDbResetMenu for Watchdog." 8 65
                                            ;;
                                            "3)")
                                                if [ "$iotaInxIndexerServiceStatusCheck" = "true" ]; then
                                                    iotaInxIndexerServiceStatusCheck=false
                                                    iotaInxIndexerServiceStatusCheckMenu="disabled"
                                                else
                                                    iotaInxIndexerServiceStatusCheck=true
                                                    iotaInxIndexerServiceStatusCheckMenu="enabled"
                                                fi
                                                sudo sed -i 's/^iotaInxIndexerServiceStatusCheck=.*/iotaInxIndexerServiceStatusCheck='$iotaInxIndexerServiceStatusCheck'/' $swarmConfigs/swarm.cfg
                                                whiptail --title "Watchdog - INX-Indexer (IOTA)" --msgbox "Watchdog INX-Indexer (IOTA) service check $iotaInxIndexerServiceStatusCheckMenu." 8 65
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                                "3)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/swarm.cfg
                                        if [ "$iotaInxMqttAutoUpdate" = "true" ]; then
                                            iotaInxMqttAutoUpdateMenu="Disable"
                                        else
                                            iotaInxMqttAutoUpdateMenu="Enable"
                                        fi
                                        if [ "$iotaInxMqttServiceStatusCheck" = "true" ]; then
                                            iotaInxMqttServiceStatusCheckMenu="Disable"
                                        else
                                            iotaInxMqttServiceStatusCheckMenu="Enable"
                                        fi

                                        CHOICE=$(
                                            whiptail --title "Watchdog - INX-MQTT (IOTA)" --menu "\nChoose an option" 24 65 0 \
                                            "1)" "$iotaInxMqttAutoUpdateMenu INX-MQTT (IOTA) AutoUpdater" \
                                            "2)" "$iotaInxMqttServiceStatusCheckMenu INX-MQTT (IOTA) service status check" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$iotaInxMqttAutoUpdate" = "true" ]; then
                                                    iotaInxMqttAutoUpdate=false
                                                    iotaInxMqttAutoUpdateMenu="disabled"
                                                else
                                                    iotaInxMqttAutoUpdate=true
                                                    iotaInxMqttAutoUpdateMenu="enabled"
                                                fi
                                                sudo sed -i 's/^iotaInxMqttAutoUpdate=.*/iotaInxMqttAutoUpdate='$iotaInxMqttAutoUpdate'/' $swarmConfigs/swarm.cfg
                                                whiptail --title "Watchdog - INX-MQTT (IOTA)" --msgbox "INX-MQTT (IOTA) AutoUpdater $iotaInxMqttAutoUpdateMenu." 8 65
                                            ;;
                                            "2)")
                                                if [ "$iotaInxMqttServiceStatusCheck" = "true" ]; then
                                                    iotaInxMqttServiceStatusCheck=false
                                                    iotaInxMqttServiceStatusCheckMenu="disabled"
                                                else
                                                    iotaInxMqttServiceStatusCheck=true
                                                    iotaInxMqttServiceStatusCheckMenu="enabled"
                                                fi
                                                sudo sed -i 's/^iotaInxMqttServiceStatusCheck=.*/iotaInxMqttServiceStatusCheck='$iotaInxMqttServiceStatusCheck'/' $swarmConfigs/swarm.cfg
                                                whiptail --title "Watchdog - INX-MQTT (IOTA)" --msgbox "Watchdog INX-MQTT (IOTA) service check $iotaInxMqttServiceStatusCheckMenu." 8 65
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                                "4)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/swarm.cfg
                                        if [ "$iotaInxParticipationAutoUpdate" = "true" ]; then
                                            iotaInxParticipationAutoUpdateMenu="Disable"
                                        else
                                            iotaInxParticipationAutoUpdateMenu="Enable"
                                        fi
                                        if [ "$iotaInxParticipationAllowDbReset" = "true" ]; then
                                            iotaInxParticipationAllowDbResetMenu="Forbid"
                                        else
                                            iotaInxParticipationAllowDbResetMenu="Allow"
                                        fi
                                        if [ "$iotaInxParticipationServiceStatusCheck" = "true" ]; then
                                            iotaInxParticipationServiceStatusCheckMenu="Disable"
                                        else
                                            iotaInxParticipationServiceStatusCheckMenu="Enable"
                                        fi

                                        CHOICE=$(
                                            whiptail --title "Watchdog - INX-Participation (IOTA)" --menu "\nChoose an option" 24 65 0 \
                                            "1)" "$iotaInxParticipationAutoUpdateMenu INX-Participation (IOTA) AutoUpdater" \
                                            "2)" "$iotaInxParticipationAllowDbResetMenu INX-Participation (IOTA) database reset" \
                                            "3)" "$iotaInxParticipationServiceStatusCheckMenu INX-Participation (IOTA) service status check" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$iotaInxParticipationAutoUpdate" = "true" ]; then
                                                    iotaInxParticipationAutoUpdate=false
                                                    iotaInxParticipationAutoUpdateMenu="disabled"
                                                else
                                                    iotaInxParticipationAutoUpdate=true
                                                    iotaInxParticipationAutoUpdateMenu="enabled"
                                                fi
                                                sudo sed -i 's/^iotaInxParticipationAutoUpdate=.*/iotaInxParticipationAutoUpdate='$iotaInxParticipationAutoUpdate'/' $swarmConfigs/swarm.cfg
                                                whiptail --title "Watchdog - INX-Participation (IOTA)" --msgbox "INX-Participation (IOTA) AutoUpdater $iotaInxParticipationAutoUpdateMenu." 8 65
                                            ;;
                                            "2)")
                                                if [ "$iotaInxParticipationAllowDbReset" = "true" ]; then
                                                    iotaInxParticipationAllowDbReset=false
                                                    iotaInxParticipationAllowDbResetMenu="disabled"
                                                else
                                                    iotaInxParticipationAllowDbReset=true
                                                    iotaInxParticipationAllowDbResetMenu="enabled"
                                                fi
                                                sudo sed -i 's/^iotaInxParticipationAllowDbReset=.*/iotaInxParticipationAllowDbReset='$iotaInxParticipationAllowDbReset'/' $swarmConfigs/swarm.cfg
                                                whiptail --title "Watchdog - INX-Participation (IOTA)" --msgbox "Delete INX-Participation (IOTA) database $iotaInxParticipationAllowDbResetMenu for Watchdog." 8 65
                                            ;;
                                            "3)")
                                                if [ "$iotaInxParticipationServiceStatusCheck" = "true" ]; then
                                                    iotaInxParticipationServiceStatusCheck=false
                                                    iotaInxParticipationServiceStatusCheckMenu="disabled"
                                                else
                                                    iotaInxParticipationServiceStatusCheck=true
                                                    iotaInxParticipationServiceStatusCheckMenu="enabled"
                                                fi
                                                sudo sed -i 's/^iotaInxParticipationServiceStatusCheck=.*/iotaInxParticipationServiceStatusCheck='$iotaInxParticipationServiceStatusCheck'/' $swarmConfigs/swarm.cfg
                                                whiptail --title "Watchdog - INX-Participation (IOTA)" --msgbox "Watchdog INX-Participation (IOTA) service check $iotaInxParticipationServiceStatusCheckMenu." 8 65
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                    "2)")
                        while [ $exitCode -lt 1 ]; do
                            CHOICE=$(
                                whiptail --title "Watchdog - INX (Shimmer)" --menu "\nChoose an option" 24 65 0 \
                                "1)" "INX-Indexer (Shimmer)" \
                                "2)" "INX-MQTT (Shimmer)" \
                                "3)" "INX-Participation (Shimmer)" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/swarm.cfg
                                        if [ "$shimmerInxDashboardAutoUpdate" = "true" ]; then
                                            shimmerInxDashboardAutoUpdateMenu="Disable"
                                        else
                                            shimmerInxDashboardAutoUpdateMenu="Enable"
                                        fi
                                        if [ "$shimmerInxDashboardServiceStatusCheck" = "true" ]; then
                                            shimmerInxDashboardServiceStatusCheckMenu="Disable"
                                        else
                                            shimmerInxDashboardServiceStatusCheckMenu="Enable"
                                        fi

                                        CHOICE=$(
                                            whiptail --title "Watchdog - INX-Dashboard (Shimmer)" --menu "\nChoose an option" 24 65 0 \
                                            "1)" "$shimmerInxDashboardAutoUpdateMenu INX-Dashboard AutoUpdater" \
                                            "2)" "$shimmerInxDashboardServiceStatusCheckMenu INX-Dashboard service status check" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$shimmerInxDashboardAutoUpdate" = "true" ]; then
                                                    shimmerInxDashboardAutoUpdate=false
                                                    shimmerInxDashboardAutoUpdateMenu="disabled"
                                                else
                                                    shimmerInxDashboardAutoUpdate=true
                                                    shimmerInxDashboardAutoUpdateMenu="enabled"
                                                fi
                                                sudo sed -i 's/^shimmerInxDashboardAutoUpdate=.*/shimmerInxDashboardAutoUpdate='$shimmerInxDashboardAutoUpdate'/' $swarmConfigs/swarm.cfg
                                                whiptail --title "Watchdog - INX-Dashboard (Shimmer)" --msgbox "INX-Dashboard (Shimmer) AutoUpdater $shimmerInxDashboardAutoUpdateMenu." 8 65
                                            ;;
                                            "2)")
                                                if [ "$shimmerInxDashboardServiceStatusCheck" = "true" ]; then
                                                    shimmerInxDashboardServiceStatusCheck=false
                                                    shimmerInxDashboardServiceStatusCheckMenu="disabled"
                                                else
                                                    shimmerInxDashboardServiceStatusCheck=true
                                                    shimmerInxDashboardServiceStatusCheckMenu="enabled"
                                                fi
                                                sudo sed -i 's/^shimmerInxDashboardServiceStatusCheck=.*/shimmerInxDashboardServiceStatusCheck='$shimmerInxDashboardServiceStatusCheck'/' $swarmConfigs/swarm.cfg
                                                whiptail --title "Watchdog - INX-Dashboard (Shimmer)" --msgbox "Watchdog INX-Dashboard (Shimmer) service check $shimmerInxDashboardServiceStatusCheckMenu." 8 65
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                                "2)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/swarm.cfg
                                        if [ "$shimmerInxIndexerAutoUpdate" = "true" ]; then
                                            shimmerInxIndexerAutoUpdateMenu="Disable"
                                        else
                                            shimmerInxIndexerAutoUpdateMenu="Enable"
                                        fi
                                        if [ "$shimmerInxIndexerAllowDbReset" = "true" ]; then
                                            shimmerInxIndexerAllowDbResetMenu="Forbid"
                                        else
                                            shimmerInxIndexerAllowDbResetMenu="Allow"
                                        fi
                                        if [ "$shimmerInxIndexerServiceStatusCheck" = "true" ]; then
                                            shimmerInxIndexerServiceStatusCheckMenu="Disable"
                                        else
                                            shimmerInxIndexerServiceStatusCheckMenu="Enable"
                                        fi

                                        CHOICE=$(
                                            whiptail --title "Watchdog - INX-Indexer (Shimmer)" --menu "\nChoose an option" 24 65 0 \
                                            "1)" "$shimmerInxIndexerAutoUpdateMenu INX-Indexer AutoUpdater" \
                                            "2)" "$shimmerInxIndexerAllowDbResetMenu INX-Indexer database reset" \
                                            "3)" "$shimmerInxIndexerServiceStatusCheckMenu INX-Indexer service status check" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$shimmerInxIndexerAutoUpdate" = "true" ]; then
                                                    shimmerInxIndexerAutoUpdate=false
                                                    shimmerInxIndexerAutoUpdateMenu="disabled"
                                                else
                                                    shimmerInxIndexerAutoUpdate=true
                                                    shimmerInxIndexerAutoUpdateMenu="enabled"
                                                fi
                                                sudo sed -i 's/^shimmerInxIndexerAutoUpdate=.*/shimmerInxIndexerAutoUpdate='$shimmerInxIndexerAutoUpdate'/' $swarmConfigs/swarm.cfg
                                                whiptail --title "Watchdog - INX-Indexer (Shimmer)" --msgbox "INX-Indexer (Shimmer) AutoUpdater $shimmerInxIndexerAutoUpdateMenu." 8 65
                                            ;;
                                            "2)")
                                                if [ "$shimmerInxIndexerAllowDbReset" = "true" ]; then
                                                    shimmerInxIndexerAllowDbReset=false
                                                    shimmerInxIndexerAllowDbResetMenu="disabled"
                                                else
                                                    shimmerInxIndexerAllowDbReset=true
                                                    shimmerInxIndexerAllowDbResetMenu="enabled"
                                                fi
                                                sudo sed -i 's/^shimmerInxIndexerAllowDbReset=.*/shimmerInxIndexerAllowDbReset='$shimmerInxIndexerAllowDbReset'/' $swarmConfigs/swarm.cfg
                                                whiptail --title "Watchdog - INX-Indexer (Shimmer)" --msgbox "Delete INX-Indexer (Shimmer) database $shimmerInxIndexerAllowDbResetMenu for Watchdog." 8 65
                                            ;;
                                            "3)")
                                                if [ "$shimmerInxIndexerServiceStatusCheck" = "true" ]; then
                                                    shimmerInxIndexerServiceStatusCheck=false
                                                    shimmerInxIndexerServiceStatusCheckMenu="disabled"
                                                else
                                                    shimmerInxIndexerServiceStatusCheck=true
                                                    shimmerInxIndexerServiceStatusCheckMenu="enabled"
                                                fi
                                                sudo sed -i 's/^shimmerInxIndexerServiceStatusCheck=.*/shimmerInxIndexerServiceStatusCheck='$shimmerInxIndexerServiceStatusCheck'/' $swarmConfigs/swarm.cfg
                                                whiptail --title "Watchdog - INX-Indexer (Shimmer)" --msgbox "Watchdog INX-Indexer (Shimmer) service check $shimmerInxIndexerServiceStatusCheckMenu." 8 65
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                                "3)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/swarm.cfg
                                        if [ "$shimmerInxMqttAutoUpdate" = "true" ]; then
                                            shimmerInxMqttAutoUpdateMenu="Disable"
                                        else
                                            shimmerInxMqttAutoUpdateMenu="Enable"
                                        fi
                                        if [ "$shimmerInxMqttServiceStatusCheck" = "true" ]; then
                                            shimmerInxMqttServiceStatusCheckMenu="Disable"
                                        else
                                            shimmerInxMqttServiceStatusCheckMenu="Enable"
                                        fi

                                        CHOICE=$(
                                            whiptail --title "Watchdog - INX-MQTT (Shimmer)" --menu "\nChoose an option" 24 65 0 \
                                            "1)" "$shimmerInxMqttAutoUpdateMenu INX-MQTT (Shimmer) AutoUpdater" \
                                            "2)" "$shimmerInxMqttServiceStatusCheckMenu INX-MQTT (Shimmer) service status check" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$shimmerInxMqttAutoUpdate" = "true" ]; then
                                                    shimmerInxMqttAutoUpdate=false
                                                    shimmerInxMqttAutoUpdateMenu="disabled"
                                                else
                                                    shimmerInxMqttAutoUpdate=true
                                                    shimmerInxMqttAutoUpdateMenu="enabled"
                                                fi
                                                sudo sed -i 's/^shimmerInxMqttAutoUpdate=.*/shimmerInxMqttAutoUpdate='$shimmerInxMqttAutoUpdate'/' $swarmConfigs/swarm.cfg
                                                whiptail --title "Watchdog - INX-MQTT (Shimmer)" --msgbox "INX-MQTT (Shimmer) AutoUpdater $shimmerInxMqttAutoUpdateMenu." 8 65
                                            ;;
                                            "2)")
                                                if [ "$shimmerInxMqttServiceStatusCheck" = "true" ]; then
                                                    shimmerInxMqttServiceStatusCheck=false
                                                    shimmerInxMqttServiceStatusCheckMenu="disabled"
                                                else
                                                    shimmerInxMqttServiceStatusCheck=true
                                                    shimmerInxMqttServiceStatusCheckMenu="enabled"
                                                fi
                                                sudo sed -i 's/^shimmerInxMqttServiceStatusCheck=.*/shimmerInxMqttServiceStatusCheck='$shimmerInxMqttServiceStatusCheck'/' $swarmConfigs/swarm.cfg
                                                whiptail --title "Watchdog - INX-MQTT (Shimmer)" --msgbox "Watchdog INX-MQTT (Shimmer) service check $shimmerInxMqttServiceStatusCheckMenu." 8 65
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                                "4)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/swarm.cfg
                                        if [ "$shimmerInxParticipationAutoUpdate" = "true" ]; then
                                            shimmerInxParticipationAutoUpdateMenu="Disable"
                                        else
                                            shimmerInxParticipationAutoUpdateMenu="Enable"
                                        fi
                                        if [ "$shimmerInxParticipationAllowDbReset" = "true" ]; then
                                            shimmerInxParticipationAllowDbResetMenu="Forbid"
                                        else
                                            shimmerInxParticipationAllowDbResetMenu="Allow"
                                        fi
                                        if [ "$shimmerInxParticipationServiceStatusCheck" = "true" ]; then
                                            shimmerInxParticipationServiceStatusCheckMenu="Disable"
                                        else
                                            shimmerInxParticipationServiceStatusCheckMenu="Enable"
                                        fi

                                        CHOICE=$(
                                            whiptail --title "Watchdog - INX-Participation (Shimmer)" --menu "\nChoose an option" 24 65 0 \
                                            "1)" "$shimmerInxParticipationAutoUpdateMenu INX-Participation (Shimmer) AutoUpdater" \
                                            "2)" "$shimmerInxParticipationAllowDbResetMenu INX-Participation (Shimmer) database reset" \
                                            "3)" "$shimmerInxParticipationServiceStatusCheckMenu INX-Participation (Shimmer) service status check" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$shimmerInxParticipationAutoUpdate" = "true" ]; then
                                                    shimmerInxParticipationAutoUpdate=false
                                                    shimmerInxParticipationAutoUpdateMenu="disabled"
                                                else
                                                    shimmerInxParticipationAutoUpdate=true
                                                    shimmerInxParticipationAutoUpdateMenu="enabled"
                                                fi
                                                sudo sed -i 's/^shimmerInxParticipationAutoUpdate=.*/shimmerInxParticipationAutoUpdate='$shimmerInxParticipationAutoUpdate'/' $swarmConfigs/swarm.cfg
                                                whiptail --title "Watchdog - INX-Participation (Shimmer)" --msgbox "INX-Participation (Shimmer) AutoUpdater $shimmerInxParticipationAutoUpdateMenu." 8 65
                                            ;;
                                            "2)")
                                                if [ "$shimmerInxParticipationAllowDbReset" = "true" ]; then
                                                    shimmerInxParticipationAllowDbReset=false
                                                    shimmerInxParticipationAllowDbResetMenu="disabled"
                                                else
                                                    shimmerInxParticipationAllowDbReset=true
                                                    shimmerInxParticipationAllowDbResetMenu="enabled"
                                                fi
                                                sudo sed -i 's/^shimmerInxParticipationAllowDbReset=.*/shimmerInxParticipationAllowDbReset='$shimmerInxParticipationAllowDbReset'/' $swarmConfigs/swarm.cfg
                                                whiptail --title "Watchdog - INX-Participation (Shimmer)" --msgbox "Delete INX-Participation (Shimmer) database $shimmerInxParticipationAllowDbResetMenu for Watchdog." 8 65
                                            ;;
                                            "3)")
                                                if [ "$shimmerInxParticipationServiceStatusCheck" = "true" ]; then
                                                    shimmerInxParticipationServiceStatusCheck=false
                                                    shimmerInxParticipationServiceStatusCheckMenu="disabled"
                                                else
                                                    shimmerInxParticipationServiceStatusCheck=true
                                                    shimmerInxParticipationServiceStatusCheckMenu="enabled"
                                                fi
                                                sudo sed -i 's/^shimmerInxParticipationServiceStatusCheck=.*/shimmerInxParticipationServiceStatusCheck='$shimmerInxParticipationServiceStatusCheck'/' $swarmConfigs/swarm.cfg
                                                whiptail --title "Watchdog - INX-Participation (Shimmer)" --msgbox "Watchdog INX-Participation (Shimmer) service check $shimmerInxParticipationServiceStatusCheckMenu." 8 65
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                esac
            done
            exitCode=0
        ;;
        "4)")
            while [ $exitCode -lt 1 ]; do
                source $swarmConfigs/swarm.cfg
                if [ "$goshimmerAutoUpdate" = "true" ]; then
                    goshimmerAutoUpdateMenu="Disable"
                else
                    goshimmerAutoUpdateMenu="Enable"
                fi
                if [ "$goshimmerDbReset" = "true" ]; then
                    goshimmerDbResetMenu="Forbid"
                else
                    goshimmerDbResetMenu="Allow"
                fi
                if [ "$goshimmerCheckSync" = "true" ]; then
                    goshimmerCheckSyncMenu="Disable"
                else
                    goshimmerCheckSyncMenu="Enable"
                fi
                if [ "$goshimmerDbBackupDownload" = "true" ]; then
                    goshimmerDbBackupDownloadMenu="Disable"
                else
                    goshimmerDbBackupDownloadMenu="Enable"
                fi
                CHOICE=$(
                    whiptail --title "Watchdog - GoShimmer" --menu "\nChoose an option" 24 65 0 \
                    "1)" "$goshimmerCheckSyncMenu GoShimmer Sync-Check" \
                    "2)" "$goshimmerAutoUpdateMenu GoShimmer AutoUpdater" \
                    "3)" "$goshimmerDbBackupDownloadMenu GoShimmer DB backup download" \
                    "3)" "$goshimmerDbResetMenu GoShimmer database reset" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        if [ "$goshimmerCheckSync" = "true" ]; then
                            goshimmerCheckSync=false
                            goshimmerCheckSyncMenu="disabled"
                        else
                            goshimmerCheckSync=true
                            goshimmerCheckSyncMenu="enabled"
                        fi
                        sudo sed -i 's/^goshimmerCheckSync=.*/goshimmerCheckSync='$goshimmerCheckSync'/' $swarmConfigs/swarm.cfg
                        whiptail --title "Watchdog - GoShimmer" --msgbox "GoShimmer sync check $goshimmerCheckSyncMenu." 8 65
                    ;;
                    "2)")
                        if [ "$goshimmerAutoUpdate" = "true" ]; then
                            goshimmerAutoUpdate=false
                            goshimmerAutoUpdateMenu="disabled"
                        else
                            goshimmerAutoUpdate=true
                            goshimmerAutoUpdateMenu="enabled"
                        fi
                        sudo sed -i 's/^goshimmerAutoUpdate=.*/goshimmerAutoUpdate='$goshimmerAutoUpdate'/' $swarmConfigs/swarm.cfg
                        whiptail --title "Watchdog - GoShimmer" --msgbox "GoShimmer AutoUpdater $goshimmerAutoUpdateMenu." 8 65
                    ;;
                    "3)")
                        if [ "$goshimmerDbBackupDownload" = "true" ]; then
                            goshimmerDbBackupDownload=false
                            sudo sed -i 's/^goshimmerDbBackupDownload=.*/goshimmerDbBackupDownload=false/' $swarmConfigs/swarm.cfg
                            whiptail --title "GoShimmer - DB Download" --msgbox "GoShimmer DB backup download disabled." 8 65
                        else
                            goshimmerDbBackupDownload=true
                            sudo sed -i 's/^goshimmerDbBackupDownload=.*/goshimmerDbBackupDownload=true/' $swarmConfigs/swarm.cfg
                            whiptail --title "GoShimmer - DB Download" --msgbox "GoShimmer DB download enabled." 8 65
                        fi
                    ;;
                    "4)")
                        if [ "$goshimmerDbReset" = "true" ]; then
                            goshimmerDbReset=false
                            goshimmerDbResetMenu="disabled"
                        else
                            goshimmerDbReset=true
                            goshimmerDbResetMenu="enabled"
                        fi
                        sudo sed -i 's/^goshimmerDbReset=.*/goshimmerDbReset='$goshimmerDbReset'/' $swarmConfigs/swarm.cfg
                        whiptail --title "Watchdog - GoShimmer" --msgbox "Delete GoShimmer database $goshimmerDbResetMenu for Watchdog." 8 65
                    ;;
                esac
            done
            exitCode=0
        ;;
        "5)")
            while [ $exitCode -lt 1 ]; do
                source $swarmConfigs/swarm.cfg
                if [ "$waspAutoUpdate" = "true" ]; then
                    waspAutoUpdateMenu="Disable"
                else
                    waspAutoUpdateMenu="Enable"
                fi
                if [ "$waspAllowDbReset" = "true" ]; then
                    waspAllowDbResetMenu="Forbid"
                else
                    waspAllowDbResetMenu="Allow"
                fi

                CHOICE=$(
                    whiptail --title "Watchdog - WASP" --menu "\nChoose an option" 24 65 0 \
                    "1)" "$waspAutoUpdateMenu WASP AutoUpdater" \
                    "2)" "$waspAllowDbResetMenu WASP database reset" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        if [ "$waspAutoUpdate" = "true" ]; then
                            waspAutoUpdate=false
                            waspAutoUpdateMenu="disabled"
                        else
                            waspAutoUpdate=true
                            waspAutoUpdateMenu="enabled"
                        fi
                        sudo sed -i 's/^waspAutoUpdate=.*/waspAutoUpdate='$waspAutoUpdate'/' $swarmConfigs/swarm.cfg
                        whiptail --title "Watchdog - WASP" --msgbox "WASP AutoUpdater $waspAutoUpdateMenu." 8 65
                    ;;
                    "2)")
                        if [ "$waspAllowDbReset" = "true" ]; then
                            waspAllowDbReset=false
                            waspAllowDbResetMenu="disabled"
                        else
                            waspAllowDbReset=true
                            waspAllowDbResetMenu="enabled"
                        fi
                        sudo sed -i 's/^waspAllowDbReset=.*/waspAllowDbReset='$waspAllowDbReset'/' $swarmConfigs/swarm.cfg
                        whiptail --title "Watchdog - WASP" --msgbox "Delete WASP database $waspAllowDbResetMenu for Watchdog." 8 65
                    ;;
                esac
            done
            exitCode=0
        ;;
        "6)")
            while [ $exitCode -lt 1 ]; do
                source $swarmConfigs/swarm.cfg
                if [ "$telegramNotifications" = "true" ]; then
                    telegramNotificationsStatus="Disable"
                else
                    telegramNotificationsStatus="Enable"
                fi
                CHOICE=$(
                    whiptail --title "Watchdog - Telegram Notifications" --menu "\nChoose an option" 24 65 0 \
                    "1)" "$telegramNotificationsStatus Telegram Notifications" \
                    "2)" "Set Telegram Bot Token" \
                    "3)" "Set Telegram Channel ID" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        if [ "$telegramNotifications" = "true" ]; then
                            telegramText="[$HOSTNAME] Watchdog Telegram notifications via SWARM disabled."
                            source $watchdogModules/watchdogTelegram
                            telegramNotifications=false
                            sudo sed -i 's/^telegramNotifications=.*/telegramNotifications=false/' $swarmConfigs/swarm.cfg
                            whiptail --title "Watchdog - Telegram Notifications" --msgbox "Telegram notification for Watchdog disabled." 8 65
                        else
                            telegramNotifications=true
                            sudo sed -i 's/^telegramNotifications=.*/telegramNotifications=true/' $swarmConfigs/swarm.cfg
                            telegramText="[$HOSTNAME] Watchdog Telegram notifications via SWARM enabled."
                            source $watchdogModules/watchdogTelegram
                            whiptail --title "Watchdog - Telegram Notifications" --msgbox "Telegram notification for Watchdog enabled." 8 65
                        fi
                    ;;
                    "2)")
                        currentTelegramBotToken="$telegramBotToken"
                        telegramBotToken=$(whiptail --inputbox "\nEnter your Telegram Bot Token" 10 65 $telegramBotToken --title "Watchdog - Telegram Notifications" 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ "$exitStatus" .= "1" ] && [ "$currentTelegramBotToken" .= "$telegramBotToken" ]; then
                            sudo sed -i 's~^telegramBotToken=.*~telegramBotToken="'$telegramBotToken'"~' $swarmConfigs/swarm.cfg
                            whiptail --title "Watchdog - Telegram Notifications" --msgbox "New Telegram bot token successfully set." 8 65
                        fi
                    ;;
                    "3)")
                        currentTelegramChannelId="$telegramChannelId"
                        telegramChannelId=$(whiptail --inputbox "\nEnter your Telegram Channel ID" 10 65 $telegramChannelId --title "Watchdog - Telegram Notifications" 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ "$exitStatus" .= "1" ] && [ "$currentTelegramChannelId" .= "$telegramChannelId" ]; then
                            sudo sed -i 's~^telegramChannelId=.*~telegramChannelId="'$telegramChannelId'"~' $swarmConfigs/swarm.cfg
                            whiptail --title "Watchdog - Telegram Notifications" --msgbox "New Telegram channel ID successfully set." 8 65
                        fi
                    ;;
                esac
            done
            exitCode=0
        ;;
        "7)")
            if (whiptail --title "Watchdog - Update" --yesno --defaultno "Do you really want to update Watchdog?" 8 65); then
                ( crontab -l | grep -v -F "$watchdogCronCmd" ) | crontab - > /dev/null 2>&1
                ( crontab -l | grep -v -F "$watchdogCronCmd" ; echo "$watchdogCronJob" ) | crontab - > /dev/null 2>&1
                whiptail --title "Watchdog - Update" --msgbox "Watchdog cronjob updated." 8 65
            fi
        ;;
    esac
done
exitCode=0