#!/bin/bash
while [ $exitCode -lt 1 ]; do
    clear
    CHOICE=$(
        whiptail --title "SWARM Menu" --menu "\nChoose an option" 24 65 0 \
        "" "" \
        "1)" "Swarm Auth" \
        "2)" "App(s) Info" \
        "3)" "SWARM Info" \
        "4)" "SWARM Configuration" \
        "5)" "Watchdog Configuration" \
        "6)" "SWARM Tools" \
        "7)" "Manage SWARM" 3>&2 2>&1 1>&3
    )
    exitstatus=$?
    if [ "$exitstatus" = "1" ]; then
        exitCode=1
    fi
    case $CHOICE in
        "1)")
            while [ $exitCode -lt 1 ]; do
                source $swarmConfigs/swarm.cfg
                source $swarmModule/swarmAuth
                CHOICE=$(
                    whiptail --title "SWARM - Auth" --menu "\nAuth Status: $swarmAuthText\n\nChoose an option" 24 65 0 \
                    "" "" \
                    "1)" "Set Username" \
                    "2)" "Set Password" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        inputSwarmAuthUser=$(whiptail --inputbox "Type the username for the update access of SWARM:" 10 65 $swarmAuthUser --title "SWARM - Auth" 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ $exitStatus = 0 ] && [ "$swarmAuthUser" != "$inputSwarmAuthUser" ]; then
                            swarmAuthUser="$inputSwarmAuthUser"
                            sudo sed -i 's~^swarmAuthUser=.*~swarmAuthUser="'"$swarmAuthUser"'"~g' $swarmConfigs/swarm.cfg
                            unset swarmAuth
                        fi
                        unset inputSwarmAuthUser
                    ;;
                    "2)")
                        inputSwarmAuthPwd=$(whiptail --passwordbox "\nPlease enter the password for the update access of SWARM:" 8 65 --title "SWARM - Auth" 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ $exitStatus = 0 ] && [ "$swarmAuthPwd" != "$inputSwarmAuthPwd" ]; then
                            swarmAuthPwd="$inputSwarmAuthPwd"
                            sudo sed -i 's~^swarmAuthPwd=.*~swarmAuthPwd="'"$swarmAuthPwd"'"~g' $swarmConfigs/swarm.cfg
                            unset swarmAuth
                        fi
                        unset inputSwarmAuthPwd
                    ;;
                esac
            done
            exitCode=0
        ;;
        "2)")
            source $swarmModule/swarmAppInfo
        ;;
        "3)")
            swarmInfo=true
            source $swarmModule/swarmInfo
            unset swarmInfo
        ;;
        "4)")
            source $swarmModule/swarmConfiguration
        ;;
        "5)")
            source $swarmModule/swarmWatchdogConfiguration
        ;;
        "6)")
            source $swarmModule/swarmTools
        ;;
        "7)")
            while [ $exitCode -lt 1 ]; do
                CHOICE=$(
                    whiptail --title "SWARM Menu" --menu "\nChoose an option" 24 65 0 \
                    "" "" \
                    "1)" "Update SWARM" \
                    "2)" "Remove SWARM" \
                    "3)" "Restore SWARM configs" \
                    "4)" "Backup SWARM Configs" \
                    "5)" "Check SWARM.log" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        # Update SWARM
                        if (whiptail --title "SWARM - Update" --yesno --defaultno "Do you really want to update SWARM?" 8 65); then
                            inputLatestSwarmVersion=$(whiptail --inputbox "Type the username for the update access of SWARM:" 10 65 "latest" --title "SWARM - Update" 3>&1 1>&2 2>&3)
                            exitstatus=$?
                            if [ "$exitstatus" != "1" ]; then
                                if [ "$inputLatestSwarmVersion" != "latest" ]; then
                                    latestSwarmVersion="$inputLatestSwarmVersion"
                                else
                                    source $swarmConfigs/latest-versions.cfg
                                fi
                                swarmManualUpdate=true
                                source $swarmModule/swarmUpdater
                                unset swarmManualUpdate inputLatestSwarmVersion
                                exit 0
                            fi
                        fi
                    ;;
                    "2)")
                        source $swarmModule/swarmRemoval
                    ;;
                    "3)")
                        if [ -d "$swarmBackupsPath" ]; then
                            swarmConfigFiles=$(whiptail --title "SWARM [RESTORE] Config" --checklist "\nSelect (spacebar) the configs you want to restore." 24 65 11 \
                                "SWARM.cfg" "" OFF \
                                "Proxy.cfg" "" OFF \
                                "IOTA-Hornet.cfg" "" OFF \
                                "Shimmer-Hornet.cfg" "" OFF \
                                "Shimmer-INX-Dashboard.cfg" "" OFF \
                                "Shimmer-INX-Indexer.cfg" "" OFF \
                                "Shimmer-INX-Participation.cfg" "" OFF \
                                "Shimmer-INX-MQTT.cfg" "" OFF \
                                "Shimmer-INX-POI.cfg" "" OFF \
                                "GoShimmer.cfg" "" OFF \
                                "WASP.cfg" "" OFF 3>&1 1>&2 2>&3)
                            exitStatus=$?
                            if [ "$exitStatus" != "1" ] && [ ! -z "$swarmConfigFiles" ]; then
                                swarmConfigFiles=$(echo $swarmConfigFiles | tr '[:upper:]' '[:lower:]' | tr -d '"')
                                {
                                    whiptailGaugeNumber=10
                                    echo 0
                                    echo 10
                                    for swarmConfigFile in ${swarmConfigFiles[@]}
                                    do
                                        if [ -f "$swarmBackupPath/$swarmConfigFile" ]; then
                                                sudo cp -rf $swarmBackupPath/$swarmConfigFile $swarmConfigs/$swarmConfigFile > /dev/null 2>&1
                                        fi
                                        let whiptailGaugeNumber=$whiptailGaugeNumber+10
                                        echo $whiptailGaugeNumber
                                    done
                                    echo 100
                                    sleep 0.5
                                    unset whiptailGaugeNumber
                                } | whiptail --gauge "Please wait while all selected config files are restored..." 8 65 0
                                whiptail --title "SWARM [RESTORE] Config" --msgbox "Restored all selected SWARM config files." 8 65
                            fi
                            unset swarmConfigFiles swarmConfigFile
                        else
                            whiptail --title "SWARM [RESTORE] Config" --msgbox "Aborted - No backup folder was found, please create a backup first." 8 65
                        fi
                    ;;
                    "4)")
                        swarmConfigFiles=$(whiptail --title "SWARM [BACKUP] Config" --checklist "\nSelect (spacebar) the configs you want to backup." 24 65 11 \
                            "SWARM.cfg" "" OFF \
                            "Proxy.cfg" "" OFF \
                            "IOTA-Hornet.cfg" "" OFF \
                            "Shimmer-Hornet.cfg" "" OFF \
                            "Shimmer-INX-Dashboard.cfg" "" OFF \
                            "Shimmer-INX-Indexer.cfg" "" OFF \
                            "Shimmer-INX-Participation.cfg" "" OFF \
                            "Shimmer-INX-MQTT.cfg" "" OFF \
                            "Shimmer-INX-POI.cfg" "" OFF \
                            "GoShimmer.cfg" "" OFF \
                            "WASP.cfg" "" OFF 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ "$exitStatus" != "1" ] && [ ! -z "$swarmConfigFiles" ]; then
                            swarmConfigFiles=$(echo $swarmConfigFiles | tr '[:upper:]' '[:lower:]' | tr -d '"')
                            if [ ! -d "$swarmBackupPath" ]; then
                                sudo mkdir -p $swarmBackupPath > /dev/null 2>&1
                            fi
                            {
                                whiptailGaugeNumber=10
                                echo 0
                                echo 10
                                for swarmConfigFile in ${swarmConfigFiles[@]}
                                do
                                    if [ -f "$swarmConfigs/$swarmConfigFile" ]; then
                                            sudo cp -rf $swarmConfigs/$swarmConfigFile $swarmBackupPath/$swarmConfigFile > /dev/null 2>&1
                                    fi
                                    let whiptailGaugeNumber=$whiptailGaugeNumber+10
                                    echo $whiptailGaugeNumber
                                done
                                echo 100
                                sleep 0.5
                                unset whiptailGaugeNumber
                            } | whiptail --gauge "Please wait while all selected config files are backuped..." 8 65 0
                            whiptail --title "SWARM [BACKUP] Config" --msgbox "Backup of all the selected config files created." 8 65
                        fi
                        unset swarmConfigFiles swarmConfigFile
                    ;;
                    "5)")
                        sudo $swarmCLEditor $swarmLogs/swarm.log
                    ;;
                esac
            done
            exitCode=0
        ;;
    esac
done
exitCode=0
