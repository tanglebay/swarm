#!/bin/bash
if [ ! -d "/tmp/swarm" ]; then
    tmpdir="/tmp/swarm"
    sudo mkdir -p $tmpdir
fi

###########################################################################################################################

if [ -f "$swarmTmpPath/iota-hornet.cfg" ] || [ -f "$swarmTmpPath/hornet.cfg" ]; then
    if [ -f "$swarmTmpPath/hornet.cfg" ]; then
        source $swarmModule/swarmHornetMigration
    else
        source $swarmTmpPath/iota-hornet.cfg
    fi

    # Upater for Hornet.cfg
    if [ -z "$iotaHornetRelease" ]; then
        sudo sed -i 's/^iotaHornetRelease=.*/iotaHornetRelease="stable"/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetRelease=.*/iotaHornetRelease="'$iotaHornetRelease'"/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetNetwork" ]; then
        sudo sed -i 's/^iotaHornetNetwork=.*/iotaHornetNetwork="mainnet"/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetNetwork=.*/iotaHornetNetwork="'$iotaHornetNetwork'"/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetAlias" ]; then
        sudo sed -i 's/^iotaHornetAlias=.*/iotaHornetAlias="IOTA Hornet"/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's~^iotaHornetAlias=.*~iotaHornetAlias="'"$iotaHornetAlias"'"~g' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetDisablePlugins" ]; then
        sudo sed -i 's/^iotaHornetDisablePlugins=.*/iotaHornetDisablePlugins=""/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetDisablePlugins=.*/iotaHornetDisablePlugins="'$iotaHornetDisablePlugins'"/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetEnablePlugins" ]; then
        sudo sed -i 's/^iotaHornetEnablePlugins=.*/iotaHornetEnablePlugins=""/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetEnablePlugins=.*/iotaHornetEnablePlugins="'$iotaHornetEnablePlugins'"/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetUnknownPeersLimit" ]; then
        sudo sed -i 's/^iotaHornetUnknownPeersLimit=.*/iotaHornetUnknownPeersLimit=2/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetUnknownPeersLimit=.*/iotaHornetUnknownPeersLimit='$iotaHornetUnknownPeersLimit'/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetSnapshotInterval" ]; then
        sudo sed -i 's/^iotaHornetSnapshotInterval=.*/iotaHornetSnapshotInterval=200/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetSnapshotInterval=.*/iotaHornetSnapshotInterval='$iotaHornetSnapshotInterval'/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetGossipPort" ]; then
        sudo sed -i 's/^iotaHornetGossipPort=.*/iotaHornetGossipPort=15600/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetGossipPort=.*/iotaHornetGossipPort='$iotaHornetGossipPort'/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetAutopeeringPort" ]; then
        sudo sed -i 's/^iotaHornetAutopeeringPort=.*/iotaHornetAutopeeringPort=14626/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetAutopeeringPort=.*/iotaHornetAutopeeringPort='$iotaHornetAutopeeringPort'/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetPowEnabled" ]; then
        sudo sed -i 's/^iotaHornetPowEnabled=.*/iotaHornetPowEnabled=false/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetPowEnabled=.*/iotaHornetPowEnabled='$iotaHornetPowEnabled'/' $swarmConfigs/iota-hornet.cfg
    fi
    ###
    if [ -z "$iotaHornetPowWorkerCount" ]; then
        sudo sed -i 's/^iotaHornetPowWorkerCount=.*/iotaHornetPowWorkerCount=1/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetPowWorkerCount=.*/iotaHornetPowWorkerCount='$iotaHornetPowWorkerCount'/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetPruningEnabled" ]; then
        sudo sed -i 's/^iotaHornetPruningEnabled=.*/iotaHornetPruningEnabled=true/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetPruningEnabled=.*/iotaHornetPruningEnabled='$iotaHornetPruningEnabled'/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetPruningDatabaseSize" ]; then
        sudo sed -i 's/^iotaHornetPruningDatabaseSize=.*/iotaHornetPruningDatabaseSize=/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetPruningDatabaseSize=.*/iotaHornetPruningDatabaseSize='$iotaHornetPruningDatabaseSize'/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetPruningPercentage" ]; then
        sudo sed -i 's/^iotaHornetPruningPercentage=.*/iotaHornetPruningPercentage=5/' $swarmConfigs/iota-hornet.cfg
    else
        iotaHornetPruningPercentage=$(echo $iotaHornetPruningPercentage | tr -d '%')
        sudo sed -i 's/^iotaHornetPruningPercentage=.*/iotaHornetPruningPercentage='$iotaHornetPruningPercentage'/' $swarmConfigs/iota-hornet.cfg      
    fi
    ####
    if [ -z "$iotaHornetPruningCooldownTime" ]; then
        sudo sed -i 's/^iotaHornetPruningCooldownTime=.*/iotaHornetPruningCooldownTime=5/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetPruningCooldownTime=.*/iotaHornetPruningCooldownTime='$iotaHornetPruningCooldownTime'/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetUsername" ]; then
        sudo sed -i 's/^iotaHornetUsername=.*/iotaHornetUsername=""/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetUsername=.*/iotaHornetUsername="'$iotaHornetUsername'"/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetPasswordHash" ]; then
        sudo sed -i 's/^iotaHornetPasswordHash=.*/iotaHornetPasswordHash="0000000000000000000000000000000000000000000000000000000000000000"/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetPasswordHash=.*/iotaHornetPasswordHash="'$iotaHornetPasswordHash'"/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetPasswordSalt" ]; then
        sudo sed -i 's/^iotaHornetPasswordSalt=.*/iotaHornetPasswordSalt="0000000000000000000000000000000000000000000000000000000000000000"/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetPasswordSalt=.*/iotaHornetPasswordSalt="'$iotaHornetPasswordSalt'"/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetIdentity" ]; then
        sudo sed -i 's~^iotaHornetIdentity=.*~iotaHornetIdentity=""~' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's~^iotaHornetIdentity=.*~iotaHornetIdentity="'$iotaHornetIdentity'"~' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetRunAsEntryNode" ]; then
        sudo sed -i 's/^iotaHornetRunAsEntryNode=.*/iotaHornetRunAsEntryNode=false/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetRunAsEntryNode=.*/iotaHornetRunAsEntryNode='$iotaHornetRunAsEntryNode'/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetApiJwtSalt" ]; then
        sudo sed -i 's~^iotaHornetApiJwtSalt=.*~iotaHornetApiJwtSalt="IOTA-HORNET"~' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's~^iotaHornetApiJwtSalt=.*~iotaHornetApiJwtSalt="'$iotaHornetApiJwtSalt'"~' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetApiJwtToken" ]; then
        sudo sed -i 's~^iotaHornetApiJwtToken=.*~iotaHornetApiJwtToken=""~' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's~^iotaHornetApiJwtToken=.*~iotaHornetApiJwtToken="'"$iotaHornetApiJwtToken"'"~' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetApiPublicRoutes" ]; then
        sudo sed -i 's~^iotaHornetApiPublicRoutes=.*~iotaHornetApiPublicRoutes="/health,/mqtt,/api/v1/info,/api/v1/tips,/api/v1/messages*,/api/v1/transactions*,/api/v1/milestones*,/api/v1/outputs*,/api/v1/addresses*,/api/v1/treasury,/api/v1/receipts*,/api/plugins/participation/events*,/api/plugins/participation/outputs*,/api/plugins/participation/addresses*"~' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's~^iotaHornetApiPublicRoutes=.*~iotaHornetApiPublicRoutes="'$iotaHornetApiPublicRoutes'"~' $swarmConfigs/iota-hornet.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/shimmer-hornet.cfg" ]; then
    source $swarmTmpPath/shimmer-hornet.cfg

    ####
    if [ -z "$shimmerHornetRelease" ]; then
        sudo sed -i 's/^shimmerHornetRelease=.*/shimmerHornetRelease="beta"/' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's/^shimmerHornetRelease=.*/shimmerHornetRelease="beta"/' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetNetwork" ]; then
        sudo sed -i 's/^shimmerHornetNetwork=.*/shimmerHornetNetwork="testnet"/' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's/^shimmerHornetNetwork=.*/shimmerHornetNetwork="testnet"/' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetAlias" ]; then
        sudo sed -i 's~^shimmerHornetAlias=.*~shimmerHornetAlias="SHIMMER HORNET"~g' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's~^shimmerHornetAlias=.*~shimmerHornetAlias="'"$shimmerHornetAlias"'"~g' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetApiEnabled" ]; then
        sudo sed -i 's~^shimmerHornetApiEnabled=.*~shimmerHornetApiEnabled=true~g' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's~^shimmerHornetApiEnabled=.*~shimmerHornetApiEnabled='$shimmerHornetApiEnabled'~g' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetUpdateCheck" ]; then
        sudo sed -i 's~^shimmerHornetUpdateCheck=.*~shimmerHornetUpdateCheck=true~g' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's~^shimmerHornetUpdateCheck=.*~shimmerHornetUpdateCheck='$shimmerHornetUpdateCheck'~g' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetUnknownPeersLimit" ]; then
        sudo sed -i 's/^shimmerHornetUnknownPeersLimit=.*/shimmerHornetUnknownPeersLimit=2/' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's/^shimmerHornetUnknownPeersLimit=.*/shimmerHornetUnknownPeersLimit='$shimmerHornetUnknownPeersLimit'/' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetSnapshotInterval" ]; then
        sudo sed -i 's/^shimmerHornetSnapshotInterval=.*/shimmerHornetSnapshotInterval=200/' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's/^shimmerHornetSnapshotInterval=.*/shimmerHornetSnapshotInterval='$shimmerHornetSnapshotInterval'/' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetGossipPort" ]; then
        sudo sed -i 's/^shimmerHornetGossipPort=.*/shimmerHornetGossipPort=15601/' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's/^shimmerHornetGossipPort=.*/shimmerHornetGossipPort='$shimmerHornetGossipPort'/' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetAutopeeringEnabled" ]; then
        sudo sed -i 's/^shimmerHornetAutopeeringEnabled=.*/shimmerHornetAutopeeringEnabled=false/' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's/^shimmerHornetAutopeeringEnabled=.*/shimmerHornetAutopeeringEnabled='$shimmerHornetAutopeeringEnabled'/' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetAutopeeringPort" ]; then
        sudo sed -i 's/^shimmerHornetAutopeeringPort=.*/shimmerHornetAutopeeringPort=14636/' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's/^shimmerHornetAutopeeringPort=.*/shimmerHornetAutopeeringPort='$shimmerHornetAutopeeringPort'/' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetPowEnabled" ]; then
        sudo sed -i 's/^shimmerHornetPowEnabled=.*/shimmerHornetPowEnabled=false/' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's/^shimmerHornetPowEnabled=.*/shimmerHornetPowEnabled='$shimmerHornetPowEnabled'/' $swarmConfigs/shimmer-hornet.cfg
    fi
    ###
    if [ -z "$shimmerHornetPowWorkerCount" ]; then
        sudo sed -i 's/^shimmerHornetPowWorkerCount=.*/shimmerHornetPowWorkerCount=1/' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's/^shimmerHornetPowWorkerCount=.*/shimmerHornetPowWorkerCount='$shimmerHornetPowWorkerCount'/' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetPruningEnabled" ]; then
        sudo sed -i 's/^shimmerHornetPruningEnabled=.*/shimmerHornetPruningEnabled=true/' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's/^shimmerHornetPruningEnabled=.*/shimmerHornetPruningEnabled='$shimmerHornetPruningEnabled'/' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetPruningDatabaseSize" ]; then
        sudo sed -i 's/^shimmerHornetPruningDatabaseSize=.*/shimmerHornetPruningDatabaseSize=/' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's/^shimmerHornetPruningDatabaseSize=.*/shimmerHornetPruningDatabaseSize='$shimmerHornetPruningDatabaseSize'/' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetPruningPercentage" ]; then
        sudo sed -i 's/^shimmerHornetPruningPercentage=.*/shimmerHornetPruningPercentage=5/' $swarmConfigs/shimmer-hornet.cfg
    else
        shimmerHornetPruningPercentage=$(echo $shimmerHornetPruningPercentage | tr -d '%')
        sudo sed -i 's/^shimmerHornetPruningPercentage=.*/shimmerHornetPruningPercentage='$shimmerHornetPruningPercentage'/' $swarmConfigs/shimmer-hornet.cfg   
    fi
    ####
    if [ -z "$shimmerHornetPruningCooldownTime" ]; then
        sudo sed -i 's/^shimmerHornetPruningCooldownTime=.*/shimmerHornetPruningCooldownTime=5/' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's/^shimmerHornetPruningCooldownTime=.*/shimmerHornetPruningCooldownTime='$shimmerHornetPruningCooldownTime'/' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetIdentity" ]; then
        sudo sed -i 's~^shimmerHornetIdentity=.*~shimmerHornetIdentity=""~' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's~^shimmerHornetIdentity=.*~shimmerHornetIdentity="'$shimmerHornetIdentity'"~' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetRunAsEntryNode" ]; then
        sudo sed -i 's/^shimmerHornetRunAsEntryNode=.*/shimmerHornetRunAsEntryNode=false/' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's/^shimmerHornetRunAsEntryNode=.*/shimmerHornetRunAsEntryNode='$shimmerHornetRunAsEntryNode'/' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetApiJwtSalt" ]; then
        sudo sed -i 's~^shimmerHornetApiJwtSalt=.*~shimmerHornetApiJwtSalt="HORNET"~' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's~^shimmerHornetApiJwtSalt=.*~shimmerHornetApiJwtSalt="'$shimmerHornetApiJwtSalt'"~' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetApiJwtToken" ]; then
        sudo sed -i 's~^shimmerHornetApiJwtToken=.*~shimmerHornetApiJwtToken=""~' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's~^shimmerHornetApiJwtToken=.*~shimmerHornetApiJwtToken="'"$shimmerHornetApiJwtToken"'"~' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetApiPublicRoutes" ]; then
        sudo sed -i 's~^shimmerHornetApiPublicRoutes=.*~shimmerHornetApiPublicRoutes="/health,/api/routes,/api/core/v2/info,/api/core/v2/tips,/api/core/v2/blocks*,/api/core/v2/transactions*,/api/core/v2/milestones*,/api/core/v2/outputs*,/api/core/v2/treasury,/api/core/v2/receipts*,/api/debug/v1/*,/api/indexer/v1/*,/api/mqtt/v1,/api/participation/v1/events*,/api/participation/v1/outputs*,/api/participation/v1/addresses*"~' $swarmConfigs/shimmer-hornet.cfg
    else
        shimmerHornetApiPublicRoutes="/health,/api/routes,/api/core/v2/info,/api/core/v2/tips,/api/core/v2/blocks*,/api/core/v2/transactions*,/api/core/v2/milestones*,/api/core/v2/outputs*,/api/core/v2/treasury,/api/core/v2/receipts*,/api/debug/v1/*,/api/indexer/v1/*,/api/mqtt/v1,/api/participation/v1/events*,/api/participation/v1/outputs*,/api/participation/v1/addresses*"
        sudo sed -i 's~^shimmerHornetApiPublicRoutes=.*~shimmerHornetApiPublicRoutes="'"$shimmerHornetApiPublicRoutes"'"~' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetInxEnabled" ]; then
        sudo sed -i 's~^shimmerHornetInxEnabled=.*~shimmerHornetInxEnabled=true~g' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's~^shimmerHornetInxEnabled=.*~shimmerHornetInxEnabled='$shimmerHornetInxEnabled'~g' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetInxAddress" ]; then
        sudo sed -i 's~^shimmerHornetInxAddress=.*~shimmerHornetInxAddress="localhost:9030"~' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's~^shimmerHornetInxAddress=.*~shimmerHornetInxAddress="'$shimmerHornetInxAddress'"~' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetInxPowWorkerCount" ]; then
        sudo sed -i 's~^shimmerHornetInxPowWorkerCount=.*~shimmerHornetInxPowWorkerCount=0~' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's~^shimmerHornetInxPowWorkerCount=.*~shimmerHornetInxPowWorkerCount='$shimmerHornetInxPowWorkerCount'~' $swarmConfigs/shimmer-hornet.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/goshimmer.cfg" ]; then
    source $swarmTmpPath/goshimmer.cfg

    if [ -z "$goshimmerDashboardAuthEnabled" ]; then
        sudo sed -i 's/^goshimmerDashboardAuthEnabled=.*/goshimmerDashboardAuthEnabled=false/' $swarmConfigs/goshimmer.cfg
    else
        sudo sed -i 's/^goshimmerDashboardAuthEnabled=.*/goshimmerDashboardAuthEnabled='$goshimmerDashboardAuthEnabled'/' $swarmConfigs/goshimmer.cfg
    fi

    if [ -z "$goshimmerWebapiAuthEnabled" ]; then
        sudo sed -i 's/^goshimmerWebapiAuthEnabled=.*/goshimmerWebapiAuthEnabled=false/' $swarmConfigs/goshimmer.cfg
    else
        sudo sed -i 's/^goshimmerWebapiAuthEnabled=.*/goshimmerWebapiAuthEnabled='$goshimmerWebapiAuthEnabled'/' $swarmConfigs/goshimmer.cfg
    fi

    if [ -z "$goshimmerDisablePlugins" ]; then
        sudo sed -i 's/^goshimmerDisablePlugins=.*/goshimmerDisablePlugins="portcheck"/' $swarmConfigs/goshimmer.cfg
    else
        if [[ $goshimmerDisablePlugins != *portcheck* ]]; then
            sudo sed -i 's/^goshimmerDisablePlugins=.*/goshimmerDisablePlugins="portcheck,'$goshimmerDisablePlugins'"/' $swarmConfigs/goshimmer.cfg
        else
            sudo sed -i 's/^goshimmerDisablePlugins=.*/goshimmerDisablePlugins="'$goshimmerDisablePlugins'"/' $swarmConfigs/goshimmer.cfg
        fi
    fi

    if [ -z "$goshimmerEnablePlugins" ]; then
        sudo sed -i 's/^goshimmerEnablePlugins=.*/goshimmerEnablePlugins=""/' $swarmConfigs/goshimmer.cfg
    else
        sudo sed -i 's/^goshimmerEnablePlugins=.*/goshimmerEnablePlugins="'$goshimmerEnablePlugins'"/' $swarmConfigs/goshimmer.cfg
    fi

    if [ -z "$goshimmerGossipPort" ]; then
        sudo sed -i 's/^goshimmerGossipPort=.*/goshimmerGossipPort=14666/' $swarmConfigs/goshimmer.cfg
    else
        sudo sed -i 's/^goshimmerGossipPort=.*/goshimmerGossipPort='$goshimmerGossipPort'/' $swarmConfigs/goshimmer.cfg
    fi

    if [ -z "$goshimmerAutopeeringPort" ]; then
        sudo sed -i 's/^goshimmerAutopeeringPort=.*/goshimmerAutopeeringPort=14646/' $swarmConfigs/goshimmer.cfg
    else
        sudo sed -i 's/^goshimmerAutopeeringPort=.*/goshimmerAutopeeringPort='$goshimmerAutopeeringPort'/' $swarmConfigs/goshimmer.cfg
    fi

    if [ -z "$goshimmerSeed" ]; then
        sudo sed -i 's/^goshimmerSeed=.*/goshimmerSeed=""/' $swarmConfigs/goshimmer.cfg
    else
        sudo sed -i 's~^goshimmerSeed=.*~goshimmerSeed="'$goshimmerSeed'"~g' $swarmConfigs/goshimmer.cfg
    fi
    
    if [ -z "$goshimmerRunAsEntryNode" ]; then
        sudo sed -i 's/^goshimmerRunAsEntryNode=.*/goshimmerRunAsEntryNode=false/' $swarmConfigs/goshimmer.cfg
    else
        sudo sed -i 's~^goshimmerRunAsEntryNode=.*~goshimmerRunAsEntryNode='$goshimmerRunAsEntryNode'~g' $swarmConfigs/goshimmer.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/wasp.cfg" ]; then
    source $swarmTmpPath/wasp.cfg

    if [ -z "$waspDashboardAuthUsername" ]; then
        sudo sed -i 's/^waspDashboardAuthUsername=.*/waspDashboardAuthUsername="wasp"/' $swarmConfigs/wasp.cfg
    else
        sudo sed -i 's/^waspDashboardAuthUsername=.*/waspDashboardAuthUsername="'$waspDashboardAuthUsername'"/' $swarmConfigs/wasp.cfg
    fi

    if [ -z "$waspDashboardAuthPassword" ]; then
        sudo sed -i 's/^waspDashboardAuthPassword=.*/waspDashboardAuthPassword="wasp"/' $swarmConfigs/wasp.cfg
    else
        sudo sed -i 's/^waspDashboardAuthPassword=.*/waspDashboardAuthPassword="'$waspDashboardAuthPassword'"/' $swarmConfigs/wasp.cfg
    fi

    if [ -z "$waspWebapiAuthEnabled" ]; then
        sudo sed -i 's/^waspWebapiAuthEnabled=.*/waspWebapiAuthEnabled=false/' $swarmConfigs/wasp.cfg
    else
        sudo sed -i 's/^waspWebapiAuthEnabled=.*/waspWebapiAuthEnabled='$waspWebapiAuthEnabled'/' $swarmConfigs/wasp.cfg
    fi

    if [ -z "$waspDisablePlugins" ]; then
        sudo sed -i 's/^waspDisablePlugins=.*/waspDisablePlugins=""/' $swarmConfigs/wasp.cfg
    else
        sudo sed -i 's/^waspDisablePlugins=.*/waspDisablePlugins="'$waspDisablePlugins'"/' $swarmConfigs/wasp.cfg
    fi

    if [ -z "$waspEnablePlugins" ]; then
        sudo sed -i 's/^waspEnablePlugins=.*/waspEnablePlugins=""/' $swarmConfigs/wasp.cfg
    else
        sudo sed -i 's/^waspEnablePlugins=.*/waspEnablePlugins="'$waspEnablePlugins'"/' $swarmConfigs/wasp.cfg
    fi

    if [ -z "$waspPeeringPort" ]; then
        sudo sed -i 's/^waspPeeringPort=.*/waspPeeringPort=4000/' $swarmConfigs/wasp.cfg
    else
        sudo sed -i 's/^waspPeeringPort=.*/waspPeeringPort='$waspPeeringPort'/' $swarmConfigs/wasp.cfg
    fi

    if [ ! -z "$waspPeeringId" ]; then
        waspNetworkId=$waspPeeringId
    fi
    if [ -z "$waspNetworkId" ]; then
        sudo sed -i 's/^waspNetworkId=.*/waspNetworkId="127.0.0.1"/' $swarmConfigs/wasp.cfg
    else
        sudo sed -i 's/^waspNetworkId=.*/waspNetworkId="'$waspNetworkId'"/' $swarmConfigs/wasp.cfg
    fi

    if [ -z "$waspNanomsgPort" ]; then
        sudo sed -i 's/^waspNanomsgPort=.*/waspNanomsgPort=5550/' $swarmConfigs/wasp.cfg
    else
        sudo sed -i 's/^waspNanomsgPort=.*/waspNanomsgPort='$waspNanomsgPort'/' $swarmConfigs/wasp.cfg
    fi

    if [ -z "$waspNodeconnAddress" ]; then
        sudo sed -i 's/^waspNodeconnAddress=.*/waspNodeconnAddress="127.0.0.1:5000"/' $swarmConfigs/wasp.cfg
    else
        sudo sed -i 's/^waspNodeconnAddress=.*/waspNodeconnAddress="'$waspNodeconnAddress'"/' $swarmConfigs/wasp.cfg
    fi

    if [ -z "$waspWebapiAdminWhitelist" ]; then
        sudo sed -i 's/^waspWebapiAdminWhitelist=.*/waspWebapiAdminWhitelist=""/' $swarmConfigs/wasp.cfg
    else
        sudo sed -i 's/^waspWebapiAdminWhitelist=.*/waspWebapiAdminWhitelist="'$waspWebapiAdminWhitelist'"/' $swarmConfigs/wasp.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/shimmer-inx-dashboard.cfg" ]; then
    source $swarmTmpPath/shimmer-inx-dashboard.cfg

    if [ -z "$shimmerInxDashboardRelease" ]; then
        sudo sed -i 's~^shimmerInxDashboardRelease=.*~shimmerInxDashboardRelease="beta"~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    else
        sudo sed -i 's~^shimmerInxDashboardRelease=.*~shimmerInxDashboardRelease="beta"~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    fi

    if [ -z "$shimmerInxDashboardUpdateCheck" ]; then
        sudo sed -i 's~^shimmerInxDashboardUpdateCheck=.*~shimmerInxDashboardUpdateCheck=true~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    else
        sudo sed -i 's~^shimmerInxDashboardUpdateCheck=.*~shimmerInxDashboardUpdateCheck="'$shimmerInxDashboardUpdateCheck'"~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    fi

    if [ -z "$shimmerInxDashboardAddress" ]; then
        sudo sed -i 's~^shimmerInxDashboardAddress=.*~shimmerInxDashboardAddress="localhost:8082"~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    else
        sudo sed -i 's~^shimmerInxDashboardAddress=.*~shimmerInxDashboardAddress="'$shimmerInxDashboardAddress'"~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    fi

    if [ -z "$shimmerInxDashboardAuthUsername" ]; then
        sudo sed -i 's~^shimmerInxDashboardAuthUsername=.*~shimmerInxDashboardAuthUsername="admin"~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    else
        sudo sed -i 's~^shimmerInxDashboardAuthUsername=.*~shimmerInxDashboardAuthUsername="'$shimmerInxDashboardAuthUsername'"~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    fi

    if [ -z "$shimmerInxDashboardAuthPasswordHash" ]; then
        sudo sed -i 's~^shimmerInxDashboardAuthPasswordHash=.*~shimmerInxDashboardAuthPasswordHash=""~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    else
        sudo sed -i 's~^shimmerInxDashboardAuthPasswordHash=.*~shimmerInxDashboardAuthPasswordHash="'$shimmerInxDashboardAuthPasswordHash'"~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    fi

    if [ -z "$shimmerInxDashboardAuthPasswordSalt" ]; then
        sudo sed -i 's~^shimmerInxDashboardAuthPasswordSalt=.*~shimmerInxDashboardAuthPasswordSalt=""~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    else
        sudo sed -i 's~^shimmerInxDashboardAuthPasswordSalt=.*~shimmerInxDashboardAuthPasswordSalt="'$shimmerInxDashboardAuthPasswordSalt'"~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    fi

    if [ -z "$shimmerInxDashboardAuthIdentityFilePath" ]; then
        sudo sed -i 's~^shimmerInxDashboardAuthIdentityFilePath=.*~shimmerInxDashboardAuthIdentityFilePath="identity.key"~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    else
        sudo sed -i 's~^shimmerInxDashboardAuthIdentityFilePath=.*~shimmerInxDashboardAuthIdentityFilePath="'$shimmerInxDashboardAuthIdentityFilePath'"~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    fi

    if [ -z "$shimmerInxDashboardAuthIdentityPrivateKey" ]; then
        sudo sed -i 's~^shimmerInxDashboardAuthIdentityPrivateKey=.*~shimmerInxDashboardAuthIdentityPrivateKey=""~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    else
        sudo sed -i 's~^shimmerInxDashboardAuthIdentityPrivateKey=.*~shimmerInxDashboardAuthIdentityPrivateKey="'$shimmerInxDashboardAuthIdentityPrivateKey'"~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    fi

    if [ -z "$shimmerInxDashboardInxAddress" ]; then
        sudo sed -i 's~^shimmerInxDashboardInxAddress=.*~shimmerInxDashboardInxAddress="localhost:9030"~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    else
        sudo sed -i 's~^shimmerInxDashboardInxAddress=.*~shimmerInxDashboardInxAddress="'$shimmerInxDashboardInxAddress'"~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/shimmer-inx-indexer.cfg" ]; then
    source $swarmTmpPath/shimmer-inx-indexer.cfg

    if [ -z "$shimmerInxIndexerRelease" ]; then
        sudo sed -i 's~^shimmerInxIndexerRelease=.*~shimmerInxIndexerRelease="beta"~g' $swarmConfigs/shimmer-inx-indexer.cfg
    else
        sudo sed -i 's~^shimmerInxIndexerRelease=.*~shimmerInxIndexerRelease="beta"~g' $swarmConfigs/shimmer-inx-indexer.cfg
    fi

    if [ -z "$shimmerInxIndexerUpdateCheck" ]; then
        sudo sed -i 's~^shimmerInxIndexerUpdateCheck=.*~shimmerInxIndexerUpdateCheck=true~g' $swarmConfigs/shimmer-inx-indexer.cfg
    else
        sudo sed -i 's~^shimmerInxIndexerUpdateCheck=.*~shimmerInxIndexerUpdateCheck="'$shimmerInxIndexerUpdateCheck'"~g' $swarmConfigs/shimmer-inx-indexer.cfg
    fi

    if [ -z "$shimmerInxIndexerInxAddress" ]; then
        sudo sed -i 's~^shimmerInxIndexerInxAddress=.*~shimmerInxIndexerInxAddress="localhost:9030"~g' $swarmConfigs/shimmer-inx-indexer.cfg
    else
        sudo sed -i 's~^shimmerInxIndexerInxAddress=.*~shimmerInxIndexerInxAddress="'$shimmerInxIndexerInxAddress'"~g' $swarmConfigs/shimmer-inx-indexer.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/shimmer-inx-mqtt.cfg" ]; then
    source $swarmTmpPath/shimmer-inx-mqtt.cfg

    if [ -z "$shimmerInxMqttRelease" ]; then
        sudo sed -i 's~^shimmerInxMqttRelease=.*~shimmerInxMqttRelease="beta"~g' $swarmConfigs/shimmer-inx-mqtt.cfg
    else
        sudo sed -i 's~^shimmerInxMqttRelease=.*~shimmerInxMqttRelease="beta"~g' $swarmConfigs/shimmer-inx-mqtt.cfg
    fi

    if [ -z "$shimmerInxMqttUpdateCheck" ]; then
        sudo sed -i 's~^shimmerInxMqttUpdateCheck=.*~shimmerInxMqttUpdateCheck=true~g' $swarmConfigs/shimmer-inx-mqtt.cfg
    else
        sudo sed -i 's~^shimmerInxMqttUpdateCheck=.*~shimmerInxMqttUpdateCheck="'$shimmerInxMqttUpdateCheck'"~g' $swarmConfigs/shimmer-inx-mqtt.cfg
    fi

    if [ -z "$shimmerInxMqttInxAddress" ]; then
        sudo sed -i 's~^shimmerInxMqttInxAddress=.*~shimmerInxMqttInxAddress="localhost:9030"~g' $swarmConfigs/shimmer-inx-mqtt.cfg
    else
        sudo sed -i 's~^shimmerInxMqttInxAddress=.*~shimmerInxMqttInxAddress="'$shimmerInxMqttInxAddress'"~g' $swarmConfigs/shimmer-inx-mqtt.cfg
    fi

    if [ -z "$shimmerInxMqttWebsocketEnabled" ]; then
        sudo sed -i 's~^shimmerInxMqttWebsocketEnabled=.*~shimmerInxMqttWebsocketEnabled=true~g' $swarmConfigs/shimmer-inx-mqtt.cfg
    else
        sudo sed -i 's~^shimmerInxMqttWebsocketEnabled=.*~shimmerInxMqttWebsocketEnabled='$shimmerInxMqttWebsocketEnabled'~g' $swarmConfigs/shimmer-inx-mqtt.cfg
    fi

    if [ -z "$shimmerInxMqttWebsocketAddress" ]; then
        sudo sed -i 's~^shimmerInxMqttWebsocketAddress=.*~shimmerInxMqttWebsocketAddress="localhost:1889"~g' $swarmConfigs/shimmer-inx-mqtt.cfg
    else
        sudo sed -i 's~^shimmerInxMqttWebsocketAddress=.*~shimmerInxMqttWebsocketAddress="'$shimmerInxMqttWebsocketAddress'"~g' $swarmConfigs/shimmer-inx-mqtt.cfg
    fi

    if [ -z "$shimmerInxMqttTcpEnabled" ]; then
        sudo sed -i 's~^shimmerInxMqttTcpEnabled=.*~shimmerInxMqttTcpEnabled=true~g' $swarmConfigs/shimmer-inx-mqtt.cfg
    else
        sudo sed -i 's~^shimmerInxMqttTcpEnabled=.*~shimmerInxMqttTcpEnabled='$shimmerInxMqttTcpEnabled'~g' $swarmConfigs/shimmer-inx-mqtt.cfg
    fi

    if [ -z "$shimmerInxMqttTcpAddress" ]; then
        sudo sed -i 's~^shimmerInxMqttTcpAddress=.*~shimmerInxMqttTcpAddress="localhost:1884"~g' $swarmConfigs/shimmer-inx-mqtt.cfg
    else
        sudo sed -i 's~^shimmerInxMqttTcpAddress=.*~shimmerInxMqttTcpAddress="'$shimmerInxMqttTcpAddress'"~g' $swarmConfigs/shimmer-inx-mqtt.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/shimmer-inx-participation.cfg" ]; then
    source $swarmTmpPath/shimmer-inx-participation.cfg

    if [ -z "$shimmerInxParticipationRelease" ]; then
        sudo sed -i 's~^shimmerInxParticipationRelease=.*~shimmerInxParticipationRelease="beta"~g' $swarmConfigs/shimmer-inx-participation.cfg
    else
        sudo sed -i 's~^shimmerInxParticipationRelease=.*~shimmerInxParticipationRelease="beta"~g' $swarmConfigs/shimmer-inx-participation.cfg
    fi

    if [ -z "$shimmerInxParticipationUpdateCheck" ]; then
        sudo sed -i 's~^shimmerInxParticipationUpdateCheck=.*~shimmerInxParticipationUpdateCheck=true~g' $swarmConfigs/shimmer-inx-participation.cfg
    else
        sudo sed -i 's~^shimmerInxParticipationUpdateCheck=.*~shimmerInxParticipationUpdateCheck="'$shimmerInxParticipationUpdateCheck'"~g' $swarmConfigs/shimmer-inx-participation.cfg
    fi

    if [ -z "$shimmerInxParticipationInxAddress" ]; then
        sudo sed -i 's~^shimmerInxParticipationInxAddress=.*~shimmerInxParticipationInxAddress="localhost:9030"~g' $swarmConfigs/shimmer-inx-participation.cfg
    else
        sudo sed -i 's~^shimmerInxParticipationInxAddress=.*~shimmerInxParticipationInxAddress="'$shimmerInxParticipationInxAddress'"~g' $swarmConfigs/shimmer-inx-participation.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/shimmer-inx-poi.cfg" ]; then
    source $swarmTmpPath/shimmer-inx-poi.cfg

    if [ -z "$shimmerInxPoiRelease" ]; then
        sudo sed -i 's~^shimmerInxPoiRelease=.*~shimmerInxPoiRelease="beta"~g' $swarmConfigs/shimmer-inx-poi.cfg
    else
        sudo sed -i 's~^shimmerInxPoiRelease=.*~shimmerInxPoiRelease="beta"~g' $swarmConfigs/shimmer-inx-poi.cfg
    fi

    if [ -z "$shimmerInxoiUpdateCheck" ]; then
        sudo sed -i 's~^shimmerInxPoiUpdateCheck=.*~shimmerInxPoiUpdateCheck=true~g' $swarmConfigs/shimmer-inx-poi.cfg
    else
        sudo sed -i 's~^shimmerInxPoiUpdateCheck=.*~shimmerInxPoiUpdateCheck="'$shimmerInxPoiUpdateCheck'"~g' $swarmConfigs/shimmer-inx-poi.cfg
    fi

    if [ -z "$shimmerInxPoiInxAddress" ]; then
        sudo sed -i 's~^shimmerInxPoiAddress=.*~shimmerInxPoiAddress="localhost:9688"~g' $swarmConfigs/shimmer-inx-poi.cfg
    else
        sudo sed -i 's~^shimmerInxPoiAddress=.*~shimmerInxPoiAddress="'$shimmerInxPoiAddress'"~g' $swarmConfigs/shimmer-inx-poi.cfg
    fi

    if [ -z "$shimmerInxPoiInxAddress" ]; then
        sudo sed -i 's~^shimmerInxPoiInxAddress=.*~shimmerInxPoiInxAddress="localhost:9030"~g' $swarmConfigs/shimmer-inx-poi.cfg
    else
        sudo sed -i 's~^shimmerInxPoiInxAddress=.*~shimmerInxPoiInxAddress="'$shimmerInxPoiInxAddress'"~g' $swarmConfigs/shimmer-inx-poi.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/proxy.cfg" ]; then
    source $swarmTmpPath/proxy.cfg

    if [ -z "$proxySwarmEndpoint" ]; then
        sudo sed -i 's/^proxySwarmEndpoint=.*/proxySwarmEndpoint=false/' $swarmConfigs/proxy.cfg
    else
        sudo sed -i 's/^proxySwarmEndpoint=.*/proxySwarmEndpoint='$proxySwarmEndpoint'/' $swarmConfigs/proxy.cfg
    fi
    if [ ! -z "$proxyAutomaticDeploy" ]; then
        proxyAutomaticDeployment=$proxyAutomaticDeploy
    fi
    if [ -z "$proxyAutomaticDeployment" ]; then
        sudo sed -i 's/^proxyAutomaticDeployment=.*/proxyAutomaticDeployment=true/' $swarmConfigs/proxy.cfg
    else
        sudo sed -i 's/^proxyAutomaticDeployment=.*/proxyAutomaticDeployment='$proxyAutomaticDeployment'/' $swarmConfigs/proxy.cfg
    fi
    ####
    if [ -z "$proxyIotaHornetUrl" ]; then
        sudo sed -i 's/^proxyIotaHornetUrl=.*/proxyIotaHornetUrl=""/' $swarmConfigs/proxy.cfg
    else
        sudo sed -i 's/^proxyIotaHornetUrl=.*/proxyIotaHornetUrl="'$proxyIotaHornetUrl'"/' $swarmConfigs/proxy.cfg
    fi
    ####
    if [ -z "$proxyShimmerHornetUrl" ]; then
        sudo sed -i 's/^proxyShimmerHornetUrl=.*/proxyShimmerHornetUrl=""/' $swarmConfigs/proxy.cfg
    else
        sudo sed -i 's/^proxyShimmerHornetUrl=.*/proxyShimmerHornetUrl="'$proxyShimmerHornetUrl'"/' $swarmConfigs/proxy.cfg
    fi
    #####
    if [ ! -z "$proxyGoshimmerDomain" ] && [ ! -z "$proxyGoshimmerPort" ]; then
        proxyGoshimmerUrl="$proxyGoshimmerDomain:$proxyGoshimmerPort"
    fi
    if [ -z "$proxyGoshimmerUrl" ]; then
        sudo sed -i 's/^proxyGoshimmerUrl=.*/proxyGoshimmerUrl=""/' $swarmConfigs/proxy.cfg
    else
        sudo sed -i 's/^proxyGoshimmerUrl=.*/proxyGoshimmerUrl="'$proxyGoshimmerUrl'"/' $swarmConfigs/proxy.cfg
    fi
    #####
    if [ ! -z "$proxyWaspDashboardDomain" ] && [ ! -z "$proxyWaspDashboardPort" ]; then
        proxyWaspDashboardUrl="$proxyWaspDashboardDomain:$proxyWaspDashboardPort"
    fi
    if [ -z "$proxyWaspDashboardUrl" ]; then
        sudo sed -i 's/^proxyWaspDashboardUrl=.*/proxyWaspDashboardUrl=""/' $swarmConfigs/proxy.cfg
    else
        sudo sed -i 's/^proxyWaspDashboardUrl=.*/proxyWaspDashboardUrl="'$proxyWaspDashboardUrl'"/' $swarmConfigs/proxy.cfg
    fi
    #####
    if [ ! -z "$proxyWaspApiDomain" ] && [ ! -z "$proxyWaspApiPort" ]; then
        proxyWaspApiUrl="$proxyWaspApiDomain:$proxyWaspApiPort"
    fi
    if [ -z "$proxyWaspApiUrl" ]; then
        sudo sed -i 's/^proxyWaspApiUrl=.*/proxyWaspApiUrl=""/' $swarmConfigs/proxy.cfg
    else
        sudo sed -i 's/^proxyWaspApiUrl=.*/proxyWaspApiUrl="'$proxyWaspApiUrl'"/' $swarmConfigs/proxy.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/swarm.cfg" ]; then
    source $swarmTmpPath/swarm.cfg
    
    # Upater for SWARM.cfg
    if [ -z "$osArchitecture" ]; then
        osArchitecture=$(sudo dpkg --print-architecture)
        sudo sed -i 's/^osArchitecture=.*/osArchitecture="'$osArchitecture'"/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^osArchitecture=.*/osArchitecture="'$osArchitecture'"/' $swarmConfigs/swarm.cfg
    fi
    
    if [ -z "$updateNotifier" ]; then
        sudo sed -i 's/^updateNotifier=.*/updateNotifier=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^updateNotifier=.*/updateNotifier='$updateNotifier'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$swarmTheme" ]; then
        sudo sed -i 's/^swarmTheme=.*/swarmTheme="default"/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^swarmTheme=.*/swarmTheme="'$swarmTheme'"/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$swarmCLEditor" ]; then
        sudo sed -i 's/^swarmCLEditor=.*/swarmCLEditor="nano"/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^swarmCLEditor=.*/swarmCLEditor="'$swarmCLEditor'"/' $swarmConfigs/swarm.cfg
    fi

    if [ ! -z "$swarmUpdateAuthUser" ]; then
        swarmAuthUser="$swarmUpdateAuthUser"
    fi
    if [ -z "$swarmAuthUser" ]; then
        sudo sed -i 's~^swarmAuthUser=.*~swarmAuthUser=""~g' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's~^swarmAuthUser=.*~swarmAuthUser="'$swarmAuthUser'"~g' $swarmConfigs/swarm.cfg
    fi

    if [ ! -z "$swarmUpdateAuthPwd" ]; then
        swarmAuthPwd="$swarmUpdateAuthPwd"
    fi
    if [ -z "$swarmAuthPwd" ]; then
        sudo sed -i 's~^swarmAuthPwd=.*~swarmAuthPwd=""~g' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's~^swarmAuthPwd=.*~swarmAuthPwd="'$swarmAuthPwd'"~g' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$swarmAutoUpdate" ]; then
        sudo sed -i 's/^swarmAutoUpdate=.*/swarmAutoUpdate=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^swarmAutoUpdate=.*/swarmAutoUpdate='$swarmAutoUpdate'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$iotaHornetAutoUpdate" ]; then
        sudo sed -i 's/^iotaHornetAutoUpdate=.*/iotaHornetAutoUpdate=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^iotaHornetAutoUpdate=.*/iotaHornetAutoUpdate='$iotaHornetAutoUpdate'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$shimmerHornetAutoUpdate" ]; then
        sudo sed -i 's/^shimmerHornetAutoUpdate=.*/shimmerHornetAutoUpdate=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^shimmerHornetAutoUpdate=.*/shimmerHornetAutoUpdate='$shimmerHornetAutoUpdate'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$goshimmerAutoUpdate" ]; then
        sudo sed -i 's/^goshimmerAutoUpdate=.*/goshimmerAutoUpdate=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^goshimmerAutoUpdate=.*/goshimmerAutoUpdate='$goshimmerAutoUpdate'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$waspAutoUpdate" ]; then
        sudo sed -i 's/^waspAutoUpdate=.*/waspAutoUpdate=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^waspAutoUpdate=.*/waspAutoUpdate='$waspAutoUpdate'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$shimmerInxDashboardAutoUpdate" ]; then
        sudo sed -i 's/^shimmerInxDashboardAutoUpdate=.*/shimmerInxDashboardAutoUpdate=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^shimmerInxDashboardAutoUpdate=.*/shimmerInxDashboardAutoUpdate='$shimmerInxDashboardAutoUpdate'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$shimmerInxIndexerAutoUpdate" ]; then
        sudo sed -i 's/^shimmerInxIndexerAutoUpdate=.*/shimmerInxIndexerAutoUpdate=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^shimmerInxIndexerAutoUpdate=.*/shimmerInxIndexerAutoUpdate='$shimmerInxIndexerAutoUpdate'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$shimmerInxMqttAutoUpdate" ]; then
        sudo sed -i 's/^shimmerInxMqttAutoUpdate=.*/shimmerInxMqttAutoUpdate=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^shimmerInxMqttAutoUpdate=.*/shimmerInxMqttAutoUpdate='$shimmerInxMqttAutoUpdate'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$shimmerInxParticipationAutoUpdate" ]; then
        sudo sed -i 's/^shimmerInxParticipationAutoUpdate=.*/shimmerInxParticipationAutoUpdate=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^shimmerInxParticipationAutoUpdate=.*/shimmerInxParticipationAutoUpdate='$shimmerInxParticipationAutoUpdate'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$shimmerInxPoiAutoUpdate" ]; then
        sudo sed -i 's/^shimmerInxPoiAutoUpdate=.*/shimmerInxPoiAutoUpdate=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^shimmerInxPoiAutoUpdate=.*/shimmerInxPoiAutoUpdate='$shimmerInxPoiAutoUpdate'/' $swarmConfigs/swarm.cfg
    fi
    ####
    if [ -z "$iotaHornetAllowDbReset" ]; then
        sudo sed -i 's/^iotaHornetAllowDbReset=.*/iotaHornetAllowDbReset=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^iotaHornetAllowDbReset=.*/iotaHornetAllowDbReset='$iotaHornetAllowDbReset'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$shimmerHornetAllowDbReset" ]; then
        sudo sed -i 's/^shimmerHornetAllowDbReset=.*/shimmerHornetAllowDbReset=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^shimmerHornetAllowDbReset=.*/shimmerHornetAllowDbReset='$shimmerHornetAllowDbReset'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$goshimmerAllowDbReset" ]; then
        sudo sed -i 's/^goshimmerAllowDbReset=.*/goshimmerAllowDbReset=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^goshimmerAllowDbReset=.*/goshimmerAllowDbReset='$goshimmerAllowDbReset'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$waspAllowDbReset" ]; then
        sudo sed -i 's/^waspAllowDbReset=.*/waspAllowDbReset=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^waspAllowDbReset=.*/waspAllowDbReset='$waspAllowDbReset'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$shimmerInxIndexerAllowDbReset" ]; then
        sudo sed -i 's/^shimmerInxIndexerAllowDbReset=.*/shimmerInxIndexerAllowDbReset=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^shimmerInxIndexerAllowDbReset=.*/shimmerInxIndexerAllowDbReset='$shimmerInxIndexerAllowDbReset'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$shimmerInxParticipationAllowDbReset" ]; then
        sudo sed -i 's/^shimmerInxParticipationAllowDbReset=.*/shimmerInxParticipationAllowDbReset=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^shimmerInxParticipationAllowDbReset=.*/shimmerInxParticipationAllowDbReset='$shimmerInxParticipationAllowDbReset'/' $swarmConfigs/swarm.cfg
    fi
    ####
    if [ -z "$swarmLogRotation" ]; then
        sudo sed -i 's/^swarmLogRotation=.*/swarmLogRotation=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^swarmLogRotation=.*/swarmLogRotation='$swarmLogRotation'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$swarmLogSize" ]; then
        sudo sed -i 's/^swarmLogSize=.*/swarmLogSize=10/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^swarmLogSize=.*/swarmLogSize='$swarmLogSize'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$telegramNotifications" ]; then
        sudo sed -i 's/^telegramNotifications=.*/telegramNotifications=false/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^telegramNotifications=.*/telegramNotifications='$telegramNotifications'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$telegramBotToken" ]; then
        sudo sed -i 's/^telegramBotToken=.*/telegramBotToken=""/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^telegramBotToken=.*/telegramBotToken="'$telegramBotToken'"/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$telegramChannelId" ]; then
        sudo sed -i 's/^telegramChannelId=.*/telegramChannelId=""/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^telegramChannelId=.*/telegramChannelId="'$telegramChannelId'"/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$goshimmerDbBackupDownload" ]; then
        sudo sed -i 's/^goshimmerDbBackupDownload=.*/goshimmerDbBackupDownload=false/' $swarmConfigs/goshimmer.cfg
    else
        sudo sed -i 's~^goshimmerDbBackupDownload=.*~goshimmerDbBackupDownload='$goshimmerDbBackupDownload'~g' $swarmConfigs/goshimmer.cfg
    fi
    
    if [ -z "$iotaHornetServiceStatusCheck" ]; then
        sudo sed -i 's/^iotaHornetServiceStatusCheck=.*/iotaHornetServiceStatusCheck=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^iotaHornetServiceStatusCheck=.*/iotaHornetServiceStatusCheck='$iotaHornetServiceStatusCheck'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$shimmerHornetServiceStatusCheck" ]; then
        sudo sed -i 's/^shimmerHornetServiceStatusCheck=.*/shimmerHornetServiceStatusCheck=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^shimmerHornetServiceStatusCheck=.*/shimmerHornetServiceStatusCheck='$shimmerHornetServiceStatusCheck'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$goshimmerServiceStatusCheck" ]; then
        sudo sed -i 's/^goshimmerServiceStatusCheck=.*/goshimmerServiceStatusCheck=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^goshimmerServiceStatusCheck=.*/goshimmerServiceStatusCheck='$goshimmerServiceStatusCheck'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$waspServiceStatusCheck" ]; then
        sudo sed -i 's/^waspServiceStatusCheck=.*/waspServiceStatusCheck=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^waspServiceStatusCheck=.*/waspServiceStatusCheck='$goshimmerServiceStatusCheck'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$shimmerInxDashboardServiceStatusCheck" ]; then
        sudo sed -i 's/^shimmerInxDashboardServiceStatusCheck=.*/shimmerInxDashboardServiceStatusCheck=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^shimmerInxDashboardServiceStatusCheck=.*/shimmerInxDashboardServiceStatusCheck='$shimmerInxDashboardServiceStatusCheck'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$shimmerInxIndexerServiceStatusCheck" ]; then
        sudo sed -i 's/^shimmerInxIndexerServiceStatusCheck=.*/shimmerInxIndexerServiceStatusCheck=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^shimmerInxIndexerServiceStatusCheck=.*/shimmerInxIndexerServiceStatusCheck='$shimmerInxIndexerServiceStatusCheck'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$shimmerInxMqttServiceStatusCheck" ]; then
        sudo sed -i 's/^shimmerInxMqttServiceStatusCheck=.*/shimmerInxMqttServiceStatusCheck=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^shimmerInxMqttServiceStatusCheck=.*/shimmerInxMqttServiceStatusCheck='$shimmerInxMqttServiceStatusCheck'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$shimmerInxParticipationServiceStatusCheck" ]; then
        sudo sed -i 's/^shimmerInxParticipationServiceStatusCheck=.*/shimmerInxParticipationServiceStatusCheck=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^shimmerInxParticipationServiceStatusCheck=.*/shimmerInxParticipationServiceStatusCheck='$shimmerInxParticipationServiceStatusCheck'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$shimmerInxPoiServiceStatusCheck" ]; then
        sudo sed -i 's/^shimmerInxPoiSServiceStatusCheck=.*/shimmerInxPoiSServiceStatusCheck=true/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^shimmerInxPoiSServiceStatusCheck=.*/shimmerInxPoiSServiceStatusCheck='$shimmerInxPoiSServiceStatusCheck'/' $swarmConfigs/swarm.cfg
    fi
    ####
    if [ -z "$iotaHornetParticipationAutoAdd" ]; then
        sudo sed -i 's/^iotaHornetParticipationAutoAdd=.*/iotaHornetParticipationAutoAdd=false/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^iotaHornetParticipationAutoAdd=.*/iotaHornetParticipationAutoAdd='$iotaHornetParticipationAutoAdd'/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$shimmerInxParticipationAutoAdd" ]; then
        sudo sed -i 's/^shimmerInxParticipationAutoAdd=.*/shimmerInxParticipationAutoAdd=false/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^shimmerInxParticipationAutoAdd=.*/shimmerInxParticipationAutoAdd='$shimmerInxParticipationAutoAdd'/' $swarmConfigs/swarm.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/watchdog.cfg" ]; then
    source $swarmTmpPath/watchdog.cfg

    # Updater for watchdog.log
    sudo sed -i 's/^iotaHornetStatusCounter=.*/iotaHornetStatusCounter='$iotaHornetStatusCounter'/' $swarmConfigs/watchdog.cfg
    sudo sed -i 's/^shimmerHornetStatusCounter=.*/shimmerHornetStatusCounter='$shimmerHornetStatusCounter'/' $swarmConfigs/watchdog.cfg
    sudo sed -i 's/^goshimmerStatusCounter=.*/goshimmerStatusCounter='$goshimmerStatusCounter'/' $swarmConfigs/watchdog.cfg
    sudo sed -i 's/^waspStatusCounter=.*/waspStatusCounter='$waspStatusCounter'/' $swarmConfigs/watchdog.cfg
    sudo sed -i 's/^shimmerInxDashboardStatusCounter=.*/shimmerInxDashboardStatusCounter='$shimmerInxDashboardStatusCounter'/' $swarmConfigs/watchdog.cfg
    sudo sed -i 's/^shimmerInxIndexerStatusCounter=.*/shimmerInxIndexerStatusCounter='$shimmerInxIndexerStatusCounter'/' $swarmConfigs/watchdog.cfg
    sudo sed -i 's/^shimmerInxMqttStatusCounter=.*/shimmerInxMqttStatusCounter='$shimmerInxMqttStatusCounter'/' $swarmConfigs/watchdog.cfg
    sudo sed -i 's/^shimmerInxParticipationStatusCounter=.*/shimmerInxParticipationStatusCounter='$shimmerInxParticipationStatusCounter'/' $swarmConfigs/watchdog.cfg
    sudo sed -i 's/^shimmerInxPoiStatusCounter=.*/shimmerInxPoiStatusCounter='$shimmerInxPoiStatusCounter'/' $swarmConfigs/watchdog.cfg
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/latest-versions.cfg" ]; then
    source $swarmTmpPath/latest-versions.cfg

    # Updater for latest-versions.cfg
    sudo sed -i 's~^latestSwarmVersion=.*~latestSwarmVersion="'$latestSwarmVersion'"~' $swarmConfigs/latest-versions.cfg
    sudo sed -i 's~^latestIotaHornetVersion=.*~latestIotaHornetVersion="'$latestIotaHornetVersion'"~' $swarmConfigs/latest-versions.cfg
    sudo sed -i 's~^latestShimmerHornetVersion=.*~latestShimmerHornetVersion="'$latestShimmerHornetVersion'"~' $swarmConfigs/latest-versions.cfg
    sudo sed -i 's~^latestGoshimmerVersion=.*~latestGoshimmerVersion="'$latestGoshimmerVersion'"~' $swarmConfigs/latest-versions.cfg
    sudo sed -i 's~^latestWaspVersion=.*~latestWaspVersion="'$latestWaspVersion'"~' $swarmConfigs/latest-versions.cfg
    sudo sed -i 's~^latestShimmerInxDashboardVersion=.*~latestShimmerInxDashboardVersion="'$latestShimmerInxDashboardVersion'"~' $swarmConfigs/latest-versions.cfg
    sudo sed -i 's~^latestShimmerInxIndexerVersion=.*~latestShimmerInxIndexerVersion="'$latestShimmerInxIndexerVersion'"~' $swarmConfigs/latest-versions.cfg
    sudo sed -i 's~^latestShimmerInxMqttVersion=.*~latestShimmerInxMqttVersion="'$latestShimmerInxMqttVersion'"~' $swarmConfigs/latest-versions.cfg
    sudo sed -i 's~^latestShimmerInxParticipationVersion=.*~latestShimmerInxParticipationVersion="'$latestShimmerInxParticipationVersion'"~' $swarmConfigs/latest-versions.cfg
    sudo sed -i 's~^latestShimmerInxPoiVersion=.*~latestShimmerInxPoiVersion="'$latestShimmerInxPoiVersion'"~' $swarmConfigs/latest-versions.cfg
fi

####################################################################################################################################
