#!/bin/bash
if [ ! -d "/tmp/swarm" ]; then
    tmpdir="/tmp/swarm"
    sudo mkdir -p $tmpdir
fi

###########################################################################################################################

if [ -f "$swarmTmpPath/iota-hornet.cfg" ]; then
    source $swarmTmpPath/iota-hornet.cfg

    ####
    if [ -z "$iotaHornetReleaseChannel" ] || [ "$iotaHornetReleaseChannel" != "stable" ]; then
        sudo sed -i 's/^iotaHornetReleaseChannel=.*/iotaHornetReleaseChannel="stable"/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetReleaseChannel=.*/iotaHornetReleaseChannel="'$iotaHornetReleaseChannel'"/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetNetwork" ] || [ "$iotaHornetNetwork" != "mainnet" ]; then
        sudo sed -i 's/^iotaHornetNetwork=.*/iotaHornetNetwork="mainnet"/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetNetwork=.*/iotaHornetNetwork="'$iotaHornetNetwork'"/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetAlias" ]; then
        sudo sed -i 's~^iotaHornetAlias=.*~iotaHornetAlias="IOTA HORNET"~g' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's~^iotaHornetAlias=.*~iotaHornetAlias="'"$iotaHornetAlias"'"~g' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetApiEnabled" ]; then
        sudo sed -i 's~^iotaHornetApiEnabled=.*~iotaHornetApiEnabled=true~g' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's~^iotaHornetApiEnabled=.*~iotaHornetApiEnabled='$iotaHornetApiEnabled'~g' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetUpdateCheck" ]; then
        sudo sed -i 's~^iotaHornetUpdateCheck=.*~iotaHornetUpdateCheck=true~g' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's~^iotaHornetUpdateCheck=.*~iotaHornetUpdateCheck='$iotaHornetUpdateCheck'~g' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetUnknownPeersLimit" ]; then
        sudo sed -i 's/^iotaHornetUnknownPeersLimit=.*/iotaHornetUnknownPeersLimit=2/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetUnknownPeersLimit=.*/iotaHornetUnknownPeersLimit='$iotaHornetUnknownPeersLimit'/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetSnapshotsInterval" ]; then
        sudo sed -i 's/^iotaHornetSnapshotsInterval=.*/iotaHornetSnapshotsInterval=200/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetSnapshotsInterval=.*/iotaHornetSnapshotsInterval='$iotaHornetSnapshotsInterval'/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetGossipPort" ]; then
        sudo sed -i 's/^iotaHornetGossipPort=.*/iotaHornetGossipPort=15600/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetGossipPort=.*/iotaHornetGossipPort='$iotaHornetGossipPort'/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetAutopeeringEnabled" ]; then
        sudo sed -i 's/^iotaHornetAutopeeringEnabled=.*/iotaHornetAutopeeringEnabled=false/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetAutopeeringEnabled=.*/iotaHornetAutopeeringEnabled='$iotaHornetAutopeeringEnabled'/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetAutopeeringPort" ]; then
        sudo sed -i 's/^iotaHornetAutopeeringPort=.*/iotaHornetAutopeeringPort=14626/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetAutopeeringPort=.*/iotaHornetAutopeeringPort='$iotaHornetAutopeeringPort'/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetPowEnabled" ]; then
        sudo sed -i 's/^iotaHornetPowEnabled=.*/iotaHornetPowEnabled=false/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetPowEnabled=.*/iotaHornetPowEnabled='$iotaHornetPowEnabled'/' $swarmConfigs/iota-hornet.cfg
    fi
    ###
    if [ -z "$iotaHornetPowWorkerCount" ]; then
        sudo sed -i 's/^iotaHornetPowWorkerCount=.*/iotaHornetPowWorkerCount=1/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetPowWorkerCount=.*/iotaHornetPowWorkerCount='$iotaHornetPowWorkerCount'/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetPruningEnabled" ]; then
        sudo sed -i 's/^iotaHornetPruningEnabled=.*/iotaHornetPruningEnabled=true/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetPruningEnabled=.*/iotaHornetPruningEnabled='$iotaHornetPruningEnabled'/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetPruningDatabaseSize" ]; then
        sudo sed -i 's/^iotaHornetPruningDatabaseSize=.*/iotaHornetPruningDatabaseSize=/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetPruningDatabaseSize=.*/iotaHornetPruningDatabaseSize='$iotaHornetPruningDatabaseSize'/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetPruningPercentage" ]; then
        sudo sed -i 's/^iotaHornetPruningPercentage=.*/iotaHornetPruningPercentage=5/' $swarmConfigs/iota-hornet.cfg
    else
        iotaHornetPruningPercentage=$(echo $iotaHornetPruningPercentage | tr -d '%')
        sudo sed -i 's/^iotaHornetPruningPercentage=.*/iotaHornetPruningPercentage='$iotaHornetPruningPercentage'/' $swarmConfigs/iota-hornet.cfg   
    fi
    ####
    if [ -z "$iotaHornetPruningCooldownTime" ]; then
        sudo sed -i 's/^iotaHornetPruningCooldownTime=.*/iotaHornetPruningCooldownTime=5/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetPruningCooldownTime=.*/iotaHornetPruningCooldownTime='$iotaHornetPruningCooldownTime'/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetIdentity" ]; then
        sudo sed -i 's~^iotaHornetIdentity=.*~iotaHornetIdentity=""~' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's~^iotaHornetIdentity=.*~iotaHornetIdentity="'$iotaHornetIdentity'"~' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetRunAsEntryNode" ]; then
        sudo sed -i 's/^iotaHornetRunAsEntryNode=.*/iotaHornetRunAsEntryNode=false/' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's/^iotaHornetRunAsEntryNode=.*/iotaHornetRunAsEntryNode='$iotaHornetRunAsEntryNode'/' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetApiJwtSalt" ]; then
        sudo sed -i 's~^iotaHornetApiJwtSalt=.*~iotaHornetApiJwtSalt="HORNET"~' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's~^iotaHornetApiJwtSalt=.*~iotaHornetApiJwtSalt="'$iotaHornetApiJwtSalt'"~' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetApiJwtToken" ]; then
        sudo sed -i 's~^iotaHornetApiJwtToken=.*~iotaHornetApiJwtToken=""~' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's~^iotaHornetApiJwtToken=.*~iotaHornetApiJwtToken="'"$iotaHornetApiJwtToken"'"~' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ "${iotaHornetApiPublicRoutes:0:1}" = "," ]; then
        iotaHornetApiPublicRoutes=${iotaHornetApiPublicRoutes:1}
    fi
    if [ -z "$iotaHornetApiPublicRoutes" ] || [[ $iotaHornetApiPublicRoutes = *indexer* ]] || [[ $iotaHornetApiPublicRoutes = *irc-metadata* ]] || [[ $iotaHornetApiPublicRoutes = *participation* ]] || [[ $iotaHornetApiPublicRoutes = *mqtt* ]] || [[ $iotaHornetApiPublicRoutes = *poi* ]]; then
        sudo sed -i 's~^iotaHornetApiPublicRoutes=.*~iotaHornetApiPublicRoutes="/health,/api/routes,/api/core/v2/info,/api/core/v2/tips,/api/core/v2/blocks*,/api/core/v2/transactions*,/api/core/v2/milestones*,/api/core/v2/outputs*,/api/core/v2/treasury,/api/core/v2/receipts*,/api/debug/v1/*"~' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's~^iotaHornetApiPublicRoutes=.*~iotaHornetApiPublicRoutes="'"$iotaHornetApiPublicRoutes"'"~' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetInxEnabled" ]; then
        sudo sed -i 's~^iotaHornetInxEnabled=.*~iotaHornetInxEnabled=true~g' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's~^iotaHornetInxEnabled=.*~iotaHornetInxEnabled='$iotaHornetInxEnabled'~g' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetInxAddress" ]; then
        sudo sed -i 's~^iotaHornetInxAddress=.*~iotaHornetInxAddress="localhost:9029"~' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's~^iotaHornetInxAddress=.*~iotaHornetInxAddress="'$iotaHornetInxAddress'"~' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetInxPowWorkerCount" ]; then
        sudo sed -i 's~^iotaHornetInxPowWorkerCount=.*~iotaHornetInxPowWorkerCount=0~' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's~^iotaHornetInxPowWorkerCount=.*~iotaHornetInxPowWorkerCount='$iotaHornetInxPowWorkerCount'~' $swarmConfigs/iota-hornet.cfg
    fi
    ####
    if [ -z "$iotaHornetSnapshotsEnabled" ]; then
        sudo sed -i 's~^iotaHornetSnapshotsEnabled=.*~iotaHornetSnapshotsEnabled=false~' $swarmConfigs/iota-hornet.cfg
    else
        sudo sed -i 's~^iotaHornetSnapshotsEnabled=.*~iotaHornetSnapshotsEnabled='$iotaHornetSnapshotsEnabled'~' $swarmConfigs/iota-hornet.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/shimmer-hornet.cfg" ]; then
    source $swarmTmpPath/shimmer-hornet.cfg

    ####
    if [ -z "$shimmerHornetReleaseChannel" ] || [ "$shimmerHornetReleaseChannel" != "rc" ]; then
        sudo sed -i 's/^shimmerHornetReleaseChannel=.*/shimmerHornetReleaseChannel="rc"/' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's/^shimmerHornetReleaseChannel=.*/shimmerHornetReleaseChannel="'$shimmerHornetReleaseChannel'"/' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetNetwork" ] || [ "$shimmerHornetNetwork" != "mainnet" ]; then
        sudo sed -i 's/^shimmerHornetNetwork=.*/shimmerHornetNetwork="mainnet"/' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's/^shimmerHornetNetwork=.*/shimmerHornetNetwork="'$shimmerHornetNetwork'"/' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetAlias" ]; then
        sudo sed -i 's~^shimmerHornetAlias=.*~shimmerHornetAlias="SHIMMER HORNET"~g' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's~^shimmerHornetAlias=.*~shimmerHornetAlias="'"$shimmerHornetAlias"'"~g' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetApiEnabled" ]; then
        sudo sed -i 's~^shimmerHornetApiEnabled=.*~shimmerHornetApiEnabled=true~g' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's~^shimmerHornetApiEnabled=.*~shimmerHornetApiEnabled='$shimmerHornetApiEnabled'~g' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetUpdateCheck" ]; then
        sudo sed -i 's~^shimmerHornetUpdateCheck=.*~shimmerHornetUpdateCheck=true~g' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's~^shimmerHornetUpdateCheck=.*~shimmerHornetUpdateCheck='$shimmerHornetUpdateCheck'~g' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetUnknownPeersLimit" ]; then
        sudo sed -i 's/^shimmerHornetUnknownPeersLimit=.*/shimmerHornetUnknownPeersLimit=2/' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's/^shimmerHornetUnknownPeersLimit=.*/shimmerHornetUnknownPeersLimit='$shimmerHornetUnknownPeersLimit'/' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetSnapshotsInterval" ]; then
        sudo sed -i 's/^shimmerHornetSnapshotsInterval=.*/shimmerHornetSnapshotsInterval=200/' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's/^shimmerHornetSnapshotsInterval=.*/shimmerHornetSnapshotsInterval='$shimmerHornetSnapshotsInterval'/' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetGossipPort" ]; then
        sudo sed -i 's/^shimmerHornetGossipPort=.*/shimmerHornetGossipPort=15601/' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's/^shimmerHornetGossipPort=.*/shimmerHornetGossipPort='$shimmerHornetGossipPort'/' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetAutopeeringEnabled" ]; then
        sudo sed -i 's/^shimmerHornetAutopeeringEnabled=.*/shimmerHornetAutopeeringEnabled=false/' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's/^shimmerHornetAutopeeringEnabled=.*/shimmerHornetAutopeeringEnabled='$shimmerHornetAutopeeringEnabled'/' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetAutopeeringPort" ]; then
        sudo sed -i 's/^shimmerHornetAutopeeringPort=.*/shimmerHornetAutopeeringPort=14636/' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's/^shimmerHornetAutopeeringPort=.*/shimmerHornetAutopeeringPort='$shimmerHornetAutopeeringPort'/' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetPowEnabled" ]; then
        sudo sed -i 's/^shimmerHornetPowEnabled=.*/shimmerHornetPowEnabled=false/' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's/^shimmerHornetPowEnabled=.*/shimmerHornetPowEnabled='$shimmerHornetPowEnabled'/' $swarmConfigs/shimmer-hornet.cfg
    fi
    ###
    if [ -z "$shimmerHornetPowWorkerCount" ]; then
        sudo sed -i 's/^shimmerHornetPowWorkerCount=.*/shimmerHornetPowWorkerCount=1/' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's/^shimmerHornetPowWorkerCount=.*/shimmerHornetPowWorkerCount='$shimmerHornetPowWorkerCount'/' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetPruningEnabled" ]; then
        sudo sed -i 's/^shimmerHornetPruningEnabled=.*/shimmerHornetPruningEnabled=true/' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's/^shimmerHornetPruningEnabled=.*/shimmerHornetPruningEnabled='$shimmerHornetPruningEnabled'/' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetPruningDatabaseSize" ]; then
        sudo sed -i 's/^shimmerHornetPruningDatabaseSize=.*/shimmerHornetPruningDatabaseSize=/' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's/^shimmerHornetPruningDatabaseSize=.*/shimmerHornetPruningDatabaseSize='$shimmerHornetPruningDatabaseSize'/' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetPruningPercentage" ]; then
        sudo sed -i 's/^shimmerHornetPruningPercentage=.*/shimmerHornetPruningPercentage=5/' $swarmConfigs/shimmer-hornet.cfg
    else
        shimmerHornetPruningPercentage=$(echo $shimmerHornetPruningPercentage | tr -d '%')
        sudo sed -i 's/^shimmerHornetPruningPercentage=.*/shimmerHornetPruningPercentage='$shimmerHornetPruningPercentage'/' $swarmConfigs/shimmer-hornet.cfg   
    fi
    ####
    if [ -z "$shimmerHornetPruningCooldownTime" ]; then
        sudo sed -i 's/^shimmerHornetPruningCooldownTime=.*/shimmerHornetPruningCooldownTime=5/' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's/^shimmerHornetPruningCooldownTime=.*/shimmerHornetPruningCooldownTime='$shimmerHornetPruningCooldownTime'/' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetIdentity" ]; then
        sudo sed -i 's~^shimmerHornetIdentity=.*~shimmerHornetIdentity=""~' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's~^shimmerHornetIdentity=.*~shimmerHornetIdentity="'$shimmerHornetIdentity'"~' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetRunAsEntryNode" ]; then
        sudo sed -i 's/^shimmerHornetRunAsEntryNode=.*/shimmerHornetRunAsEntryNode=false/' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's/^shimmerHornetRunAsEntryNode=.*/shimmerHornetRunAsEntryNode='$shimmerHornetRunAsEntryNode'/' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetApiJwtSalt" ]; then
        sudo sed -i 's~^shimmerHornetApiJwtSalt=.*~shimmerHornetApiJwtSalt="HORNET"~' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's~^shimmerHornetApiJwtSalt=.*~shimmerHornetApiJwtSalt="'$shimmerHornetApiJwtSalt'"~' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetApiJwtToken" ]; then
        sudo sed -i 's~^shimmerHornetApiJwtToken=.*~shimmerHornetApiJwtToken=""~' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's~^shimmerHornetApiJwtToken=.*~shimmerHornetApiJwtToken="'"$shimmerHornetApiJwtToken"'"~' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ "${shimmerHornetApiPublicRoutes:0:1}" = "," ]; then
        shimmerHornetApiPublicRoutes=${shimmerHornetApiPublicRoutes:1}
    fi
    if [ -z "$shimmerHornetApiPublicRoutes" ] || [[ $shimmerHornetApiPublicRoutes = *indexer* ]] || [[ $shimmerHornetApiPublicRoutes = *irc-metadata* ]] || [[ $shimmerHornetApiPublicRoutes = *participation* ]] || [[ $shimmerHornetApiPublicRoutes = *mqtt* ]] || [[ $shimmerHornetApiPublicRoutes = *poi* ]]; then
        sudo sed -i 's~^shimmerHornetApiPublicRoutes=.*~shimmerHornetApiPublicRoutes="/health,/api/routes,/api/core/v2/info,/api/core/v2/tips,/api/core/v2/blocks*,/api/core/v2/transactions*,/api/core/v2/milestones*,/api/core/v2/outputs*,/api/core/v2/treasury,/api/core/v2/receipts*,/api/debug/v1/*"~' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's~^shimmerHornetApiPublicRoutes=.*~shimmerHornetApiPublicRoutes="'"$shimmerHornetApiPublicRoutes"'"~' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetInxEnabled" ]; then
        sudo sed -i 's~^shimmerHornetInxEnabled=.*~shimmerHornetInxEnabled=true~g' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's~^shimmerHornetInxEnabled=.*~shimmerHornetInxEnabled='$shimmerHornetInxEnabled'~g' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetInxAddress" ]; then
        sudo sed -i 's~^shimmerHornetInxAddress=.*~shimmerHornetInxAddress="localhost:9030"~' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's~^shimmerHornetInxAddress=.*~shimmerHornetInxAddress="'$shimmerHornetInxAddress'"~' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetInxPowWorkerCount" ]; then
        sudo sed -i 's~^shimmerHornetInxPowWorkerCount=.*~shimmerHornetInxPowWorkerCount=0~' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's~^shimmerHornetInxPowWorkerCount=.*~shimmerHornetInxPowWorkerCount='$shimmerHornetInxPowWorkerCount'~' $swarmConfigs/shimmer-hornet.cfg
    fi
    ####
    if [ -z "$shimmerHornetSnapshotsEnabled" ]; then
        sudo sed -i 's~^shimmerHornetSnapshotsEnabled=.*~shimmerHornetSnapshotsEnabled=false~' $swarmConfigs/shimmer-hornet.cfg
    else
        sudo sed -i 's~^shimmerHornetSnapshotsEnabled=.*~shimmerHornetSnapshotsEnabled='$shimmerHornetSnapshotsEnabled'~' $swarmConfigs/shimmer-hornet.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/iota-inx-dashboard.cfg" ]; then
    source $swarmTmpPath/iota-inx-dashboard.cfg

    if [ -z "$iotaInxDashboardReleaseChannel" ]; then
        sudo sed -i 's~^iotaInxDashboardReleaseChannel=.*~iotaInxDashboardReleaseChannel="stable"~g' $swarmConfigs/iota-inx-dashboard.cfg
    else
        sudo sed -i 's~^iotaInxDashboardReleaseChannel=.*~iotaInxDashboardReleaseChannel="stable"~g' $swarmConfigs/iota-inx-dashboard.cfg
    fi

    if [ -z "$iotaInxDashboardUpdateCheck" ]; then
        sudo sed -i 's~^iotaInxDashboardUpdateCheck=.*~iotaInxDashboardUpdateCheck=true~g' $swarmConfigs/iota-inx-dashboard.cfg
    else
        sudo sed -i 's~^iotaInxDashboardUpdateCheck=.*~iotaInxDashboardUpdateCheck="'$iotaInxDashboardUpdateCheck'"~g' $swarmConfigs/iota-inx-dashboard.cfg
    fi

    if [ -z "$iotaInxDashboardAddress" ]; then
        sudo sed -i 's~^iotaInxDashboardAddress=.*~iotaInxDashboardAddress="localhost:8081"~g' $swarmConfigs/iota-inx-dashboard.cfg
    else
        sudo sed -i 's~^iotaInxDashboardAddress=.*~iotaInxDashboardAddress="'$iotaInxDashboardAddress'"~g' $swarmConfigs/iota-inx-dashboard.cfg
    fi

    if [ -z "$iotaInxDashboardAuthUsername" ]; then
        sudo sed -i 's~^iotaInxDashboardAuthUsername=.*~iotaInxDashboardAuthUsername="admin"~g' $swarmConfigs/iota-inx-dashboard.cfg
    else
        sudo sed -i 's~^iotaInxDashboardAuthUsername=.*~iotaInxDashboardAuthUsername="'$iotaInxDashboardAuthUsername'"~g' $swarmConfigs/iota-inx-dashboard.cfg
    fi

    if [ -z "$iotaInxDashboardAuthPasswordHash" ]; then
        sudo sed -i 's~^iotaInxDashboardAuthPasswordHash=.*~iotaInxDashboardAuthPasswordHash=""~g' $swarmConfigs/iota-inx-dashboard.cfg
    else
        sudo sed -i 's~^iotaInxDashboardAuthPasswordHash=.*~iotaInxDashboardAuthPasswordHash="'$iotaInxDashboardAuthPasswordHash'"~g' $swarmConfigs/iota-inx-dashboard.cfg
    fi

    if [ -z "$iotaInxDashboardAuthPasswordSalt" ]; then
        sudo sed -i 's~^iotaInxDashboardAuthPasswordSalt=.*~iotaInxDashboardAuthPasswordSalt=""~g' $swarmConfigs/iota-inx-dashboard.cfg
    else
        sudo sed -i 's~^iotaInxDashboardAuthPasswordSalt=.*~iotaInxDashboardAuthPasswordSalt="'$iotaInxDashboardAuthPasswordSalt'"~g' $swarmConfigs/iota-inx-dashboard.cfg
    fi

    if [ -z "$iotaInxDashboardAuthIdentityFilePath" ]; then
        sudo sed -i 's~^iotaInxDashboardAuthIdentityFilePath=.*~iotaInxDashboardAuthIdentityFilePath="identity.key"~g' $swarmConfigs/iota-inx-dashboard.cfg
    else
        sudo sed -i 's~^iotaInxDashboardAuthIdentityFilePath=.*~iotaInxDashboardAuthIdentityFilePath="'$iotaInxDashboardAuthIdentityFilePath'"~g' $swarmConfigs/iota-inx-dashboard.cfg
    fi

    if [ -z "$iotaInxDashboardAuthIdentityPrivateKey" ]; then
        sudo sed -i 's~^iotaInxDashboardAuthIdentityPrivateKey=.*~iotaInxDashboardAuthIdentityPrivateKey=""~g' $swarmConfigs/iota-inx-dashboard.cfg
    else
        sudo sed -i 's~^iotaInxDashboardAuthIdentityPrivateKey=.*~iotaInxDashboardAuthIdentityPrivateKey="'$iotaInxDashboardAuthIdentityPrivateKey'"~g' $swarmConfigs/iota-inx-dashboard.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/iota-inx-indexer.cfg" ]; then
    source $swarmTmpPath/iota-inx-indexer.cfg

    if [ -z "$iotaInxIndexerReleaseChannel" ]; then
        sudo sed -i 's~^iotaInxIndexerReleaseChannel=.*~iotaInxIndexerReleaseChannel="stable"~g' $swarmConfigs/iota-inx-indexer.cfg
    else
        sudo sed -i 's~^iotaInxIndexerReleaseChannel=.*~iotaInxIndexerReleaseChannel="stable"~g' $swarmConfigs/iota-inx-indexer.cfg
    fi

    if [ -z "$iotaInxIndexerUpdateCheck" ]; then
        sudo sed -i 's~^iotaInxIndexerUpdateCheck=.*~iotaInxIndexerUpdateCheck=true~g' $swarmConfigs/iota-inx-indexer.cfg
    else
        sudo sed -i 's~^iotaInxIndexerUpdateCheck=.*~iotaInxIndexerUpdateCheck="'$iotaInxIndexerUpdateCheck'"~g' $swarmConfigs/iota-inx-indexer.cfg
    fi

    if [ "${iotaInxIndexerApiPublicRoutes:0:1}" = "," ]; then
        iotaInxIndexerApiPublicRoutes=${iotaInxIndexerApiPublicRoutes:1}
    fi
    if [ -z "$otaInxIndexerApiPublicRoutes" ]; then
        sudo sed -i 's~^iotaInxIndexerApiPublicRoutes=.*~iotaInxIndexerApiPublicRoutes="/api/indexer/v1/*"~' $swarmConfigs/iota-inx-indexer.cfg
    else
        sudo sed -i 's~^iotaInxIndexerApiPublicRoutes=.*~iotaInxIndexerApiPublicRoutes="'"$iotaInxIndexerApiPublicRoutes"'"~' $swarmConfigs/iota-inx-indexer.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/iota-inx-mqtt.cfg" ]; then
    source $swarmTmpPath/iota-inx-mqtt.cfg

    if [ -z "$iotaInxMqttReleaseChannel" ]; then
        sudo sed -i 's~^iotaInxMqttReleaseChannel=.*~iotaInxMqttReleaseChannel="stable"~g' $swarmConfigs/iota-inx-mqtt.cfg
    else
        sudo sed -i 's~^iotaInxMqttReleaseChannel=.*~iotaInxMqttReleaseChannel="stable"~g' $swarmConfigs/iota-inx-mqtt.cfg
    fi

    if [ -z "$iotaInxMqttUpdateCheck" ]; then
        sudo sed -i 's~^iotaInxMqttUpdateCheck=.*~iotaInxMqttUpdateCheck=true~g' $swarmConfigs/iota-inx-mqtt.cfg
    else
        sudo sed -i 's~^iotaInxMqttUpdateCheck=.*~iotaInxMqttUpdateCheck="'$iotaInxMqttUpdateCheck'"~g' $swarmConfigs/iota-inx-mqtt.cfg
    fi

    if [ -z "$iotaInxMqttWebsocketEnabled" ]; then
        sudo sed -i 's~^iotaInxMqttWebsocketEnabled=.*~iotaInxMqttWebsocketEnabled=true~g' $swarmConfigs/iota-inx-mqtt.cfg
    else
        sudo sed -i 's~^iotaInxMqttWebsocketEnabled=.*~iotaInxMqttWebsocketEnabled='$iotaInxMqttWebsocketEnabled'~g' $swarmConfigs/iota-inx-mqtt.cfg
    fi

    if [ -z "$iotaInxMqttWebsocketAddress" ]; then
        sudo sed -i 's~^iotaInxMqttWebsocketAddress=.*~iotaInxMqttWebsocketAddress="localhost:1888"~g' $swarmConfigs/iota-inx-mqtt.cfg
    else
        sudo sed -i 's~^iotaInxMqttWebsocketAddress=.*~iotaInxMqttWebsocketAddress="'$iotaInxMqttWebsocketAddress'"~g' $swarmConfigs/iota-inx-mqtt.cfg
    fi

    if [ -z "$iotaInxMqttTcpEnabled" ]; then
        sudo sed -i 's~^iotaInxMqttTcpEnabled=.*~iotaInxMqttTcpEnabled=true~g' $swarmConfigs/iota-inx-mqtt.cfg
    else
        sudo sed -i 's~^iotaInxMqttTcpEnabled=.*~iotaInxMqttTcpEnabled='$iotaInxMqttTcpEnabled'~g' $swarmConfigs/iota-inx-mqtt.cfg
    fi

    if [ -z "$iotaInxMqttTcpAddress" ]; then
        sudo sed -i 's~^iotaInxMqttTcpAddress=.*~iotaInxMqttTcpAddress="localhost:1883"~g' $swarmConfigs/iota-inx-mqtt.cfg
    else
        sudo sed -i 's~^iotaInxMqttTcpAddress=.*~iotaInxMqttTcpAddress="'$iotaInxMqttTcpAddress'"~g' $swarmConfigs/iota-inx-mqtt.cfg
    fi

    if [ "${iotaInxMqttApiPublicRoutes:0:1}" = "," ]; then
        iotaInxMqttApiPublicRoutes=${iotaInxMqttApiPublicRoutes:1}
    fi
    if [ -z "$iotaInxMqttApiPublicRoutes" ]; then
        sudo sed -i 's~^iotaInxMqttApiPublicRoutes=.*~iotaInxMqttApiPublicRoutes="/api/mqtt/v1"~' $swarmConfigs/iota-inx-mqtt.cfg
    else
        sudo sed -i 's~^iotaInxMqttApiPublicRoutes=.*~iotaInxMqttApiPublicRoutes="'"$iotaInxMqttApiPublicRoutes"'"~' $swarmConfigs/iota-inx-mqtt.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/iota-inx-participation.cfg" ]; then
    source $swarmTmpPath/iota-inx-participation.cfg

    if [ -z "$iotaInxParticipationReleaseChannel" ]; then
        sudo sed -i 's~^iotaInxParticipationReleaseChannel=.*~iotaInxParticipationReleaseChannel="stable"~g' $swarmConfigs/iota-inx-participation.cfg
    else
        sudo sed -i 's~^iotaInxParticipationReleaseChannel=.*~iotaInxParticipationReleaseChannel="stable"~g' $swarmConfigs/iota-inx-participation.cfg
    fi

    if [ -z "$iotaInxParticipationUpdateCheck" ]; then
        sudo sed -i 's~^iotaInxParticipationUpdateCheck=.*~iotaInxParticipationUpdateCheck=true~g' $swarmConfigs/iota-inx-participation.cfg
    else
        sudo sed -i 's~^iotaInxParticipationUpdateCheck=.*~iotaInxParticipationUpdateCheck="'$iotaInxParticipationUpdateCheck'"~g' $swarmConfigs/iota-inx-participation.cfg
    fi

    if [ "${iotaInxParticipationApiPublicRoutes:0:1}" = "," ]; then
        iotaInxParticipationApiPublicRoutes=${iotaInxParticipationApiPublicRoutes:1}
    fi
    if [ -z "$iotaInxParticipationApiPublicRoutes" ]; then
        sudo sed -i 's~^iotaInxParticipationApiPublicRoutes=.*~iotaInxParticipationApiPublicRoutes="/api/participation/v1/events*,/api/participation/v1/outputs*,/api/participation/v1/addresses*"~' $swarmConfigs/iota-inx-participation.cfg
    else
        sudo sed -i 's~^iotaInxParticipationApiPublicRoutes=.*~iotaInxParticipationApiPublicRoutes="'"$iotaInxParticipationApiPublicRoutes"'"~' $swarmConfigs/iota-inx-participation.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/iota-inx-poi.cfg" ]; then
    source $swarmTmpPath/iota-inx-poi.cfg

    if [ -z "$iotaInxPoiReleaseChannel" ]; then
        sudo sed -i 's~^iotaInxPoiReleaseChannel=.*~iotaInxPoiReleaseChannel="stable"~g' $swarmConfigs/iota-inx-poi.cfg
    else
        sudo sed -i 's~^iotaInxPoiReleaseChannel=.*~iotaInxPoiReleaseChannel="stable"~g' $swarmConfigs/iota-inx-poi.cfg
    fi

    if [ -z "$iotaInxPoiUpdateCheck" ]; then
        sudo sed -i 's~^iotaInxPoiUpdateCheck=.*~iotaInxPoiUpdateCheck=true~g' $swarmConfigs/iota-inx-poi.cfg
    else
        sudo sed -i 's~^iotaInxPoiUpdateCheck=.*~iotaInxPoiUpdateCheck="'$iotaInxPoiUpdateCheck'"~g' $swarmConfigs/iota-inx-poi.cfg
    fi

    if [ "${iotaInxPoiApiPublicRoutes:0:1}" = "," ]; then
        iotaInxPoiApiPublicRoutes=${iotaInxPoiApiPublicRoutes:1}
    fi
    if [ -z "$iotaInxPoiApiPublicRoutes" ]; then
        sudo sed -i 's~^iotaInxPoiApiPublicRoutes=.*~iotaInxPoiApiPublicRoutes="/api/poi/v1/create/*,/api/poi/v1/validate"~' $swarmConfigs/iota-inx-poi.cfg
    else
        sudo sed -i 's~^iotaInxPoiApiPublicRoutes=.*~iotaInxPoiApiPublicRoutes="'"$iotaInxPoiApiPublicRoutes"'"~' $swarmConfigs/iota-inx-poi.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/iota-inx-irc-metadata.cfg" ]; then
    source $swarmTmpPath/iota-inx-irc-metadata.cfg

    if [ -z "$iotaInxIrcMetadataReleaseChannel" ]; then
        sudo sed -i 's~^iotaInxIrcMetadataReleaseChannel=.*~iotaInxIrcMetadataReleaseChannel="stable"~g' $swarmConfigs/iota-inx-irc-metadata.cfg
    else
        sudo sed -i 's~^iotaInxIrcMetadataReleaseChannel=.*~iotaInxIrcMetadataReleaseChannel="stable"~g' $swarmConfigs/iota-inx-irc-metadata.cfg
    fi

    if [ -z "$iotaInxIrcMetadataUpdateCheck" ]; then
        sudo sed -i 's~^iotaInxIrcMetadataUpdateCheck=.*~iotaInxIrcMetadataUpdateCheck=true~g' $swarmConfigs/iota-inx-irc-metadata.cfg
    else
        sudo sed -i 's~^iotaInxIrcMetadataUpdateCheck=.*~iotaInxIrcMetadataUpdateCheck="'$iotaInxIrcMetadataUpdateCheck'"~g' $swarmConfigs/iota-inx-irc-metadata.cfg
    fi

    if [ "${iotaInxIrcMetadataApiPublicRoutes:0:1}" = "," ]; then
        iotaInxIrcMetadataApiPublicRoutes=${iotaInxIrcMetadataApiPublicRoutes:1}
    fi
    if [ -z "$iotaInxIrcMetadataApiPublicRoutes" ]; then
        sudo sed -i 's~^iotaInxIrcMetadataApiPublicRoutes=.*~iotaInxIrcMetadataApiPublicRoutes="/api/irc-metadata/v1/nfts/*,/api/irc-metadata/v1/tokens/*"~' $swarmConfigs/iota-inx-irc-metadata.cfg
    else
        sudo sed -i 's~^iotaInxIrcMetadataApiPublicRoutes=.*~iotaInxIrcMetadataApiPublicRoutes="'"$iotaInxIrcMetadataApiPublicRoutes"'"~' $swarmConfigs/iota-inx-irc-metadata.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/shimmer-inx-dashboard.cfg" ]; then
    source $swarmTmpPath/shimmer-inx-dashboard.cfg

    if [ -z "$shimmerInxDashboardReleaseChannel" ]; then
        sudo sed -i 's~^shimmerInxDashboardReleaseChannel=.*~shimmerInxDashboardReleaseChannel="rc"~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    else
        sudo sed -i 's~^shimmerInxDashboardReleaseChannel=.*~shimmerInxDashboardReleaseChannel="rc"~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    fi

    if [ -z "$shimmerInxDashboardUpdateCheck" ]; then
        sudo sed -i 's~^shimmerInxDashboardUpdateCheck=.*~shimmerInxDashboardUpdateCheck=true~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    else
        sudo sed -i 's~^shimmerInxDashboardUpdateCheck=.*~shimmerInxDashboardUpdateCheck="'$shimmerInxDashboardUpdateCheck'"~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    fi

    if [ -z "$shimmerInxDashboardAddress" ]; then
        sudo sed -i 's~^shimmerInxDashboardAddress=.*~shimmerInxDashboardAddress="localhost:8082"~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    else
        sudo sed -i 's~^shimmerInxDashboardAddress=.*~shimmerInxDashboardAddress="'$shimmerInxDashboardAddress'"~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    fi

    if [ -z "$shimmerInxDashboardAuthUsername" ]; then
        sudo sed -i 's~^shimmerInxDashboardAuthUsername=.*~shimmerInxDashboardAuthUsername="admin"~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    else
        sudo sed -i 's~^shimmerInxDashboardAuthUsername=.*~shimmerInxDashboardAuthUsername="'$shimmerInxDashboardAuthUsername'"~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    fi

    if [ -z "$shimmerInxDashboardAuthPasswordHash" ]; then
        sudo sed -i 's~^shimmerInxDashboardAuthPasswordHash=.*~shimmerInxDashboardAuthPasswordHash=""~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    else
        sudo sed -i 's~^shimmerInxDashboardAuthPasswordHash=.*~shimmerInxDashboardAuthPasswordHash="'$shimmerInxDashboardAuthPasswordHash'"~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    fi

    if [ -z "$shimmerInxDashboardAuthPasswordSalt" ]; then
        sudo sed -i 's~^shimmerInxDashboardAuthPasswordSalt=.*~shimmerInxDashboardAuthPasswordSalt=""~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    else
        sudo sed -i 's~^shimmerInxDashboardAuthPasswordSalt=.*~shimmerInxDashboardAuthPasswordSalt="'$shimmerInxDashboardAuthPasswordSalt'"~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    fi

    if [ -z "$shimmerInxDashboardAuthIdentityFilePath" ]; then
        sudo sed -i 's~^shimmerInxDashboardAuthIdentityFilePath=.*~shimmerInxDashboardAuthIdentityFilePath="identity.key"~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    else
        sudo sed -i 's~^shimmerInxDashboardAuthIdentityFilePath=.*~shimmerInxDashboardAuthIdentityFilePath="'$shimmerInxDashboardAuthIdentityFilePath'"~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    fi

    if [ -z "$shimmerInxDashboardAuthIdentityPrivateKey" ]; then
        sudo sed -i 's~^shimmerInxDashboardAuthIdentityPrivateKey=.*~shimmerInxDashboardAuthIdentityPrivateKey=""~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    else
        sudo sed -i 's~^shimmerInxDashboardAuthIdentityPrivateKey=.*~shimmerInxDashboardAuthIdentityPrivateKey="'$shimmerInxDashboardAuthIdentityPrivateKey'"~g' $swarmConfigs/shimmer-inx-dashboard.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/shimmer-inx-indexer.cfg" ]; then
    source $swarmTmpPath/shimmer-inx-indexer.cfg

    if [ -z "$shimmerInxIndexerReleaseChannel" ]; then
        sudo sed -i 's~^shimmerInxIndexerReleaseChannel=.*~shimmerInxIndexerReleaseChannel="rc"~g' $swarmConfigs/shimmer-inx-indexer.cfg
    else
        sudo sed -i 's~^shimmerInxIndexerReleaseChannel=.*~shimmerInxIndexerReleaseChannel="rc"~g' $swarmConfigs/shimmer-inx-indexer.cfg
    fi

    if [ -z "$shimmerInxIndexerUpdateCheck" ]; then
        sudo sed -i 's~^shimmerInxIndexerUpdateCheck=.*~shimmerInxIndexerUpdateCheck=true~g' $swarmConfigs/shimmer-inx-indexer.cfg
    else
        sudo sed -i 's~^shimmerInxIndexerUpdateCheck=.*~shimmerInxIndexerUpdateCheck="'$shimmerInxIndexerUpdateCheck'"~g' $swarmConfigs/shimmer-inx-indexer.cfg
    fi

    if [ "${shimmerInxIndexerApiPublicRoutes:0:1}" = "," ]; then
        shimmerInxIndexerApiPublicRoutes=${shimmerInxIndexerApiPublicRoutes:1}
    fi
    if [ -z "$shimmerInxIndexerApiPublicRoutes" ]; then
        sudo sed -i 's~^shimmerInxIndexerApiPublicRoutes=.*~shimmerInxIndexerApiPublicRoutes="/api/indexer/v1/*"~' $swarmConfigs/shimmer-inx-indexer.cfg
    else
        sudo sed -i 's~^shimmerInxIndexerApiPublicRoutes=.*~shimmerInxIndexerApiPublicRoutes="'"$shimmerInxIndexerApiPublicRoutes"'"~' $swarmConfigs/shimmer-inx-indexer.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/shimmer-inx-mqtt.cfg" ]; then
    source $swarmTmpPath/shimmer-inx-mqtt.cfg

    if [ -z "$shimmerInxMqttReleaseChannel" ]; then
        sudo sed -i 's~^shimmerInxMqttReleaseChannel=.*~shimmerInxMqttReleaseChannel="rc"~g' $swarmConfigs/shimmer-inx-mqtt.cfg
    else
        sudo sed -i 's~^shimmerInxMqttReleaseChannel=.*~shimmerInxMqttReleaseChannel="rc"~g' $swarmConfigs/shimmer-inx-mqtt.cfg
    fi

    if [ -z "$shimmerInxMqttUpdateCheck" ]; then
        sudo sed -i 's~^shimmerInxMqttUpdateCheck=.*~shimmerInxMqttUpdateCheck=true~g' $swarmConfigs/shimmer-inx-mqtt.cfg
    else
        sudo sed -i 's~^shimmerInxMqttUpdateCheck=.*~shimmerInxMqttUpdateCheck="'$shimmerInxMqttUpdateCheck'"~g' $swarmConfigs/shimmer-inx-mqtt.cfg
    fi

    if [ -z "$shimmerInxMqttWebsocketEnabled" ]; then
        sudo sed -i 's~^shimmerInxMqttWebsocketEnabled=.*~shimmerInxMqttWebsocketEnabled=true~g' $swarmConfigs/shimmer-inx-mqtt.cfg
    else
        sudo sed -i 's~^shimmerInxMqttWebsocketEnabled=.*~shimmerInxMqttWebsocketEnabled='$shimmerInxMqttWebsocketEnabled'~g' $swarmConfigs/shimmer-inx-mqtt.cfg
    fi

    if [ -z "$shimmerInxMqttWebsocketAddress" ]; then
        sudo sed -i 's~^shimmerInxMqttWebsocketAddress=.*~shimmerInxMqttWebsocketAddress="localhost:1889"~g' $swarmConfigs/shimmer-inx-mqtt.cfg
    else
        sudo sed -i 's~^shimmerInxMqttWebsocketAddress=.*~shimmerInxMqttWebsocketAddress="'$shimmerInxMqttWebsocketAddress'"~g' $swarmConfigs/shimmer-inx-mqtt.cfg
    fi

    if [ -z "$shimmerInxMqttTcpEnabled" ]; then
        sudo sed -i 's~^shimmerInxMqttTcpEnabled=.*~shimmerInxMqttTcpEnabled=true~g' $swarmConfigs/shimmer-inx-mqtt.cfg
    else
        sudo sed -i 's~^shimmerInxMqttTcpEnabled=.*~shimmerInxMqttTcpEnabled='$shimmerInxMqttTcpEnabled'~g' $swarmConfigs/shimmer-inx-mqtt.cfg
    fi

    if [ -z "$shimmerInxMqttTcpAddress" ]; then
        sudo sed -i 's~^shimmerInxMqttTcpAddress=.*~shimmerInxMqttTcpAddress="localhost:1884"~g' $swarmConfigs/shimmer-inx-mqtt.cfg
    else
        sudo sed -i 's~^shimmerInxMqttTcpAddress=.*~shimmerInxMqttTcpAddress="'$shimmerInxMqttTcpAddress'"~g' $swarmConfigs/shimmer-inx-mqtt.cfg
    fi

    if [ "${shimmerInxMqttApiPublicRoutes:0:1}" = "," ]; then
        shimmerInxMqttApiPublicRoutes=${shimmerInxMqttApiPublicRoutes:1}
    fi
    if [ -z "$shimmerInxMqttApiPublicRoutes" ]; then
        sudo sed -i 's~^shimmerInxMqttApiPublicRoutes=.*~shimmerInxMqttApiPublicRoutes="/api/mqtt/v1"~' $swarmConfigs/shimmer-inx-mqtt.cfg
    else
        sudo sed -i 's~^shimmerInxMqttApiPublicRoutes=.*~shimmerInxMqttApiPublicRoutes="'"$shimmerInxMqttApiPublicRoutes"'"~' $swarmConfigs/shimmer-inx-mqtt.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/shimmer-inx-participation.cfg" ]; then
    source $swarmTmpPath/shimmer-inx-participation.cfg

    if [ -z "$shimmerInxParticipationReleaseChannel" ]; then
        sudo sed -i 's~^shimmerInxParticipationReleaseChannel=.*~shimmerInxParticipationReleaseChannel="rc"~g' $swarmConfigs/shimmer-inx-participation.cfg
    else
        sudo sed -i 's~^shimmerInxParticipationReleaseChannel=.*~shimmerInxParticipationReleaseChannel="rc"~g' $swarmConfigs/shimmer-inx-participation.cfg
    fi

    if [ -z "$shimmerInxParticipationUpdateCheck" ]; then
        sudo sed -i 's~^shimmerInxParticipationUpdateCheck=.*~shimmerInxParticipationUpdateCheck=true~g' $swarmConfigs/shimmer-inx-participation.cfg
    else
        sudo sed -i 's~^shimmerInxParticipationUpdateCheck=.*~shimmerInxParticipationUpdateCheck="'$shimmerInxParticipationUpdateCheck'"~g' $swarmConfigs/shimmer-inx-participation.cfg
    fi

    if [ "${shimmerInxParticipationApiPublicRoutes:0:1}" = "," ]; then
        shimmerInxParticipationApiPublicRoutes=${shimmerInxParticipationApiPublicRoutes:1}
    fi
    if [ -z "$shimmerInxParticipationApiPublicRoutes" ]; then
        sudo sed -i 's~^shimmerInxParticipationApiPublicRoutes=.*~shimmerInxParticipationApiPublicRoutes="/api/participation/v1/events*,/api/participation/v1/outputs*,/api/participation/v1/addresses*"~' $swarmConfigs/shimmer-inx-participation.cfg
    else
        sudo sed -i 's~^shimmerInxParticipationApiPublicRoutes=.*~shimmerInxParticipationApiPublicRoutes="'"$shimmerInxParticipationApiPublicRoutes"'"~' $swarmConfigs/shimmer-inx-participation.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/shimmer-inx-poi.cfg" ]; then
    source $swarmTmpPath/shimmer-inx-poi.cfg

    if [ -z "$shimmerInxPoiReleaseChannel" ]; then
        sudo sed -i 's~^shimmerInxPoiReleaseChannel=.*~shimmerInxPoiReleaseChannel="rc"~g' $swarmConfigs/shimmer-inx-poi.cfg
    else
        sudo sed -i 's~^shimmerInxPoiReleaseChannel=.*~shimmerInxPoiReleaseChannel="rc"~g' $swarmConfigs/shimmer-inx-poi.cfg
    fi

    if [ -z "$shimmerInxPoiUpdateCheck" ]; then
        sudo sed -i 's~^shimmerInxPoiUpdateCheck=.*~shimmerInxPoiUpdateCheck=true~g' $swarmConfigs/shimmer-inx-poi.cfg
    else
        sudo sed -i 's~^shimmerInxPoiUpdateCheck=.*~shimmerInxPoiUpdateCheck="'$shimmerInxPoiUpdateCheck'"~g' $swarmConfigs/shimmer-inx-poi.cfg
    fi

    if [ "${shimmerInxPoiApiPublicRoutes:0:1}" = "," ]; then
        shimmerInxPoiApiPublicRoutes=${shimmerInxPoiApiPublicRoutes:1}
    fi
    if [ -z "$shimmerInxPoiApiPublicRoutes" ]; then
        sudo sed -i 's~^shimmerInxPoiApiPublicRoutes=.*~shimmerInxPoiApiPublicRoutes="/api/poi/v1/create/*,/api/poi/v1/validate"~' $swarmConfigs/shimmer-inx-poi.cfg
    else
        sudo sed -i 's~^shimmerInxPoiApiPublicRoutes=.*~shimmerInxPoiApiPublicRoutes="'"$shimmerInxPoiApiPublicRoutes"'"~' $swarmConfigs/shimmer-inx-poi.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/shimmer-inx-irc-metadata.cfg" ]; then
    source $swarmTmpPath/shimmer-inx-irc-metadata.cfg

    if [ -z "$shimmerInxIrcMetadataReleaseChannel" ]; then
        sudo sed -i 's~^shimmerInxIrcMetadataReleaseChannel=.*~shimmerInxIrcMetadataReleaseChannel="rc"~g' $swarmConfigs/shimmer-inx-irc-metadata.cfg
    else
        sudo sed -i 's~^shimmerInxIrcMetadataReleaseChannel=.*~shimmerInxIrcMetadataReleaseChannel="rc"~g' $swarmConfigs/shimmer-inx-irc-metadata.cfg
    fi

    if [ -z "$shimmerInxIrcMetadataUpdateCheck" ]; then
        sudo sed -i 's~^shimmerInxIrcMetadataUpdateCheck=.*~shimmerInxIrcMetadataUpdateCheck=true~g' $swarmConfigs/shimmer-inx-irc-metadata.cfg
    else
        sudo sed -i 's~^shimmerInxIrcMetadataUpdateCheck=.*~shimmerInxIrcMetadataUpdateCheck="'$shimmerInxIrcMetadataUpdateCheck'"~g' $swarmConfigs/shimmer-inx-irc-metadata.cfg
    fi

    if [ "${shimmerInxIrcMetadataApiPublicRoutes:0:1}" = "," ]; then
        shimmerInxIrcMetadataApiPublicRoutes=${shimmerInxIrcMetadataApiPublicRoutes:1}
    fi
    if [ -z "$shimmerInxIrcMetadataApiPublicRoutes" ]; then
        sudo sed -i 's~^shimmerInxIrcMetadataApiPublicRoutes=.*~shimmerInxIrcMetadataApiPublicRoutes="/api/irc-metadata/v1/nfts/*,/api/irc-metadata/v1/tokens/*"~' $swarmConfigs/shimmer-inx-irc-metadata.cfg
    else
        sudo sed -i 's~^shimmerInxIrcMetadataApiPublicRoutes=.*~shimmerInxIrcMetadataApiPublicRoutes="'"$shimmerInxIrcMetadataApiPublicRoutes"'"~' $swarmConfigs/shimmer-inx-irc-metadata.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/proxy.cfg" ]; then
    source $swarmTmpPath/proxy.cfg

    if [ -z "$proxySwarmEndpoint" ]; then
        sudo sed -i 's/^proxySwarmEndpoint=.*/proxySwarmEndpoint=false/' $swarmConfigs/proxy.cfg
    else
        sudo sed -i 's/^proxySwarmEndpoint=.*/proxySwarmEndpoint='$proxySwarmEndpoint'/' $swarmConfigs/proxy.cfg
    fi
    if [ ! -z "$proxyAutomaticDeploy" ]; then
        proxyAutomaticDeployment=$proxyAutomaticDeploy
    fi
    if [ -z "$proxyAutomaticDeployment" ]; then
        sudo sed -i 's/^proxyAutomaticDeployment=.*/proxyAutomaticDeployment=true/' $swarmConfigs/proxy.cfg
    else
        sudo sed -i 's/^proxyAutomaticDeployment=.*/proxyAutomaticDeployment='$proxyAutomaticDeployment'/' $swarmConfigs/proxy.cfg
    fi
    ####
    if [ -z "$proxyIotaHornetUrl" ]; then
        sudo sed -i 's/^proxyIotaHornetUrl=.*/proxyIotaHornetUrl=""/' $swarmConfigs/proxy.cfg
    else
        sudo sed -i 's/^proxyIotaHornetUrl=.*/proxyIotaHornetUrl="'$proxyIotaHornetUrl'"/' $swarmConfigs/proxy.cfg
    fi
    ####
    if [ -z "$proxyIotaInxDashboardEnabled" ]; then
        sudo sed -i 's/^proxyIotaInxDashboardEnabled=.*/proxyIotaInxDashboardEnabled=false/' $swarmConfigs/proxy.cfg
    else
        sudo sed -i 's/^proxyIotaInxDashboardEnabled=.*/proxyIotaInxDashboardEnabled='$proxyIotaInxDashboardEnabled'/' $swarmConfigs/proxy.cfg
    fi
    if [ -z "$proxyIotaInxDashboardUrl" ]; then
        sudo sed -i 's/^proxyIotaInxDashboardUrl=.*/proxyIotaInxDashboardUrl=""/' $swarmConfigs/proxy.cfg
    else
        sudo sed -i 's/^proxyIotaInxDashboardUrl=.*/proxyIotaInxDashboardUrl="'$proxyIotaInxDashboardUrl'"/' $swarmConfigs/proxy.cfg
    fi
    ####
    if [ -z "$proxyShimmerHornetUrl" ]; then
        sudo sed -i 's/^proxyShimmerHornetUrl=.*/proxyShimmerHornetUrl=""/' $swarmConfigs/proxy.cfg
    else
        sudo sed -i 's/^proxyShimmerHornetUrl=.*/proxyShimmerHornetUrl="'$proxyShimmerHornetUrl'"/' $swarmConfigs/proxy.cfg
    fi
    ####
    if [ -z "$proxyShimmerInxDashboardEnabled" ]; then
        sudo sed -i 's/^proxyShimmerInxDashboardEnabled=.*/proxyShimmerInxDashboardEnabled=false/' $swarmConfigs/proxy.cfg
    else
        sudo sed -i 's/^proxyShimmerInxDashboardEnabled=.*/proxyShimmerInxDashboardEnabled='$proxyShimmerInxDashboardEnabled'/' $swarmConfigs/proxy.cfg
    fi
    if [ -z "$proxyShimmerInxDashboardUrl" ]; then
        sudo sed -i 's/^proxyShimmerInxDashboardUrl=.*/proxyShimmerInxDashboardUrl=""/' $swarmConfigs/proxy.cfg
    else
        sudo sed -i 's/^proxyShimmerInxDashboardUrl=.*/proxyShimmerInxDashboardUrl="'$proxyShimmerInxDashboardUrl'"/' $swarmConfigs/proxy.cfg
    fi
    #####
    if [ -z "$proxyGoshimmerUrl" ]; then
        sudo sed -i 's/^proxyGoshimmerUrl=.*/proxyGoshimmerUrl=""/' $swarmConfigs/proxy.cfg
    else
        sudo sed -i 's/^proxyGoshimmerUrl=.*/proxyGoshimmerUrl="'$proxyGoshimmerUrl'"/' $swarmConfigs/proxy.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/swarm.cfg" ]; then
    source $swarmTmpPath/swarm.cfg
    
    # Upater for SWARM.cfg
    if [ -z "$osArchitecture" ]; then
        osArchitecture=$(sudo dpkg --print-architecture)
        sudo sed -i 's/^osArchitecture=.*/osArchitecture="'$osArchitecture'"/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^osArchitecture=.*/osArchitecture="'$osArchitecture'"/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$swarmTheme" ]; then
        sudo sed -i 's/^swarmTheme=.*/swarmTheme="default"/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^swarmTheme=.*/swarmTheme="'$swarmTheme'"/' $swarmConfigs/swarm.cfg
    fi

    if [ -z "$swarmCLEditor" ]; then
        sudo sed -i 's/^swarmCLEditor=.*/swarmCLEditor="nano"/' $swarmConfigs/swarm.cfg
    else
        sudo sed -i 's/^swarmCLEditor=.*/swarmCLEditor="'$swarmCLEditor'"/' $swarmConfigs/swarm.cfg
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmpPath/watchdog.cfg" ]; then
    source $swarmTmpPath/watchdog.cfg

    # SWARM
    if [ -z "$watchdogSwarmAutoUpdate" ]; then
        sudo sed -i 's/^watchdogSwarmAutoUpdate=.*/watchdogSwarmAutoUpdate=true/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogSwarmAutoUpdate=.*/watchdogSwarmAutoUpdate='$watchdogSwarmAutoUpdate'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogSwarmLogRotation" ]; then
        sudo sed -i 's/^watchdogSwarmLogRotation=.*/watchdogSwarmLogRotation=true/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogSwarmLogRotation=.*/watchdogSwarmLogRotation='$watchdogSwarmLogRotation'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogSwarmLogSize" ]; then
        sudo sed -i 's/^watchdogSwarmLogSize=.*/watchdogSwarmLogSize=1/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogSwarmLogSize=.*/watchdogSwarmLogSize='$watchdogSwarmLogSize'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogMemoryCheck" ]; then
        sudo sed -i 's/^watchdogMemoryCheck=.*/watchdogMemoryCheck=false/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogMemoryCheck=.*/watchdogMemoryCheck='$watchdogMemoryCheck'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogMemoryLimit" ]; then
        sudo sed -i 's/^watchdogMemoryLimit=.*/watchdogMemoryLimit=1024/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogMemoryLimit=.*/watchdogMemoryLimit='$watchdogMemoryLimit'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogProxyHttpCheck" ]; then
        sudo sed -i 's/^watchdogProxyHttpCheck=.*/watchdogProxyHttpCheck=true/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogProxyHttpCheck=.*/watchdogProxyHttpCheck='$watchdogProxyHttpCheck'/' $swarmConfigs/watchdog.cfg
    fi
    #################################################################################
    # Hornet (IOTA)
    if [ -z "$watchdogIotaHornetAutoUpdate" ]; then
        sudo sed -i 's/^watchdogIotaHornetAutoUpdate=.*/watchdogIotaHornetAutoUpdate=true/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogIotaHornetAutoUpdate=.*/watchdogIotaHornetAutoUpdate='$watchdogIotaHornetAutoUpdate'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogIotaHornetAllowDbReset" ]; then
        sudo sed -i 's/^watchdogIotaHornetAllowDbReset=.*/watchdogIotaHornetAllowDbReset=false/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogIotaHornetAllowDbReset=.*/watchdogIotaHornetAllowDbReset='$watchdogIotaHornetAllowDbReset'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogIotaHornetServiceStatusCheck" ]; then
        sudo sed -i 's/^watchdogIotaHornetServiceStatusCheck=.*/watchdogIotaHornetServiceStatusCheck=true/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogIotaHornetServiceStatusCheck=.*/watchdogIotaHornetServiceStatusCheck='$watchdogIotaHornetServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
    fi
    #################################################################################
    # Hornet (Shimmer)
    if [ -z "$watchdogShimmerHornetAutoUpdate" ]; then
        sudo sed -i 's/^watchdogShimmerHornetAutoUpdate=.*/watchdogShimmerHornetAutoUpdate=true/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogShimmerHornetAutoUpdate=.*/watchdogShimmerHornetAutoUpdate='$watchdogShimmerHornetAutoUpdate'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogShimmerHornetAllowDbReset" ]; then
        sudo sed -i 's/^watchdogShimmerHornetAllowDbReset=.*/watchdogShimmerHornetAllowDbReset=false/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogShimmerHornetAllowDbReset=.*/watchdogShimmerHornetAllowDbReset='$watchdogShimmerHornetAllowDbReset'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogShimmerHornetServiceStatusCheck" ]; then
        sudo sed -i 's/^watchdogShimmerHornetServiceStatusCheck=.*/watchdogShimmerHornetServiceStatusCheck=true/' $swarmConfigs/watchdog.cfg
    else
        watchdogShimmerHornetServiceStatusCheck=true
        sudo sed -i 's/^watchdogShimmerHornetServiceStatusCheck=.*/watchdogShimmerHornetServiceStatusCheck='$watchdogShimmerHornetServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
    fi
    #################################################################################
    # INX-Dashboard (IOTA)
    if [ -z "$watchdogIotaInxDashboardAutoUpdate" ]; then
        sudo sed -i 's/^watchdogIotaInxDashboardAutoUpdate=.*/watchdogIotaInxDashboardAutoUpdate=true/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogIotaInxDashboardAutoUpdate=.*/watchdogIotaInxDashboardAutoUpdate='$watchdogIotaInxDashboardAutoUpdate'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogIotaInxDashboardServiceStatusCheck" ]; then
        sudo sed -i 's/^watchdogIotaInxDashboardServiceStatusCheck=.*/watchdogIotaInxDashboardServiceStatusCheck=true/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogIotaInxDashboardServiceStatusCheck=.*/watchdogIotaInxDashboardServiceStatusCheck='$watchdogIotaInxDashboardServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
    fi
    #################################################################################
    # INX-Indexer (IOTA)
    if [ -z "$watchdogIotaInxIndexerAutoUpdate" ]; then
        sudo sed -i 's/^watchdogIotaInxIndexerAutoUpdate=.*/watchdogIotaInxIndexerAutoUpdate=true/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogIotaInxIndexerAutoUpdate=.*/watchdogIotaInxIndexerAutoUpdate='$watchdogIotaInxIndexerAutoUpdate'/' $swarmConfigs/watchdog.cfg
    fi
    ###
    if [ -z "$watchdogIotaInxIndexerAllowDbReset" ]; then
        sudo sed -i 's/^watchdogIotaInxIndexerAllowDbReset=.*/watchdogIotaInxIndexerAllowDbReset=false/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogIotaInxIndexerAllowDbReset=.*/watchdogIotaInxIndexerAllowDbReset='$watchdogIotaInxIndexerAllowDbReset'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogIotaInxIndexerServiceStatusCheck" ]; then
        sudo sed -i 's/^watchdogIotaInxIndexerServiceStatusCheck=.*/watchdogIotaInxIndexerServiceStatusCheck=false/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogIotaInxIndexerServiceStatusCheck=.*/watchdogIotaInxIndexerServiceStatusCheck='$watchdogIotaInxIndexerServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
    fi
    #################################################################################
    # INX-MQTT (IOTA)
    if [ -z "$watchdogIotaInxMqttAutoUpdate" ]; then
        sudo sed -i 's/^watchdogIotaInxMqttAutoUpdate=.*/watchdogIotaInxMqttAutoUpdate=true/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogIotaInxMqttAutoUpdate=.*/watchdogIotaInxMqttAutoUpdate='$watchdogIotaInxMqttAutoUpdate'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogIotaInxMqttServiceStatusCheck" ]; then
        sudo sed -i 's/^watchdogIotaInxMqttServiceStatusCheck=.*/watchdogIotaInxMqttServiceStatusCheck=true/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogIotaInxMqttServiceStatusCheck=.*/watchdogIotaInxMqttServiceStatusCheck='$watchdogIotaInxMqttServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
    fi
    #################################################################################
    # INX-Participation (IOTA)
    if [ -z "$watchdogIotaInxParticipationAutoUpdate" ]; then
        sudo sed -i 's/^watchdogIotaInxParticipationAutoUpdate=.*/watchdogIotaInxParticipationAutoUpdate=true/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogIotaInxParticipationAutoUpdate=.*/watchdogIotaInxParticipationAutoUpdate='$watchdogIotaInxParticipationAutoUpdate'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogIotaInxParticipationAllowDbReset" ]; then
        sudo sed -i 's/^watchdogIotaInxParticipationAllowDbReset=.*/watchdogIotaInxParticipationAllowDbReset=false/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogIotaInxParticipationAllowDbReset=.*/watchdogIotaInxParticipationAllowDbReset='$watchdogIotaInxParticipationAllowDbReset'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogIotaInxParticipationServiceStatusCheck" ]; then
        sudo sed -i 's/^watchdogIotaInxParticipationServiceStatusCheck=.*/watchdogIotaInxParticipationServiceStatusCheck=false/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogIotaInxParticipationServiceStatusCheck=.*/watchdogIotaInxParticipationServiceStatusCheck='$watchdogIotaInxParticipationServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogIotaInxParticipationAutoAdd" ]; then
        sudo sed -i 's/^watchdogIotaInxParticipationAutoAdd=.*/watchdogIotaInxParticipationAutoAdd=false/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogIotaInxParticipationAutoAdd=.*/watchdogIotaInxParticipationAutoAdd='$watchdogIotaInxParticipationAutoAdd'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogIotaInxParticipationThirdParty" ]; then
        sudo sed -i 's/^watchdogIotaInxParticipationThirdParty=.*/watchdogIotaInxParticipationThirdParty=false/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogIotaInxParticipationThirdParty=.*/watchdogIotaInxParticipationThirdParty='$watchdogIotaInxParticipationThirdParty'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogIotaInxParticipationTangleBay" ]; then
        sudo sed -i 's/^watchdogIotaInxParticipationTangleBay=.*/watchdogIotaInxParticipationTangleBay=false/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogIotaInxParticipationTangleBay=.*/watchdogIotaInxParticipationTangleBay='$watchdogIotaInxParticipationTangleBay'/' $swarmConfigs/watchdog.cfg
    fi
    #################################################################################
    # INX-POI (IOTA)
    if [ -z "$watchdogIotaInxPoiAutoUpdate" ]; then
        sudo sed -i 's/^watchdogIotaInxPoiAutoUpdate=.*/watchdogIotaInxPoiAutoUpdate=true/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogIotaInxPoiAutoUpdate=.*/watchdogIotaInxPoiAutoUpdate='$watchdogIotaInxPoiAutoUpdate'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogIotaInxPoiServiceStatusCheck" ]; then
        sudo sed -i 's/^watchdogIotaInxPoiServiceStatusCheck=.*/watchdogIotaInxPoiServiceStatusCheck=true/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogIotaInxPoiServiceStatusCheck=.*/watchdogIotaInxPoiServiceStatusCheck='$watchdogIotaInxPoiServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
    fi
    #################################################################################
    # INX-IRC-Metadata (IOTA)
    if [ -z "$watchdogIotaInxIrcMetadataAutoUpdate" ]; then
        sudo sed -i 's/^watchdogIotaInxIrcMetaAutoUpdate=.*/watchdogIotaInxIrcMetaAutoUpdate=true/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogIotaInxIrcMetaAutoUpdate=.*/watchdogIotaInxIrcMetaAutoUpdate='$watchdogIotaInxIrcMetaAutoUpdate'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogIotaInxIrcMetaServiceStatusCheck" ]; then
        sudo sed -i 's/^watchdogIotaInxIrcMetaServiceStatusCheck=.*/watchdogIotaInxIrcMetaServiceStatusCheck=true/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogIotaInxIrcMetaServiceStatusCheck=.*/watchdogIotaInxIrcMetaServiceStatusCheck='$watchdogIotaInxIrcMetaServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
    fi
    #################################################################################
    # INX-Dashboard (Shimmer)
    if [ -z "$watchdogShimmerInxDashboardAutoUpdate" ]; then
        sudo sed -i 's/^watchdogShimmerInxDashboardAutoUpdate=.*/watchdogShimmerInxDashboardAutoUpdate=true/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogShimmerInxDashboardAutoUpdate=.*/watchdogShimmerInxDashboardAutoUpdate='$watchdogShimmerInxDashboardAutoUpdate'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogShimmerInxDashboardServiceStatusCheck" ]; then
        sudo sed -i 's/^watchdogShimmerInxDashboardServiceStatusCheck=.*/watchdogShimmerInxDashboardServiceStatusCheck=true/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogShimmerInxDashboardServiceStatusCheck=.*/watchdogShimmerInxDashboardServiceStatusCheck='$watchdogShimmerInxDashboardServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
    fi
    #################################################################################
    # INX-Indexer (Shimmer)
    if [ -z "$watchdogShimmerInxIndexerAutoUpdate" ]; then
        sudo sed -i 's/^watchdogShimmerInxIndexerAutoUpdate=.*/watchdogShimmerInxIndexerAutoUpdate=true/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogShimmerInxIndexerAutoUpdate=.*/watchdogShimmerInxIndexerAutoUpdate='$watchdogShimmerInxIndexerAutoUpdate'/' $swarmConfigs/watchdog.cfg
    fi
    ###
    if [ -z "$watchdogShimmerInxIndexerAllowDbReset" ]; then
        sudo sed -i 's/^watchdogShimmerInxIndexerAllowDbReset=.*/watchdogShimmerInxIndexerAllowDbReset=false/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogShimmerInxIndexerAllowDbReset=.*/watchdogShimmerInxIndexerAllowDbReset='$watchdogShimmerInxIndexerAllowDbReset'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogShimmerInxIndexerServiceStatusCheck" ]; then
        sudo sed -i 's/^watchdogShimmerInxIndexerServiceStatusCheck=.*/watchdogShimmerInxIndexerServiceStatusCheck=false/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogShimmerInxIndexerServiceStatusCheck=.*/watchdogShimmerInxIndexerServiceStatusCheck='$watchdogShimmerInxIndexerServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
    fi
    #################################################################################
    # INX-MQTT (Shimmer)
    if [ -z "$watchdogShimmerInxMqttAutoUpdate" ]; then
        sudo sed -i 's/^watchdogShimmerInxMqttAutoUpdate=.*/watchdogShimmerInxMqttAutoUpdate=true/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogShimmerInxMqttAutoUpdate=.*/watchdogShimmerInxMqttAutoUpdate='$watchdogShimmerInxMqttAutoUpdate'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogShimmerInxMqttServiceStatusCheck" ]; then
        sudo sed -i 's/^watchdogShimmerInxMqttServiceStatusCheck=.*/watchdogShimmerInxMqttServiceStatusCheck=true/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogShimmerInxMqttServiceStatusCheck=.*/watchdogShimmerInxMqttServiceStatusCheck='$watchdogShimmerInxMqttServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
    fi
    #################################################################################
    # INX-Participation (Shimmer)
    if [ -z "$watchdogShimmerInxParticipationAutoUpdate" ]; then
        sudo sed -i 's/^watchdogShimmerInxParticipationAutoUpdate=.*/watchdogShimmerInxParticipationAutoUpdate=true/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogShimmerInxParticipationAutoUpdate=.*/watchdogShimmerInxParticipationAutoUpdate='$watchdogShimmerInxParticipationAutoUpdate'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogShimmerInxParticipationAllowDbReset" ]; then
        sudo sed -i 's/^watchdogShimmerInxParticipationAllowDbReset=.*/watchdogShimmerInxParticipationAllowDbReset=false/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogShimmerInxParticipationAllowDbReset=.*/watchdogShimmerInxParticipationAllowDbReset='$watchdogShimmerInxParticipationAllowDbReset'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogShimmerInxParticipationServiceStatusCheck" ]; then
        sudo sed -i 's/^watchdogShimmerInxParticipationServiceStatusCheck=.*/watchdogShimmerInxParticipationServiceStatusCheck=false/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogShimmerInxParticipationServiceStatusCheck=.*/watchdogShimmerInxParticipationServiceStatusCheck='$watchdogShimmerInxParticipationServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogShimmerInxParticipationAutoAdd" ]; then
        sudo sed -i 's/^watchdogShimmerInxParticipationAutoAdd=.*/watchdogShimmerInxParticipationAutoAdd=false/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogShimmerInxParticipationAutoAdd=.*/watchdogShimmerInxParticipationAutoAdd='$watchdogShimmerInxParticipationAutoAdd'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogShimmerInxParticipationThirdParty" ]; then
        sudo sed -i 's/^watchdogShimmerInxParticipationThirdParty=.*/watchdogShimmerInxParticipationThirdParty=false/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogShimmerInxParticipationThirdParty=.*/watchdogShimmerInxParticipationThirdParty='$watchdogShimmerInxParticipationThirdParty'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogShimmerInxParticipationTangleBay" ]; then
        sudo sed -i 's/^watchdogShimmerInxParticipationTangleBay=.*/watchdogShimmerInxParticipationTangleBay=false/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogShimmerInxParticipationTangleBay=.*/watchdogShimmerInxParticipationTangleBay='$watchdogShimmerInxParticipationTangleBay'/' $swarmConfigs/watchdog.cfg
    fi
    #################################################################################
    # INX-POI (Shimmer)
    if [ -z "$watchdogShimmerInxPoiAutoUpdate" ]; then
        sudo sed -i 's/^watchdogShimmerInxPoiAutoUpdate=.*/watchdogShimmerInxPoiAutoUpdate=true/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogShimmerInxPoiAutoUpdate=.*/watchdogShimmerInxPoiAutoUpdate='$watchdogShimmerInxPoiAutoUpdate'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogShimmerInxPoiServiceStatusCheck" ]; then
        sudo sed -i 's/^watchdogShimmerInxPoiServiceStatusCheck=.*/watchdogShimmerInxPoiServiceStatusCheck=true/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogShimmerInxPoiServiceStatusCheck=.*/watchdogShimmerInxPoiServiceStatusCheck='$watchdogShimmerInxPoiServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
    fi
    #################################################################################
    # INX-IRC-Metadata (Shimmer)
    if [ -z "$watchdogShimmerInxIrcMetadataAutoUpdate" ]; then
        sudo sed -i 's/^watchdogShimmerInxIrcMetadataAutoUpdate=.*/watchdogShimmerInxIrcMetadataAutoUpdate=true/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogShimmerInxIrcMetadataAutoUpdate=.*/watchdogShimmerInxIrcMetadataAutoUpdate='$watchdogShimmerInxIrcMetadataAutoUpdate'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogShimmerInxIrcMetadataServiceStatusCheck" ]; then
        sudo sed -i 's/^watchdogShimmerInxIrcMetadataServiceStatusCheck=.*/watchdogShimmerInxIrcMetadataServiceStatusCheck=true/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogShimmerInxIrcMetadataServiceStatusCheck=.*/watchdogShimmerInxIrcMetadataServiceStatusCheck='$watchdogShimmerInxIrcMetadataServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
    fi
    #################################################################################
    # Telegram Notifications
    if [ -z "$watchdogTelegramNotifications" ]; then
        sudo sed -i 's/^watchdogTelegramNotifications=.*/watchdogTelegramNotifications=false/' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's/^watchdogTelegramNotifications=.*/watchdogTelegramNotifications='$watchdogTelegramNotifications'/' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogTelegramBotToken" ]; then
        sudo sed -i 's~^watchdogTelegramBotToken=.*~watchdogTelegramBotToken=""~g' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's~^watchdogTelegramBotToken=.*~watchdogTelegramBotToken="'$watchdogTelegramBotToken'"~g' $swarmConfigs/watchdog.cfg
    fi
    ####
    if [ -z "$watchdogTelegramChannelId" ]; then
        sudo sed -i 's~^watchdogTelegramChannelId=.*~watchdogTelegramChannelId=""~g' $swarmConfigs/watchdog.cfg
    else
        sudo sed -i 's~^watchdogTelegramChannelId=.*~watchdogTelegramChannelId="'$watchdogTelegramChannelId'"~g' $swarmConfigs/watchdog.cfg
    fi
fi

####################################################################################################################################
