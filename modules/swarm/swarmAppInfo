#!/bin/bash

source $swarmConfigs/latest-versions.cfg

# Get Service Status
source $swarmModule/swarmAppStatus


# Hornet Version
if [ -f "/usr/bin/iota-hornet" ]; then
    iotaHornetVersion=$(/usr/bin/iota-hornet -v | awk '{ print $2 }')
    if [ -z "$iotaHornetVersion" ]; then
        iotaHornetVersion="N/A"
    else
        if [ "$iotaHornetVersion" != "$latestIotaHornetVersion" ] && [ ! -z "$latestIotaHornetVersion" ]; then
            iotaHornetVersion="$iotaHornetVersion (new version \"v$latestIotaHornetVersion\" available!)"
        fi
    fi
else
    iotaHornetVersion="N/A"
fi

# Hornet Shimmer Version
if [ -f "/usr/bin/shimmer-hornet" ]; then
    shimmerHornetVersion=$(/usr/bin/shimmer-hornet -v | awk '{ print $2 }')
    if [ -z "$shimmerHornetVersion" ]; then
        shimmerHornetVersion="N/A"
    else
        if [ "$shimmerHornetVersion" != "$latestShimmerHornetVersion" ] && [ ! -z "$latestShimmerHornetVersion" ]; then
            shimmerHornetVersion="$shimmerHornetVersion (new version \"v$latestShimmerHornetVersion\" available!)"
        fi
    fi
else
    shimmerHornetVersion="N/A"
fi

# GoShimmer version
if [ -f "/usr/bin/goshimmer" ]; then
    goshimmerVersion=$(cd $goshimmerHome ; /usr/bin/goshimmer -v | awk '{print $2}' | tr -d 'v')
    if [ -z "$goshimmerVersion" ]; then
        goshimmerVersion="N/A"
    else
        if [ "$goshimmerVersion" != "$latestGoshimmerVersion" ] && [ ! -z "$latestGoshimmerVersion" ]; then
            goshimmerVersion="$goshimmerVersion (new version \"v${latestGoshimmerVersion}\" available!"
        fi
    fi
else
    goshimmerVersion="N/A"
fi

# Wasp version
if [ -f "/usr/bin/wasp" ]; then
    waspVersion=$(cd $waspHome ; /usr/bin/wasp -v | awk '{print $2}' | tr -d 'v')
    if [ -z "$waspVersion" ]; then
        waspVersion="N/A"
    else
        if [ "$waspVersion" != "$latestWaspVersion" ] && [ ! -z "$latestWaspVersion" ]; then
            waspVersion="$waspVersion (new version \"v$latestWaspVersion\" available!"
        fi
    fi
else
    waspVersion="N/A"
fi

# INX-Dashboard version
if [ -f "/usr/bin/shimmer-inx-dashboard" ]; then
    shimmerInxDashboardVersion=$(cd $shimmerInxDashboardHome ; /usr/bin/shimmer-inx-dashboard -v | awk '{print $2}' | tr -d 'v')
    if [ -z "$shimmerInxDashboardVersion" ]; then
        shimmerInxDashboardVersion="N/A"
    else
        if [ "$shimmerInxDashboardVersion" != "$latestShimmerInxDashboardVersion" ] && [ ! -z "$latestShimmerInxDashboardVersion" ]; then
            shimmerInxDashboardVersion="$shimmerInxDashboardVersion (new version \"v$latestShimmerInxDashboardVersion\" available!"
        fi
    fi
else
    shimmerInxDashboardVersion="N/A"
fi

# INX-Indexer version
if [ -f "/usr/bin/shimmer-inx-indexer" ]; then
    shimmerInxIndexerVersion=$(cd $shimmerInxIndexerHome ; /usr/bin/shimmer-inx-indexer -v | awk '{print $2}' | tr -d 'v')
    if [ -z "$shimmerInxIndexerVersion" ]; then
        shimmerInxIndexerVersion="N/A"
    else
        if [ "$shimmerInxIndexerVersion" != "$latestShimmerInxIndexerVersion" ] && [ ! -z "$latestShimmerInxIndexerVersion" ]; then
            shimmerInxIndexerVersion="$shimmerInxIndexerVersion (new version \"v$latestShimmerInxIndexerVersion\" available!"
        fi
    fi
else
    shimmerInxIndexerVersion="N/A"
fi

# INX-MQTT version
if [ -f "/usr/bin/shimmer-inx-mqtt" ]; then
    shimmerInxMqttVersion=$(cd $shimmerInxMqttHome ; /usr/bin/shimmer-inx-mqtt -v | awk '{print $2}' | tr -d 'v')
    if [ -z "$shimmerInxMqttVersion" ]; then
        shimmerInxMqttVersion="N/A"
    else
        if [ "$shimmerInxMqttVersion" != "$latestShimmerInxMqttVersion" ] && [ ! -z "$latestShimmerInxMqttVersion" ]; then
            shimmerInxMqttVersion="$shimmerInxMqttVersion (new version \"v$latestShimmerInxMqttVersion\" available!"
        fi
    fi
else
    shimmerInxMqttVersion="N/A"
fi

# INX-Participation version
if [ -f "/usr/bin/shimmer-inx-participation" ]; then
    shimmerInxParticipationVersion=$(cd $shimmerInxParticipationHome ; /usr/bin/shimmer-inx-participation -v | awk '{print $2}' | tr -d 'v')
    if [ -z "$shimmerInxParticipationVersion" ]; then
        shimmerInxParticipationVersion="N/A"
    else
        if [ "$shimmerInxParticipationVersion" != "$latestShimmerInxParticipationVersion" ] && [ ! -z "$latestShimmerInxParticipationVersion" ]; then
            shimmerInxParticipationVersion="$shimmerInxParticipationVersion (new version \"v$latestShimmerInxParticipationVersion\" available!"
        fi
    fi
else
    shimmerInxParticipationVersion="N/A"
fi

# INX-POI version
if [ -f "/usr/bin/shimmer-inx-poi" ]; then
    shimmerInxPoiVersion=$(cd $shimmerInxPoiHome ; /usr/bin/shimmer-inx-poi -v | awk '{print $2}' | tr -d 'v')
    if [ -z "$shimmerInxPoiVersion" ]; then
        shimmerInxPoiVersion="N/A"
    else
        if [ "$shimmerInxPoiVersion" != "$latestShimmerInxPoiVersion" ] && [ ! -z "$latestShimmerInxPoiVersion" ]; then
            shimmerInxPoiVersion="$shimmerInxPoiVersion (new version \"v$latestShimmerInxPoiVersion\" available!"
        fi
    fi
else
    shimmerInxPoiVersion="N/A"
fi

# Hornet DB size
if [ -d "$iotaHornetHome/${iotaHornetNetwork}db" ]; then
    getCurrentDbSize="$(du -sb $iotaHornetHome/${iotaHornetNetwork}db | cut -f1)"
    let getCurrentDbSizeInMb=$getCurrentDbSize/1000000
    if [ $getCurrentDbSizeInMb -gt 999 ]; then
        let getCurrentDbSizeInGb=$getCurrentDbSize/1000000000
        currentIotaHornetDbSize="${getCurrentDbSizeInGb} GB"
    else
        currentIotaHornetDbSize="${getCurrentDbSizeInMb} MB"
    fi
else
    currentIotaHornetDbSize="N/A"
fi

# Hornet Shimmer DB size
if [ -d "$shimmerHornetHome/$shimmerHornetNetwork/database" ]; then
    getCurrentDbSize="$(du -sb $shimmerHornetHome/$shimmerHornetNetwork/database | cut -f1)"
    let getCurrentDbSizeInMb=$getCurrentDbSize/1000000
    if [ $getCurrentDbSizeInMb -gt 999 ]; then
        let getCurrentDbSizeInGb=$getCurrentDbSize/1000000000
        currentShimmerHornetDbSize="${getCurrentDbSizeInGb} GB"
    else
        currentShimmerHornetDbSize="${getCurrentDbSizeInMb} MB"
    fi
else
    currentShimmerHornetDbSize="N/A"
fi

# Goshimmer DB size
if [ -d "$goshimmerHome/mainnetdb" ]; then
    getCurrentDbSize="$(du -sb $goshimmerHome/mainnetdb | cut -f1)"
    let getCurrentDbSizeInMb=$getCurrentDbSize/1000000
    if [ $getCurrentDbSizeInMb -gt 999 ]; then
        let getCurrentDbSizeInGb=$getCurrentDbSize/1000000000
        currentGoshimmerDbSize="${getCurrentDbSizeInGb} GB"
    else
        currentGoshimmerDbSize="${getCurrentDbSizeInMb} MB"
    fi
else
    currentGoshimmerDbSize="N/A"
fi

# WASP DB size
if [ -d "$waspHome/waspdb" ]; then
    getCurrentDbSize="$(du -sb $waspHome/waspdb | cut -f1)"
    let getCurrentDbSizeInMb=$getCurrentDbSize/1000000
    if [ $getCurrentDbSizeInMb -gt 999 ]; then
        let getCurrentDbSizeInGb=$getCurrentDbSize/1000000000
        currentWaspDbSize="${getCurrentDbSizeInGb} GB"
    else
        currentWaspDbSize="${getCurrentDbSizeInMb} MB"
    fi
else
    currentWaspDbSize="N/A"
fi

# INX-Indexer DB size
if [ -d "$shimmerInxIndexerHome/database" ]; then
    getCurrentDbSize="$(du -sb $shimmerInxIndexerHome/database | cut -f1)"
    let getCurrentDbSizeInMb=$getCurrentDbSize/1000000
    if [ $getCurrentDbSizeInMb -gt 999 ]; then
        let getCurrentDbSizeInGb=$getCurrentDbSize/1000000000
        currentShimmerInxIndexerDbSize="${getCurrentDbSizeInGb} GB"
    else
        currentShimmerInxIndexerDbSize="${getCurrentDbSizeInMb} MB"
    fi
else
    currentShimmerInxIndexerDbSize="N/A"
fi

# INX-Participation DB size
if [ -d "$shimmerInxParticipationHome/database" ]; then
    getCurrentDbSize="$(du -sb $shimmerInxParticipationHome/database | cut -f1)"
    let getCurrentDbSizeInMb=$getCurrentDbSize/1000000
    if [ $getCurrentDbSizeInMb -gt 999 ]; then
        let getCurrentDbSizeInGb=$getCurrentDbSize/1000000000
        currentShimmerInxParticipationDbSize="${getCurrentDbSizeInGb} GB"
    else
        currentShimmerInxParticipationDbSize="${getCurrentDbSizeInMb} MB"
    fi
else
    currentShimmerInxParticipationDbSize="N/A"
fi

if [ -f "/usr/bin/iota-hornet" ]; then
    iotaHornetAppInfo="Hornet [IOTA]\nStatus: $iotaHornetStatus\nVersion: $iotaHornetVersion\nDatabase: $currentIotaHornetDbSize\n\n"
fi

if [ -f "/usr/bin/shimmer-hornet" ]; then
    shimmerHornetAppInfo="Hornet [SHIMMER]\nStatus: $shimmerHornetStatus\nVersion: $shimmerHornetVersion\nDatabase: $currentShimmerHornetDbSize\n\n"
fi

if [ -f "/usr/bin/goshimmer" ]; then
    goshimmerAppInfo="GoShimmer\nStatus: $goshimmerStatus\nVersion: $goshimmerVersion\nDatabase: $currentGoshimmerDbSize\n\n"
fi

if [ -f "/usr/bin/wasp" ]; then
    waspAppInfo="WASP\nStatus: $waspStatus\nVersion: $waspVersion\nDatabase: $currentWaspDbSize\n\n"
fi

if [ -f "/usr/bin/iota-inx-dashboard" ]; then
    iotaInxDashboardAppInfo="INX-Dashboard\nStatus: $iotaInxDashboardStatus\nVersion: $iotaInxDashboardVersion\n\n"
fi

if [ -f "/usr/bin/iota-inx-indexer" ]; then
    iotaInxIndexerAppInfo="INX-Indexer\nStatus: $iotaInxIndexerStatus\nVersion: $iotaInxIndexerVersion\nDatabase: $currentIotaInxIndexerDbSize\n\n"
fi

if [ -f "/usr/bin/iota-inx-mqtt" ]; then
    iotaInxMqttAppInfo="INX-MQTT\nStatus: $iotaInxMqttStatus\nVersion: $iotaInxMqttVersion\n\n"
fi

if [ -f "/usr/bin/iota-inx-participation" ]; then
    iotaInxParticipationAppInfo="INX-Participation\nStatus: $iotaInxParticipationStatus\nVersion: $iotaInxParticipationVersion\nDatabase: $currentIotaInxParticipationDbSize\n\n"
fi

if [ -f "/usr/bin/shimmer-inx-dashboard" ]; then
    shimmerInxDashboardAppInfo="INX-Dashboard\nStatus: $shimmerInxDashboardStatus\nVersion: $shimmerInxDashboardVersion\n\n"
fi

if [ -f "/usr/bin/shimmer-inx-indexer" ]; then
    shimmerInxIndexerAppInfo="INX-Indexer\nStatus: $shimmerInxIndexerStatus\nVersion: $shimmerInxIndexerVersion\nDatabase: $currentShimmerInxIndexerDbSize\n\n"
fi

if [ -f "/usr/bin/shimmer-inx-mqtt" ]; then
    shimmerInxMqttAppInfo="INX-MQTT\nStatus: $shimmerInxMqttStatus\nVersion: $shimmerInxMqttVersion\n\n"
fi

if [ -f "/usr/bin/shimmer-inx-participation" ]; then
    shimmerInxParticipationAppInfo="INX-Participation\nStatus: $shimmerInxParticipationStatus\nVersion: $shimmerInxParticipationVersion\nDatabase: $currentShimmerInxParticipationDbSize\n\n"
fi

if [ -f "/usr/bin/shimmer-inx-poi" ]; then
    shimmerInxPoiAppInfo="INX-POI\nStatus: $shimmerInxPoiStatus\nVersion: $shimmerInxPoiVersion\n\n"
fi

# OUTPUT
whiptail --scrolltext --title "SWARM - App Info" --msgbox "\n${iotaHornetAppInfo}${shimmerHornetAppInfo}${goshimmerAppInfo}${waspAppInfo}${shimmerInxDashboardAppInfo}${shimmerInxIndexerAppInfo}${shimmerInxMqttAppInfo}${shimmerInxParticipationAppInfo}${shimmerInxPoiAppInfo}" 24 65
