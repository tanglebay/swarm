#!/bin/bash

if [ -f "/usr/bin/hornet" ]; then
    sudo systemctl stop hornet
    [ -f "/etc/systemd/system/multi-user.target.wants/hornet.service" ]; then
        sudo systemctl disable hornet
        sudo systemctl daemon-reload
    fi
    if [ -d "/var/lib/hornet" ]; then
        sudo mv /var/lib/hornet /var/lib/iota-hornet
    fi
    if [ -f "/usr/bin/hornet" ]; then
        sudo mv /usr/bin/hornet /usr/bin/iota-hornet
    fi
    if [ -f "/etc/default/hornet" ]; then
        sudo mv /etc/default/hornet /etc/default/iota-hornet
    fi
    if [ -f "/lib/systemd/system/hornet.service" ]; then
        sudo cp -rf $swarmTemplates/iota/hornet/iota-hornet.service /lib/systemd/system/iota-hornet.service
    fi
    if [ -f "/etc/nginx/sites-enabled/hornet" ]; then
        sudo mv /etc/nginx/sites-enabled/hornet /etc/nginx/sites-enabled/iota-hornet
        sudo systemctl reload nginx
    fi
    if [ ! -f "/etc/systemd/system/multi-user.target.wants/iota-hornet.service" ]; then
        sudo systemctl enable iota-hornet
        sudo systemctl daemon-reload
        sudo systemctl start hornet
    fi
fi

if [ -f "/usr/bin/hornet-shimmer" ]; then
    sudo systemctl stop hornet-shimmer
    [ -f "/etc/systemd/system/multi-user.target.wants/hornet-shimmer.service" ]; then
        sudo systemctl disable hornet-shimmer
        sudo systemctl daemon-reload
    fi
    if [ -d "/var/lib/hornet-shimmer" ]; then
        sudo mv /var/lib/hornet-shimmer /var/lib/shimmer-hornet
    fi
    if [ -f "/usr/bin/hornet-shimmer" ]; then
        sudo mv /usr/bin/hornet-shimmer /usr/bin/shimmer-hornet
    fi
    if [ -f "/etc/default/hornet-shimmer" ]; then
        sudo mv /etc/default/hornet-shimmer /etc/default/shimmer-hornet
    fi
    if [ -f "/lib/systemd/system/hornet.service" ]; then
        sudo cp -rf $swarmTemplates/shimmer/hornet/shimmer-hornet.service /lib/systemd/system/shimmer-hornet.service
        sudo rm -rf /lib/systemd/system/hornet-shimmer.service
    fi
    if [ -f "/etc/nginx/sites-enabled/hornet-shimmer" ]; then
        sudo mv /etc/nginx/sites-enabled/hornet-shimmer /etc/nginx/sites-enabled/shimmer-hornet
        sudo systemctl reload nginx
    fi
    if [ ! -f "/etc/systemd/system/multi-user.target.wants/shimmer-hornet.service" ]; then
        sudo systemctl enable shimmer-hornet
        sudo systemctl daemon-reload
        sudo systemctl start shimmer-hornet
    fi
fi

if [ -f "/usr/bin/bee" ]; then
    sudo systemctl stop bee
    [ -f "/etc/systemd/system/multi-user.target.wants/bee.service" ]; then
        sudo systemctl disable bee
        sudo systemctl daemon-reload
    fi
    if [ -d "/var/lib/bee" ]; then
        sudo mv /var/lib/bee /var/lib/iota-bee
    fi
    if [ -f "/usr/bin/bee" ]; then
        sudo mv /usr/bin/bee /usr/bin/iota-bee
    fi
    if [ -f "/etc/default/bee" ]; then
        sudo mv /etc/default/bee /etc/default/iota-bee
    fi
    if [ -f "/lib/systemd/system/bee.service" ]; then
        sudo cp -rf $swarmTemplates/iota/bee/iota-bee.service /lib/systemd/system/iota-bee.service
    fi
    if [ -f "/etc/nginx/sites-enabled/bee" ]; then
        sudo mv /etc/nginx/sites-enabled/bee /etc/nginx/sites-enabled/iota-bee
        sudo systemctl reload nginx
    fi
    if [ ! -f "/etc/systemd/system/multi-user.target.wants/iota-bee.service" ]; then
        sudo systemctl enable iota-bee
        sudo systemctl daemon-reload
        sudo systemctl start bee
    fi
fi

if [ -f "/usr/bin/bee-shimmer" ]; then
    sudo systemctl stop bee-shimmer
    [ -f "/etc/systemd/system/multi-user.target.wants/bee-shimmer.service" ]; then
        sudo systemctl disable bee-shimmer
        sudo systemctl daemon-reload
    fi
    if [ -d "/var/lib/bee-shimmer" ]; then
        sudo mv /var/lib/bee-shimmer /var/lib/shimmer-bee
    fi
    if [ -f "/usr/bin/bee-shimmer" ]; then
        sudo mv /usr/bin/bee-shimmer /usr/bin/shimmer-bee
    fi
    if [ -f "/etc/default/bee-shimmer" ]; then
        sudo mv /etc/default/bee-shimmer /etc/default/shimmer-bee
    fi
    if [ -f "/lib/systemd/system/bee.service" ]; then
        sudo cp -rf $swarmTemplates/shimmer/bee/shimmer-bee.service /lib/systemd/system/shimmer-bee.service
        sudo rm -rf /lib/systemd/system/bee-shimmer.service
    fi
    if [ -f "/etc/nginx/sites-enabled/bee-shimmer" ]; then
        sudo mv /etc/nginx/sites-enabled/bee-shimmer /etc/nginx/sites-enabled/shimmer-bee
        sudo systemctl reload nginx
    fi
    if [ ! -f "/etc/systemd/system/multi-user.target.wants/shimmer-bee.service" ]; then
        sudo systemctl enable shimmer-bee
        sudo systemctl daemon-reload
        sudo systemctl start shimmer-bee
    fi
fi

if [ -f "$swarmTmp/hornet.cfg" ]; then
    source $swarmTmp/hornet.cfg

    ####
    if [ ! -z "$hornetRelease" ]; then
        iotaHornetRelease=hornetRelease
    fi
    ####
    if [ ! -z "$hornetNetwork" ]; then
        iotaHornetNetwork=$hornetNetwork
    fi
    ####
    if [ ! -z "$hornetAlias" ]; then
        iotaHornetAlias=$hornetAlias
    fi
    ####
    if [ ! -z "$hornetDisablePlugins" ]; then
        iotaHornetDisablePlugins=$hornetDisablePlugins
    fi
    ####
    if [ ! -z "$hornetEnablePlugins" ]; then
        iotaHornetEnablePlugins=$hornetEnablePlugins
    fi
    ####
    if [ ! -z "$hornetUnknownPeersLimit" ]; then
        iotaHornetUnknownPeersLimit=$hornetUnknownPeersLimit
    fi
    ####
    if [ ! -z "$hornetSnapshotInterval" ]; then
        iotaHornetSnapshotInterval=$hornetSnapshotInterval
    fi
    ####
    if [ ! -z "$hornetGossipPort" ]; then
        iotaHornetGossipPort=$hornetGossipPort
    fi
    ####
    if [ ! -z "$hornetAutopeeringPort" ]; then
        iotaHornetAutopeeringPort=$hornetAutopeeringPort
    fi
    ####

    if [ ! -z "$hornetPowEnabled" ]; then
        iotaHornetPowEnabled=$hornetPowEnabled
    fi
    ###
    if [ ! -z "$hornetPowWorkerCount" ]; then
        iotaHornetPowWorkerCount=$hornetPowWorkerCount
    fi
    ####
    if [ ! -z "$hornetAutoRevalidation" ]; then
        iotaHornetAutoRevalidation=$hornetAutoRevalidation
    fi
    ####

    if [ ! -z "$hornetPruningEnabled" ]; then
        iotaHornetPruningEnabled=$hornetPruningEnabled
    fi
    ####

    if [ ! -z "$hornetPruningDatabaseSize" ]; then
        iotaHornetPruningDatabaseSize=$hornetPruningDatabaseSize
    fi
    ####

    if [ ! -z "$hornetPruningPercentage" ]; then
        iotaHornetPruningPercentage=$hornetPruningPercentage
    fi
    ####

    if [ ! -z "$hornetPruningCooldownTime" ]; then
        iotaHornetPruningCooldownTime=$hornetPruningCooldownTime
    fi
    ####

    if [ ! -z "$hornetUsername" ]; then
        iotaHornetUsername=$hornetUsername
    fi
    ####

    if [ ! -z "$hornetPasswordHash" ]; then
        iotaHornetPasswordHash=$hornetPasswordHash
    fi
    ####

    if [ ! -z "$hornetPasswordSalt" ]; then
        iotaHornetPasswordSalt=$hornetPasswordSalt
    fi
    ####
    if [ ! -z "$hornetIdentity" ]; then
        iotaHornetIdentity=$hornetIdentity
    fi
    ####

    if [ ! -z "$hornetRunAsEntryNode" ]; then
        iotaHornetRunAsEntryNode=$hornetRunAsEntryNode
    fi
    ####
    if [ ! -z "$hornetApiJwtSalt" ]; then
        iotaHornetApiJwtSalt=$hornetApiJwtSalt
    fi
    ####
    if [ ! -z "$hornetApiJwtToken" ]; then
        iotaHornetApiJwtToken=$hornetApiJwtToken
    fi
    ####
    if [ ! -z "$hornetApiPublicRoutes" ]; then
        iotaHornetApiPublicRoutes=$hornetApiPublicRoutes
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmp/hornet-shimmer.cfg" ]; then
    source $swarmTmp/hornet-shimmer.cfg

    ####
    if [ ! -z "$hornetShimmerRelease" ]; then
        shimmerHornetRelease=$hornetShimmerRelease
    fi
    ####
    if [ ! -z "$hornetShimmerNetwork" ]; then
        shimmerHornetNetwork=$hornetShimmerNetwork
    fi
    ####
    if [ ! -z "$hornetShimmerAlias" ]; then
        shimmerHornetAlias=$hornetShimmerAlias
    fi
    ####
    if [ ! -z "$hornetShimmerDisablePlugins" ]; then
        shimmerHornetDisablePlugins=$hornetShimmerDisablePlugins
    fi
    ####
    if [ ! -z "$hornetShimmerEnablePlugins" ]; then
        shimmerHornetEnablePlugins=$hornetShimmerEnablePlugins
    fi
    ####
    if [ ! -z "$hornetShimmerUnknownPeersLimit" ]; then
        shimmerHornetUnknownPeersLimit=$hornetShimmerUnknownPeersLimit
    fi
    ####
    if [ ! -z "$hornetShimmerSnapshotInterval" ]; then
        shimmerHornetSnapshotInterval=$hornetShimmerSnapshotInterval
    fi
    ####
    if [ ! -z "$hornetShimmerGossipPort" ]; then
        shimmerHornetGossipPort=$hornetShimmerGossipPort
    fi
    ####
    if [ ! -z "$hornetShimmerAutopeeringPort" ]; then
        shimmerHornetAutopeeringPort=$hornetShimmerAutopeeringPort
    fi
    ####
    if [ ! -z "$hornetShimmerPowEnabled" ]; then
        shimmerHornetPowEnabled=$hornetShimmerPowEnabled
    fi
    ###
    if [ ! -z "$hornetShimmerPowWorkerCount" ]; then
        shimmerHornetPowWorkerCount=$hornetShimmerPowWorkerCount
    fi
    ####
    if [ ! -z "$hornetShimmerAutoRevalidation" ]; then
        shimmerHornetAutoRevalidation=$hornetShimmerAutoRevalidation
    fi
    ####
    if [ ! -z "$hornetShimmerPruningEnabled" ]; then
        shimmerHornetPruningEnabled=$hornetShimmerPruningEnabled
    fi
    ####
    if [ ! -z "$hornetShimmerPruningDatabaseSize" ]; then
        shimmerHornetPruningDatabaseSize=$hornetShimmerPruningDatabaseSize
    fi
    ####
    if [ ! -z "$hornetShimmerPruningPercentage" ]; then
        shimmerHornetPruningPercentage=$hornetShimmerPruningPercentage
    fi
    ####
    if [ ! -z "$hornetShimmerPruningCooldownTime" ]; then
        shimmerHornetPruningCooldownTime=$hornetShimmerPruningCooldownTime
    fi
    ####
    if [ ! -z "$hornetShimmerUsername" ]; then
        shimmerHornetUsername=$hornetShimmerUsername
    fi
    ####
    if [ ! -z "$hornetShimmerPasswordHash" ]; then
        shimmerHornetPasswordHash=$hornetShimmerPasswordHash
    fi
    ####
    if [ ! -z "$hornetShimmerPasswordSalt" ]; then
        shimmerHornetPasswordSalt=$hornetShimmerPasswordSalt
    fi
    ####
    if [ ! -z "$hornetShimmerIdentity" ]; then
        shimmerHornetIdentity=$hornetShimmerIdentity
    fi
    ####
    if [ ! -z "$hornetShimmerRunAsEntryNode" ]; then
        shimmerHornetRunAsEntryNode=$hornetShimmerRunAsEntryNode
    fi
    ####
    if [ ! -z "$hornetShimmerApiJwtSalt" ]; then
        shimmerHornetApiJwtSalt=$hornetShimmerApiJwtSalt
    fi
    ####
    if [ ! -z "$hornetShimmerApiJwtToken" ]; then
        shimmerHornetApiJwtToken=$hornetShimmerApiJwtToken
    fi
    ####
    if [ ! -z "$hornetShimmerApiPublicRoutes" ]; then
        shimmerHornetApiPublicRoutes=$hornetShimmerApiPublicRoutes
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmp/bee.cfg" ]; then
    source $swarmTmp/bee.cfg

    if [ ! -z "$beeRelease" ]; then
        iotaBeeRelease=$beeRelease
    fi
    ####
    if [ ! -z "$beeNetwork" ]; then
        iotaBeeNetwork=$beeNetwork
    fi
    ####
    if [ ! -z "$beeAlias" ]; then
        iotaBeeAlias=$beeAlias
    fi
    ####
    if [ ! -z "$beeGossipPort" ]; then
        iotaBeeGossipPort=$beeGossipPort
    fi
    ####
    if [ ! -z "$beeIdentity" ]; then
        iotaBeeIdentity=$beeIdentity
    fi
    ####
    if [ ! -z "$beeMaxUnknownPeers" ]; then
        iotaBeeMaxUnknownPeers=$beeMaxUnknownPeers
    fi
    ####
    if [ ! -z "$beePasswordHash" ]; then
        iotaBeePasswordHash=$beePasswordHash
    fi
    ####
    if [ ! -z "$beePasswordSalt" ]; then
        iotaBeePasswordSalt=$beePasswordSalt
    fi
    ####
    if [ ! -z "$beePowEnabled" ]; then
        iotaBeePowEnabled=$beePowEnabled
    fi
    ####
    if [ ! -z "$beePruningDelay" ]; then
        iotaBeePruningDelay=$beePruningDelay
    fi
    ####
    if [ ! -z "$beePruningEnabled" ]; then
        iotaBeePruningEnabled=$beePruningEnabled
    fi
    ####
    if [ ! -z "$beeSnapshotInterval" ]; then
        iotaBeeSnapshotInterval=$beeSnapshotInterval
    fi
    ####
    if [ ! -z "$beeUsername" ]; then
        iotaBeeUsername=$beeUsername
    fi
    ####
    if [ ! -z "$beeAutopeeringEnabled" ]; then
        iotaBeeAutopeeringEnabled=$beeAutopeeringEnabled
    fi
    ####
    if [ ! -z "$beeAutopeeringPort" ]; then
        iotaBeeAutopeeringPort=$beeAutopeeringPort
    fi
    ####
    if [ ! -z "$beeRunAsEntryNode" ]; then
        iotaBeeRunAsEntryNode=$beeRunAsEntryNode
    fi
    ####
    if [ ! -z "$beeMaxDiscoveredPeers" ]; then
        iotaBeeMaxDiscoveredPeers=$beeMaxDiscoveredPeers
    fi
    ####
    if [ ! -z "$beeApiPublicRoutes" ]; then
        iotaBeeApiPublicRoutes=$beeApiPublicRoutes
    fi

    ####
    # BEE PEERS
    if [ ! -z "$beePeer1" ]; then
        iotaBeePeer1=$beePeer1
    fi
    if [ ! -z "$beePeerAlias1" ]; then
        iotaBeePeerAlias1=$beePeerAlias1
    fi
    ####
    if [ ! -z "$beePeer2" ]; then
        iotaBeePeer2=$beePeer2
    fi
    if [ ! -z "$beePeerAlias2" ]; then
        iotaBeePeerAlias2=$beePeerAlias2
    fi
    ####
    if [ ! -z "$beePeer3" ]; then
        iotaBeePeer3=$beePeer3
    fi
    if [ ! -z "$beePeerAlias3" ]; then
        iotaBeePeerAlias3=$beePeerAlias3
    fi
    ####
    if [ ! -z "$beePeer4" ]; then
        iotaBeePeer4=$beePeer4
    fi
    if [ ! -z "$beePeerAlias4" ]; then
        iotaBeePeerAlias4=$beePeerAlias4
    fi
    ####
    if [ ! -z "$beePeer5" ]; then
        itoabeePeer5=$beePeer5
    fi
    if [ ! -z "$beePeerAlias5" ]; then
        iotaBeePeerAlias5=$beePeerAlias5
    fi
    ####
    if [ ! -z "$beePeer6" ]; then
        iotaBeePeer6=$beePeer6
    fi
    if [ ! -z "$beePeerAlias6" ]; then
        iotaBeePeerAlias6=$beePeerAlias6
    fi
fi

####################################################################################################################################

if [ -f "$swarmTmp/bee-shimmer.cfg" ]; then
    source $swarmTmp/bee-shimmer.cfg


    if [ ! -z "$beeShimmerRelease" ]; then
        shimmerBeeRelease=$beeShimmerRelease
    fi
    ####
    if [ ! -z "$beeShimmerNetwork" ]; then
        shimmerBeeNetwork=$beeShimmerNetwork
    fi
    ####
    if [ ! -z "$beeShimmerAlias" ]; then
        shimmerBeeAlias=$beeShimmerAlias
    fi
    ####
    if [ ! -z "$beeShimmerGossipPort" ]; then
        shimmerBeeGossipPort=$beeShimmerGossipPort
    fi
    ####
    if [ ! -z "$beeShimmerIdentity" ]; then
        shimmerBeeIdentity=$beeShimmerIdentity
    fi
    ####
    if [ ! -z "$beeShimmerMaxUnknownPeers" ]; then
        shimmerBeeMaxUnknownPeers=$beeShimmerMaxUnknownPeers
    fi
    ####
    if [ ! -z "$beeShimmerPasswordHash" ]; then
        shimmerBeePasswordHash=$beeShimmerPasswordHash
    fi
    ####
    if [ ! -z "$beeShimmerPasswordSalt" ]; then
        shimmerBeePasswordSalt=$beeShimmerPasswordSalt
    fi
    ####
    if [ ! -z "$beeShimmerPowEnabled" ]; then
        shimmerBeePowEnabled=$beeShimmerPowEnabled
    fi
    ####
    if [ ! -z "$beeShimmerPruningDelay" ]; then
        shimmerBeePruningDelay=$beeShimmerPruningDelay
    fi
    ####
    if [ ! -z "$beeShimmerPruningEnabled" ]; then
        shimmerBeePruningEnabled=$beeShimmerPruningEnabled
    fi
    ####
    if [ ! -z "$beeShimmerSnapshotInterval" ]; then
        shimmerBeeSnapshotInterval=$beeShimmerSnapshotInterval
    fi
    ####
    if [ ! -z "$beeShimmerUsername" ]; then
        shimmerBeeUsername=$beeShimmerUsername
    fi
    ####
    if [ ! -z "$beShimmereAutopeeringEnabled" ]; then
        shimmerbeShimmereAutopeeringEnabled=$beShimmereAutopeeringEnabled
    fi
    ####
    if [ ! -z "$beeShimmerAutopeeringPort" ]; then
        shimmerBeeAutopeeringPort=$beeShimmerAutopeeringPort
    fi
    ####
    if [ ! -z "$beeShimmerRunAsEntryNode" ]; then
        shimmerBeeRunAsEntryNode=$beeShimmerRunAsEntryNode
    fi
    ####
    if [ ! -z "$beeShimmerMaxDiscoveredPeers" ]; then
        shimmerBeeMaxDiscoveredPeers=$beeShimmerMaxDiscoveredPeers
    fi
    ####
    if [ ! -z "$beeShimmerApiPublicRoutes" ]; then
        shimmerBeeApiPublicRoutes=$beeShimmerApiPublicRoutes
    fi

    ####
    # BEE PEERS
    if [ ! -z "$beeShimmerPeer1" ]; then
        shimmerBeePeer1=$beeShimmerPeer1
    fi
    if [ ! -z "$beeShimmerPeerAlias1" ]; then
        shimmerBeePeerAlias1=$beeShimmerPeerAlias1
    fi
    ####
    if [ ! -z "$beeShimmerPeer2" ]; then
        shimmerBeePeer2=$beeShimmerPeer2
    fi
    if [ ! -z "$beeShimmerPeerAlias2" ]; then
        shimmerBeePeerAlias2=$beeShimmerPeerAlias2
    fi
    ####
    if [ ! -z "$beeShimmerPeer3" ]; then
        shimmerBeePeer3=$beeShimmerPeer3
    fi
    if [ ! -z "$beeShimmerPeerAlias3" ]; then
        shimmerBeePeerAlias3=$beeShimmerPeerAlias3
    fi
    ####
    if [ ! -z "$beeShimmerPeer4" ]; then
        shimmerBeePeer4=$beeShimmerPeer4
    fi
    if [ ! -z "$beeShimmerPeerAlias4" ]; then
        shimmerBeePeerAlias4=$beeShimmerPeerAlias4
    fi
    ####
    if [ ! -z "$beeShimmerPeer5" ]; then
        shimmerBeePeer5=$beeShimmerPeer5
    fi
    if [ ! -z "$beeShimmerPeerAlias5" ]; then
        shimmerBeePeerAlias5=$beeShimmerPeerAlias5
    fi
    ####
    if [ ! -z "$beeShimmerPeer6" ]; then
        shimmerBeePeer6=$beeShimmerPeer6
    fi
    if [ ! -z "$beeShimmerPeerAlias6" ]; then
        shimmerBeePeerAlias6=$beeShimmerPeerAlias6
    fi
fi