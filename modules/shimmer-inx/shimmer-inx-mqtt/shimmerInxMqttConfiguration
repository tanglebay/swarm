#!/bin/bash
while [ $exitCode -lt 1 ]; do
    clear
    source $swarmConfigs/shimmer-inx-mqtt.cfg
    if [ "$shimmerInxMqttUpdateCheck" = "true" ]; then
        menuShimmerInxMqttUpdateCheck="Disable"
    else
        menuShimmerInxMqttUpdateCheck="Enable"
    fi
    source $shimmerInxMqttModules/shimmerInxMqttConfigs
    CHOICE=$(
        whiptail --title "INX-MQTT [SHIMMER] Configurations" --menu "\nChoose an option" 24 65 0 \
        "1)" "MQTT Settings" \
        "2)" "INX Address" \
        "3)" "Enable Plugins" \
        "4)" "Disable Plugins" \
        "5)" "$menuShimmerInxMqttUpdateCheck update check" 3>&2 2>&1 1>&3
    )

    exitstatus=$?
    if [ "$exitstatus" = "1" ]; then
        exitCode=1
        if [ "$restartShimmerInxMqtt" = "true" ] && [ -f "/usr/bin/shimmer-inx-mqtt" ]; then
            if (whiptail --title "INX-MQTT [SHIMMER] Menu" --yesno "Would you like to apply the changes and restart INX-MQTT?" 8 65); then
                {
                    echo 0
                    echo 33
                    source $shimmerInxMqttModules/shimmerInxMqttParser
                    echo 50
                    sudo systemctl restart shimmer-inx-mqtt > /dev/null 2>&1
                    sleep 0.25
                    echo 100
                    sleep 0.25
                } | whiptail --gauge "Please wait while the changes are applied and INX-MQTT is restarted..." 8 65 0
                unset restartShimmerInxMqtt
            fi
        fi
    fi

    case $CHOICE in
        "1)")
            while [ $exitCode -lt 1 ]; do
                clear
                CHOICE=$(
                    whiptail --title "INX-MQTT [SHIMMER] MQTT Settings" --menu "\nChoose an option" 24 65 0 \
                    "1)" "Websocket Settings" \
                    "2)" "TCP Settings" 3>&2 2>&1 1>&3
                )
                exitstatus=$?
                if [ "$exitstatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        while [ $exitCode -lt 1 ]; do
                            clear
                            if [ "$shimmerInxMqttWebsocketEnabled" = "true" ]; then
                                menuShimmerInxMqttWebsocketEnabled="Disable"
                            else
                                menuShimmerInxMqttWebsocketEnabled="Enable"
                            fi
                            CHOICE=$(
                                whiptail --title "INX-MQTT [SHIMMER] Websocket" --menu "\nChoose an option" 24 65 0 \
                                "1)" "$menuShimmerInxMqttWebsocketEnabled websocket" \
                                "2)" "Websocket address" 3>&2 2>&1 1>&3
                            )
                            exitstatus=$?
                            if [ "$exitstatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    source $swarmConfigs/shimmer-inx-mqtt.cfg
                                    if [ "$shimmerInxMqttWebsocketEnabled" = "true" ]; then
                                        shimmerInxMqttWebsocketEnabledStatus="enabled"
                                    else
                                        shimmerInxMqttWebsocketEnabledStatus="disabled"
                                    fi
                                    if (whiptail --title "[SHIMMER] INX-MQTT - Update Check" --yesno "Would you like to \"$shimmerInxMqttWebsocketEnabledStatus\" update check?" 8 65); then
                                        if [ "$shimmerInxMqttWebsocketEnabled" = "true" ]; then
                                            shimmerInxMqttWebsocketEnabled=false
                                        else
                                            shimmerInxMqttWebsocketEnabled=true
                                        fi
                                        source $shimmerInxMqttConfigParsers/shimmerInxMqttWebsocketEnabled
                                        sudo sed -i 's~^shimmerInxMqttWebsocketEnabled=.*~shimmerInxMqttWebsocketEnabled='$shimmerInxMqttWebsocketEnabled'~g' $swarmConfigs/shimmer-inx-mqtt.cfg
                                    fi
                                ;;
                                "2)")
                                    source $swarmConfigs/shimmer-inx-mqtt.cfg
                                    shimmerInxMqttWebsocketAddress=$(whiptail --inputbox "\nSet the address of the websocket interface" 10 65 $shimmerInxMqttWebsocketAddress --title "[SHIMMER] INX-MQTT - Websocket Address" 3>&1 1>&2 2>&3)
                                    exitStatus=$?
                                    if [ $exitStatus != 1 ]; then
                                        if [ ! -z "$shimmerInxMqttWebsocketAddress" ] && [[ $shimmerInxMqttWebsocketAddress =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+:+[0-9]+|^localhost:[0-9]+$ ]]; then
                                            source $shimmerInxMqttConfigParsers/shimmerInxMqttWebsocketAddress
                                            if [ "$newShimmerInxMqttWebsocketAddress" = "true" ]; then
                                                sudo sed -i 's/^shimmerInxMqttWebsocketAddress=.*/shimmerInxMqttWebsocketAddress="'$shimmerInxMqttWebsocketAddress'"/' $swarmConfigs/shimmer-inx-mqtt.cfg
                                                whiptail --title "[SHIMMER] INX-MQTT - Websocket Address" --msgbox "New websocket address \"$shimmerInxMqttWebsocketAddress\" applied!" 8 65
                                                unset newShimmerInxMqttWebsocketAddress
                                            else
                                                whiptail --title "[SHIMMER] INX-MQTT - Websocket Address" --msgbox "No websocket address change detected." 8 65
                                            fi
                                        else
                                            whiptail --title "[SHIMMER] INX-MQTT - Websocket Address" --msgbox "No valid websocket address, please try again." 8 65
                                        fi
                                    fi
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                    "2)")
                        while [ $exitCode -lt 1 ]; do
                            clear
                            if [ "$shimmerInxMqttTcpEnabled" = "true" ]; then
                                menuShimmerInxMqttTcpEnabled="Disable"
                            else
                                menuShimmerInxMqttTcpEnabled="Enable"
                            fi
                            CHOICE=$(
                                whiptail --title "[SHIMMER] INX-MQTT - TCP" --menu "\nChoose an option" 24 65 0 \
                                "1)" "$menuShimmerInxMqttTcpEnabled TCP" \
                                "2)" "TCP address" 3>&2 2>&1 1>&3
                            )
                            exitstatus=$?
                            if [ "$exitstatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    source $swarmConfigs/shimmer-inx-mqtt.cfg
                                    if [ "$shimmerInxMqttTcpEnabled" = "true" ]; then
                                        shimmerInxMqttTcpEnabledStatus="enabled"
                                    else
                                        shimmerInxMqttTcpEnabledStatus="disabled"
                                    fi
                                    if (whiptail --title "[SHIMMER] INX-MQTT - TCP" --yesno "Would you like to \"$shimmerInxMqttTcpEnabledStatus\" tcp interface?" 8 65); then
                                        if [ "$shimmerInxMqttTcpEnabled" = "true" ]; then
                                            shimmerInxMqttTcpEnabled=false
                                        else
                                            shimmerInxMqttTcpEnabled=true
                                        fi
                                        source $shimmerInxMqttConfigParsers/shimmerInxMqttTcpEnabled
                                        sudo sed -i 's~^shimmerInxMqttTcpEnabled=.*~shimmerInxMqttTcpEnabled='$shimmerInxMqttTcpEnabled'~g' $swarmConfigs/shimmer-inx-mqtt.cfg
                                    fi
                                ;;
                                "2)")
                                    source $swarmConfigs/shimmer-inx-mqtt.cfg
                                    shimmerInxMqttTcpAddress=$(whiptail --inputbox "\nSet the address of the TCP interface" 10 65 $shimmerInxMqttTcpAddress --title "[SHIMMER] INX-MQTT - TCP Address" 3>&1 1>&2 2>&3)
                                    exitStatus=$?
                                    if [ $exitStatus != 1 ]; then
                                        if [ ! -z "$shimmerInxMqttTcpAddress" ] && [[ $shimmerInxMqttTcpAddress =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+:+[0-9]+|^localhost:[0-9]+$ ]]; then
                                            source $shimmerInxMqttConfigParsers/shimmerInxMqttTcpAddress
                                            if [ "$newShimmerInxMqttTcpAddress" = "true" ]; then
                                                sudo sed -i 's/^shimmerInxMqttTcpAddress=.*/shimmerInxMqttTcpAddress="'$shimmerInxMqttTcpAddress'"/' $swarmConfigs/shimmer-inx-mqtt.cfg
                                                whiptail --title "[SHIMMER] INX-MQTT - TCP Address" --msgbox "New TCP address \"$shimmerInxMqttTcpAddress\" applied!" 8 65
                                                unset newShimmerInxMqttTcpAddress
                                            else
                                                whiptail --title "[SHIMMER] INX-MQTT - TCP Address" --msgbox "No TCP address change detected." 8 65
                                            fi
                                        else
                                            whiptail --title "[SHIMMER] INX-MQTT - TCP Address" --msgbox "No valid TCP address, please try again." 8 65
                                        fi
                                    fi
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                esac
            done
            exitCode=0
        ;;
        "2)")
            source $swarmConfigs/shimmer-inx-mqtt.cfg
            shimmerInxMqttInxAddress=$(whiptail --inputbox "\nSet the address of the INX interface" 10 65 $shimmerInxMqttInxAddress --title "[SHIMMER] INX-MQTT - INX Address" 3>&1 1>&2 2>&3)
            exitStatus=$?
            if [ $exitStatus != 1 ]; then
                if [ ! -z "$shimmerInxMqttInxAddress" ] && [[ $shimmerInxMqttInxAddress =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+:+[0-9]+|^localhost:[0-9]+$ ]]; then
                    source $shimmerInxMqttConfigParsers/shimmerInxMqttInxAddress
                    if [ "$newShimmerInxMqttInxAddress" = "true" ]; then
                        sudo sed -i 's/^shimmerInxMqttInxAddress=.*/shimmerInxMqttInxAddress="'$shimmerInxMqttInxAddress'"/' $swarmConfigs/shimmer-inx-mqtt.cfg
                        whiptail --title "[SHIMMER] INX-MQTT - INX Address" --msgbox "New INX address \"$shimmerInxMqttInxAddress\" applied!" 8 65
                        unset newInxMqttInxAddress
                    else
                        whiptail --title "[SHIMMER] INX-MQTT - INX Address" --msgbox "No INX address change detected." 8 65
                    fi
                else
                    whiptail --title "[SHIMMER] INX-MQTT - INX Address" --msgbox "No valid INX address, please try again." 8 65
                fi
            fi
        ;;
        "3)")
            useShimmerInxMqttEnablePlugins=true
            source $swarmConfigs/shimmer-inx-mqtt.cfg
            currentShimmerInxMqttEnablePlugins=$shimmerInxMqttEnablePlugins
            source $shimmerInxMqttModules/shimmerInxMqttPlugins
            shimmerInxMqttEnablePlugins=$(whiptail --title "[SHIMMER] INX-MQTT - Plugins" --checklist "\nSelect (with spacebar) the INX-MQTT plugins to be activated:" 24 65 1 \
                "Prometheus" "plugin for metrics (e.g. Grafana)" $shimmerInxMqttPluginPrometheus 3>&1 1>&2 2>&3)
            exitStatus=$?
            shimmerInxMqttEnablePlugins=$(echo $shimmerInxMqttEnablePlugins | tr '[:upper:]' '[:lower:]' | tr -s '[:blank:]' ',' | tr -d '"')
            if [ -z "$shimmerInxMqttEnablePlugins" ] || [[ $shimmerInxMqttEnablePlugins = *prometheus* ]]; then
                if [ "$shimmerInxMqttEnablePlugins" != "$currentShimmerInxMqttEnablePlugins" ] && [ "$exitStatus" != "1" ]; then
                    if [ -f "/usr/bin/shimmer-inx-mqtt" ]; then
                        source $shimmerInxMqttConfigParsers/shimmerInxMqttEnablePlugins
                    fi
                    sudo sed -i 's/^shimmerInxMqttEnablePlugins=.*/shimmerInxMqttEnablePlugins="'$shimmerInxMqttEnablePlugins'"/' $swarmConfigs/shimmer-inx-mqtt.cfg
                    if [ ! -z "$shimmerInxMqttEnablePlugins" ]; then
                        whiptail --title "[SHIMMER] INX-MQTT - Plugins" --msgbox "The following plugins are enabled:\n$shimmerInxMqttEnablePlugins" 14 65
                    else
                        whiptail --title "[SHIMMER] INX-MQTT - Plugins" --msgbox "There are no plugins enabled for INX-MQTT!" 8 65
                    fi
                fi
                unset shimmerInxMqttEnablePlugins
            fi
            unset useShimmerInxMqttEnablePlugins
        ;;
        "4)")
            useShimmerInxMqttDisablePlugins=true
            source $swarmConfigs/shimmer-inx-mqtt.cfg
            currentShimmerInxMqttDisablePlugins=$shimmerInxMqttDisablePlugins
            source $shimmerInxMqttModules/shimmerInxMqttPlugins
            shimmerInxMqttDisablePlugins=$(whiptail --title "[SHIMMER] INX-MQTT - Plugins" --checklist "\nSelect (with spacebar) the INX-MQTT plugins to be deactivated:" 24 65 1 \
                "Prometheus" "plugin for metrics (e.g. Grafana)" $shimmerInxMqttPluginPrometheus 3>&1 1>&2 2>&3)
            exitStatus=$?
            shimmerInxMqttDisablePlugins=$(echo $shimmerInxMqttDisablePlugins | tr '[:upper:]' '[:lower:]' | tr -s '[:blank:]' ',' | tr -d '"')
            if [ -z "$shimmerInxMqttDisablePlugins" ] || [[ $shimmerInxMqttDisablePlugins = *warpsync* ]]; then
                if [ "$shimmerInxMqttDisablePlugins" != "$currentShimmerInxMqttDisablePlugins" ] && [ "$exitStatus" != "1" ]; then
                    if [ -f "/usr/bin/shimmer-inx-mqtt" ]; then
                        source $shimmerInxMqttConfigParsers/shimmerInxMqttDisablePlugins
                    fi
                    sudo sed -i 's/^shimmerInxMqttDisablePlugins=.*/shimmerInxMqttDisablePlugins="'$shimmerInxMqttDisablePlugins'"/' $swarmConfigs/shimmer-inx-mqtt.cfg
                    if [ ! -z "$shimmerInxMqttDisablePlugins" ]; then
                        whiptail --title "[SHIMMER] INX-MQTT - Plugins" --msgbox "The following plugins are disabled:\n$shimmerInxMqttDisablePlugins" 14 65
                    else
                        whiptail --title "[SHIMMER] INX-MQTT - Plugins" --msgbox "There are no plugins disabled for INX-MQTT!" 8 65
                    fi
                fi
            else
                unset shimmerInxMqttDisablePlugins
            fi
            unset useShimmerInxMqttDisablePlugins
        ;;
        "5)")
            source $swarmConfigs/shimmer-inx-mqtt.cfg
            if [ "$shimmerInxMqttUpdateCheck" = "true" ]; then
                shimmerInxMqttUpdateCheckStatus="enabled"
            else
                shimmerInxMqttUpdateCheckStatus="disabled"
            fi
            if (whiptail --title "[SHIMMER] INX-MQTT - Update Check" --yesno "Would you like to \"$shimmerInxMqttUpdateCheckStatus\" update check?" 8 65); then
                if [ "$shimmerInxMqttUpdateCheck" = "true" ]; then
                    shimmerInxMqttUpdateCheck=false
                else
                    shimmerInxMqttUpdateCheck=true
                fi
                source $shimmerInxMqttConfigParsers/shimmerInxMqttUpdateCheck
                sudo sed -i 's~^shimmerInxMqttUpdateCheck=.*~shimmerInxMqttUpdateCheck='$shimmerInxMqttUpdateCheck'~g' $swarmConfigs/shimmer-inx-mqtt.cfg
            fi
        ;;
    esac
done
sudo chown -R inx:inx $shimmerInxMqttHome/*.json
exitCode=0