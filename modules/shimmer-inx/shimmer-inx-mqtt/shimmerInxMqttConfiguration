#!/bin/bash
while [ $exitCode -lt 1 ]; do
    clear
    source $swarmConfigs/shimmer-inx-mqtt.cfg
    if [ "$shimmerInxMqttUpdateCheck" = "true" ]; then
        menuShimmerInxMqttUpdateCheck="disable"
    else
        menuShimmerInxMqttUpdateCheck="enable"
    fi
    source $shimmerInxMqttModule/shimmerInxMqttConfigs
    CHOICE=$(
        whiptail --title "INX-MQTT [SHIMMER] Configurations" --menu "\nChoose an option" 24 65 0 \
        "1)" "MQTT Settings" \
        "2)" "Set INX Address" \
        "3)" "[${menuShimmerInxMqttUpdateCheck^}] Update Check" 3>&2 2>&1 1>&3
    )

    exitstatus=$?
    if [ "$exitstatus" = "1" ]; then
        exitCode=1
        if [ "$restartShimmerInxMqtt" = "true" ] && [ -f "/usr/bin/shimmer-inx-mqtt" ]; then
            if (whiptail --title "INX-MQTT [SHIMMER] Menu" --yesno "Would you like to apply the changes and restart [Shimmer] INX-MQTT?" 8 65); then
                if [ ! -f "/tmp/shimmer-inx-mqtt.lock" ]; then
                    sudo touch /tmp/shimmer-inx-mqtt.lock > /dev/null 2>&1
                fi
                {
                    echo 0
                    echo 33
                    source $shimmerInxMqttModule/shimmerInxMqttParser
                    echo 50
                    sudo systemctl restart shimmer-inx-mqtt > /dev/null 2>&1
                    sleep 0.25
                    echo 100
                    sleep 0.25
                } | whiptail --gauge "Please wait while the changes are applied and [Shimmer] INX-MQTT is restarted..." 8 65 0
                unset restartShimmerInxMqtt
                if [ -f "/tmp/shimmer-inx-mqtt.lock" ]; then
                    sudo rm -rf /tmp/shimmer-inx-mqtt.lock > /dev/null 2>&1
                fi
            fi
        fi
    fi

    case $CHOICE in
        "1)")
            while [ $exitCode -lt 1 ]; do
                clear
                CHOICE=$(
                    whiptail --title "INX-MQTT [SHIMMER] MQTT Settings" --menu "\nChoose an option" 24 65 0 \
                    "1)" "Websocket Settings" \
                    "2)" "TCP Settings" 3>&2 2>&1 1>&3
                )
                exitstatus=$?
                if [ "$exitstatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        while [ $exitCode -lt 1 ]; do
                            clear
                            if [ "$shimmerInxMqttWebsocketEnabled" = "true" ]; then
                                menuShimmerInxMqttWebsocketEnabled="Disable"
                            else
                                menuShimmerInxMqttWebsocketEnabled="Enable"
                            fi
                            CHOICE=$(
                                whiptail --title "INX-MQTT [SHIMMER] Websocket" --menu "\nChoose an option" 24 65 0 \
                                "1)" "$menuShimmerInxMqttWebsocketEnabled Websocket" \
                                "2)" "Set Websocket Address" 3>&2 2>&1 1>&3
                            )
                            exitstatus=$?
                            if [ "$exitstatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    source $swarmConfigs/shimmer-inx-mqtt.cfg
                                    if [ "$shimmerInxMqttWebsocketEnabled" = "true" ]; then
                                        shimmerInxMqttWebsocketEnabledStatus="enabled"
                                    else
                                        shimmerInxMqttWebsocketEnabledStatus="disabled"
                                    fi
                                    if (whiptail --title "INX-MQTT [SHIMMER] Update Check" --yesno "Would you like to \"$shimmerInxMqttWebsocketEnabledStatus\" [Shimmer] INX-MQTT update check?" 8 65); then
                                        if [ "$shimmerInxMqttWebsocketEnabled" = "true" ]; then
                                            shimmerInxMqttWebsocketEnabled=false
                                        else
                                            shimmerInxMqttWebsocketEnabled=true
                                        fi
                                        source $shimmerInxMqttConfigParsers/shimmerInxMqttWebsocketEnabled
                                        sudo sed -i 's~^shimmerInxMqttWebsocketEnabled=.*~shimmerInxMqttWebsocketEnabled='$shimmerInxMqttWebsocketEnabled'~g' $swarmConfigs/shimmer-inx-mqtt.cfg
                                    fi
                                ;;
                                "2)")
                                    source $swarmConfigs/shimmer-inx-mqtt.cfg
                                    shimmerInxMqttWebsocketAddress=$(whiptail --inputbox "\nSet the address of the [Shimmer] INX-MQTT websocket interface" 10 65 $shimmerInxMqttWebsocketAddress --title "INX-MQTT [SHIMMER] Websocket Address" 3>&1 1>&2 2>&3)
                                    exitStatus=$?
                                    if [ $exitStatus != 1 ]; then
                                        if [ ! -z "$shimmerInxMqttWebsocketAddress" ] && [[ $shimmerInxMqttWebsocketAddress =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+:+[0-9]+|^localhost:[0-9]+$ ]]; then
                                            source $shimmerInxMqttConfigParsers/shimmerInxMqttWebsocketAddress
                                            if [ "$newShimmerInxMqttWebsocketAddress" = "true" ]; then
                                                sudo sed -i 's/^shimmerInxMqttWebsocketAddress=.*/shimmerInxMqttWebsocketAddress="'$shimmerInxMqttWebsocketAddress'"/' $swarmConfigs/shimmer-inx-mqtt.cfg
                                                whiptail --title "INX-MQTT [SHIMMER] Websocket Address" --msgbox "New [Shimmer] INX-MQTT websocket address \"$shimmerInxMqttWebsocketAddress\" applied!" 8 65
                                                unset newShimmerInxMqttWebsocketAddress
                                            else
                                                whiptail --title "INX-MQTT [SHIMMER] Websocket Address" --msgbox "No [Shimmer] INX-MQTT websocket address change detected." 8 65
                                            fi
                                        else
                                            whiptail --title "INX-MQTT [SHIMMER] Websocket Address" --msgbox "No valid [Shimmer] INX-MQTT websocket address, please try again." 8 65
                                        fi
                                    fi
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                    "2)")
                        while [ $exitCode -lt 1 ]; do
                            clear
                            if [ "$shimmerInxMqttTcpEnabled" = "true" ]; then
                                menuShimmerInxMqttTcpEnabled="Disable"
                            else
                                menuShimmerInxMqttTcpEnabled="Enable"
                            fi
                            CHOICE=$(
                                whiptail --title "INX-MQTT [SHIMMER] TCP" --menu "\nChoose an option" 24 65 0 \
                                "1)" "$menuShimmerInxMqttTcpEnabled TCP" \
                                "2)" "Set TCP Address" 3>&2 2>&1 1>&3
                            )
                            exitstatus=$?
                            if [ "$exitstatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    source $swarmConfigs/shimmer-inx-mqtt.cfg
                                    if [ "$shimmerInxMqttTcpEnabled" = "true" ]; then
                                        shimmerInxMqttTcpEnabledStatus="enabled"
                                    else
                                        shimmerInxMqttTcpEnabledStatus="disabled"
                                    fi
                                    if (whiptail --title "INX-MQTT [SHIMMER] TCP" --yesno "Would you like to \"$shimmerInxMqttTcpEnabledStatus\" [Shimmer] INX-MQTT tcp interface?" 8 65); then
                                        if [ "$shimmerInxMqttTcpEnabled" = "true" ]; then
                                            shimmerInxMqttTcpEnabled=false
                                        else
                                            shimmerInxMqttTcpEnabled=true
                                        fi
                                        source $shimmerInxMqttConfigParsers/shimmerInxMqttTcpEnabled
                                        sudo sed -i 's~^shimmerInxMqttTcpEnabled=.*~shimmerInxMqttTcpEnabled='$shimmerInxMqttTcpEnabled'~g' $swarmConfigs/shimmer-inx-mqtt.cfg
                                    fi
                                ;;
                                "2)")
                                    source $swarmConfigs/shimmer-inx-mqtt.cfg
                                    shimmerInxMqttTcpAddress=$(whiptail --inputbox "\nSet the address of the [Shimmer] INX-MQTT TCP interface" 10 65 $shimmerInxMqttTcpAddress --title "INX-MQTT [SHIMMER] TCP Address" 3>&1 1>&2 2>&3)
                                    exitStatus=$?
                                    if [ $exitStatus != 1 ]; then
                                        if [ ! -z "$shimmerInxMqttTcpAddress" ] && [[ $shimmerInxMqttTcpAddress =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+:+[0-9]+|^localhost:[0-9]+$ ]]; then
                                            source $shimmerInxMqttConfigParsers/shimmerInxMqttTcpAddress
                                            if [ "$newShimmerInxMqttTcpAddress" = "true" ]; then
                                                sudo sed -i 's/^shimmerInxMqttTcpAddress=.*/shimmerInxMqttTcpAddress="'$shimmerInxMqttTcpAddress'"/' $swarmConfigs/shimmer-inx-mqtt.cfg
                                                whiptail --title "INX-MQTT [SHIMMER] TCP Address" --msgbox "New [Shimmer] INX-MQTT TCP address \"$shimmerInxMqttTcpAddress\" applied!" 8 65
                                                unset newShimmerInxMqttTcpAddress
                                            else
                                                whiptail --title "INX-MQTT [SHIMMER] TCP Address" --msgbox "No [Shimmer] INX-mQTT TCP address change detected." 8 65
                                            fi
                                        else
                                            whiptail --title "INX-MQTT [SHIMMER] TCP Address" --msgbox "No valid [Shimmer] INX-MQTT TCP address, please try again." 8 65
                                        fi
                                    fi
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                esac
            done
            exitCode=0
        ;;
        "2)")
            source $swarmConfigs/shimmer-inx-mqtt.cfg
            shimmerInxMqttInxAddress=$(whiptail --inputbox "\nSet the address of the [Shimmer] INX interface" 10 65 $shimmerInxMqttInxAddress --title "INX-MQTT [SHIMMER] INX Address" 3>&1 1>&2 2>&3)
            exitStatus=$?
            if [ $exitStatus != 1 ]; then
                if [ ! -z "$shimmerInxMqttInxAddress" ] && [[ $shimmerInxMqttInxAddress =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+:+[0-9]+|^localhost:[0-9]+$ ]]; then
                    source $shimmerInxMqttConfigParsers/shimmerInxMqttInxAddress
                    if [ "$newShimmerInxMqttInxAddress" = "true" ]; then
                        sudo sed -i 's/^shimmerInxMqttInxAddress=.*/shimmerInxMqttInxAddress="'$shimmerInxMqttInxAddress'"/' $swarmConfigs/shimmer-inx-mqtt.cfg
                        whiptail --title "INX-MQTT [SHIMMER] INX Address" --msgbox "New [Shimmer] INX address \"$shimmerInxMqttInxAddress\" applied!" 8 65
                        unset newShimmerInxMqttInxAddress
                    else
                        whiptail --title "INX-MQTT [SHIMMER] INX Address" --msgbox "No [Shimmer] INX address change detected." 8 65
                    fi
                else
                    whiptail --title "INX-MQTT [SHIMMER] INX Address" --msgbox "No valid [Shimmer] INX address, please try again." 8 65
                fi
            fi
        ;;
        "3)")
            source $swarmConfigs/shimmer-inx-mqtt.cfg
            if [ "$shimmerInxMqttUpdateCheck" = "true" ]; then
                shimmerInxMqttUpdateCheckStatus="enabled"
            else
                shimmerInxMqttUpdateCheckStatus="disabled"
            fi
            if (whiptail --title "INX-MQTT [SHIMMER] Update Check" --yesno "Would you like to \"$shimmerInxMqttUpdateCheckStatus\" [Shimmer] INX-MQTT update check?" 8 65); then
                if [ "$shimmerInxMqttUpdateCheck" = "true" ]; then
                    shimmerInxMqttUpdateCheck=false
                else
                    shimmerInxMqttUpdateCheck=true
                fi
                source $shimmerInxMqttConfigParsers/shimmerInxMqttUpdateCheck
                sudo sed -i 's~^shimmerInxMqttUpdateCheck=.*~shimmerInxMqttUpdateCheck='$shimmerInxMqttUpdateCheck'~g' $swarmConfigs/shimmer-inx-mqtt.cfg
            fi
        ;;
    esac
done
sudo chown -R inx:inx $shimmerInxMqttHome/*.json
exitCode=0