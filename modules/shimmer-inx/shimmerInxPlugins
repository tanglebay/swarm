#!/bin/bash

# INX MANAGEMENT
while [ $exitCode -lt 1 ]; do
    clear
    CHOICE=$(
        whiptail --title "INX [SHIMMER] Plugins" --menu "\nChoose an option" 24 65 0 \
        "1)" "INX Plugins - Info" \
        "2)" "INX Plugins - Control" \
        "3)" "INX Plugins - Installer" 3>&2 2>&1 1>&3
    )
    exitstatus=$?
    if [ "$exitstatus" = "1" ]; then
        exitCode=1
    fi

    case $CHOICE in
        "1)")
            source $shimmerInxModule/shimmerInxInfo
        ;;
        "2)")
            # INX Control
            while [ $exitCode -lt 1 ]; do
                unset shimmerInxPluginList shimmerInxPlugin
                clear
                CHOICE=$(
                    whiptail --title "INX [SHIMMER] Plugins" --menu "\nChoose an option" 24 65 0 \
                    "1)" "Restart INX Plugins" \
                    "2)" "Start INX Plugins" \
                    "3)" "Stop INX Plugins" 3>&2 2>&1 1>&3
                )
                exitstatus=$?
                if [ "$exitstatus" = "1" ]; then
                    exitCode=1
                fi

                case $CHOICE in
                    "1)")
                        shimmerInxPluginList=$(whiptail --title "INX [SHIMMER] Plugins" --checklist "\nSelect (spacebar) INX plugins you want to restart." 24 65 5 \
                            "Dashboard" "" OFF \
                            "Indexer" "" OFF \
                            "MQTT" "" OFF \
                            "Participation" "" OFF \
                            "POI" "" OFF 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ "$exitStatus" != "1" ] && [ ! -z "$shimmerInxPluginList" ]; then
                            shimmerInxPluginList=$(echo $shimmerInxPluginList | tr '[:upper:]' '[:lower:]' | tr -d '"')
                            {
                                whiptailGaugeNumber=10
                                echo 0
                                echo 10
                                for shimmerInxPlugin in ${shimmerInxPluginList[@]}
                                do
                                    if [ -f "/usr/bin/shimmer-inx-$shimmerInxPlugin" ]; then
                                        if [ ! -f "/tmp/shimmer-inx-$shimmerInxPlugin.lock" ]; then
                                            sudo touch /tmp/shimmer-inx-$shimmerInxPlugin.lock > /dev/null 2>&1
                                        fi
                                        sudo systemctl restart shimmer-inx-$shimmerInxPlugin > /dev/null 2>&1
                                        let whiptailGaugeNumber=$whiptailGaugeNumber+10
                                        echo $whiptailGaugeNumber
                                        if [ -f "/tmp/shimmer-inx-$shimmerInxPlugin.lock" ]; then
                                            sudo rm -rf /tmp/shimmer-inx-$shimmerInxPlugin.lock > /dev/null 2>&1
                                        fi
                                    fi
                                done
                                echo 100
                                sleep 0.5
                                unset whiptailGaugeNumber
                            } | whiptail --gauge "Please wait while all selected [Shimmer] INX plugins are restarted..." 8 65 0
                            whiptail --title "INX [SHIMMER] Plugins" --msgbox "Restart of all selected [Shimmer] INX plugins completed." 8 65
                        fi
                        unset shimmerInxPluginList shimmerInxPlugin
                    ;;
                    "2)")
                        shimmerInxPluginList=$(whiptail --title "INX [SHIMMER] Plugins" --checklist "\nSelect (spacebar) [Shimmer] INX plugins you want to start." 24 65 5 \
                            "Dashboard" "" OFF \
                            "Indexer" "" OFF \
                            "MQTT" "" OFF \
                            "Participation" "" OFF \
                            "POI" "" OFF 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ "$exitStatus" != "1" ] && [ ! -z "$shimmerInxPluginList" ]; then
                            shimmerInxPluginList=$(echo $shimmerInxPluginList | tr '[:upper:]' '[:lower:]' | tr -d '"')
                            {
                                whiptailGaugeNumber=10
                                echo 0
                                echo 10
                                for shimmerInxPlugin in ${shimmerInxPluginList[@]}
                                do
                                    if [ -f "/usr/bin/shimmer-inx-$shimmerInxPlugin" ]; then
                                        sudo systemctl start shimmer-inx-$shimmerInxPlugin > /dev/null 2>&1
                                        let whiptailGaugeNumber=$whiptailGaugeNumber+10
                                        echo $whiptailGaugeNumber
                                        if [ -f "/tmp/shimmer-inx-$shimmerInxPlugin.lock" ]; then
                                            sudo rm -rf /tmp/shimmer-inx-$shimmerInxPlugin.lock > /dev/null 2>&1
                                        fi
                                    fi
                                done
                                echo 100
                                sleep 0.5
                                unset whiptailGaugeNumber
                            } | whiptail --gauge "Please wait while all selected [Shimmer] INX plugins are started..." 8 65 0
                            whiptail --title "INX [SHIMMER] Plugins" --msgbox "Start of all selected [Shimmer] INX plugins completed." 8 65
                        fi
                        unset shimmerInxPluginList shimmerInxPlugin
                    ;;
                    "3)")
                        shimmerInxPluginList=$(whiptail --title "INX [SHIMMER] Plugins" --checklist "\nSelect (spacebar) [Shimmer] INX plugins you want to stop." 24 65 5 \
                            "Dashboard" "" OFF \
                            "Indexer" "" OFF \
                            "MQTT" "" OFF \
                            "Participation" "" OFF \
                            "POI" "" OFF 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ "$exitStatus" != "1" ] && [ ! -z "$shimmerInxPluginList" ]; then
                            shimmerInxPluginList=$(echo $shimmerInxPluginList | tr '[:upper:]' '[:lower:]' | tr -d '"')
                            {
                                whiptailGaugeNumber=10
                                echo 0
                                echo 10
                                for shimmerInxPlugin in ${shimmerInxPluginList[@]}
                                do
                                    if [ -f "/usr/bin/shimmer-inx-$shimmerInxPlugin" ]; then
                                        if [ ! -f "/tmp/shimmer-inx-$shimmerInxPlugin.lock" ]; then
                                            sudo touch /tmp/shimmer-inx-$shimmerInxPlugin.lock > /dev/null 2>&1
                                        fi
                                        sudo systemctl stop shimmer-inx-$shimmerInxPlugin > /dev/null 2>&1
                                        let whiptailGaugeNumber=$whiptailGaugeNumber+10
                                        echo $whiptailGaugeNumber
                                    fi
                                done
                                echo 100
                                sleep 0.5
                                unset whiptailGaugeNumber
                            } | whiptail --gauge "Please wait while all selected [Shimmer] INX plugins are stopped..." 8 65 0
                            whiptail --title "INX [SHIMMER] Plugins" --msgbox "Stop of all selected [Shimmer] INX plugins completed." 8 65
                        fi
                        unset shimmerInxPluginList shimmerInxPlugin
                    ;;
                esac
            done
            exitCode=0
        ;;
        "3)")
            # INX Installer
            while [ $exitCode -lt 1 ]; do
                unset shimmerInxPluginList shimmerInxPlugin
                clear
                CHOICE=$(
                    whiptail --title "INX [SHIMMER] Plugins" --menu "\nChoose an option" 24 65 0 \
                    "1)" "Update INX Plugins" \
                    "2)" "Install INX Plugins" \
                    "3)" "Remove INX Plugins" 3>&2 2>&1 1>&3
                )
                exitstatus=$?
                if [ "$exitstatus" = "1" ]; then
                    exitCode=1
                fi

                case $CHOICE in
                    "1)")
                        shimmerInxPluginList=$(whiptail --title "INX [SHIMMER] Plugins" --checklist "\nSelect (spacebar) [Shimmer] INX plugins you want to update." 24 65 5 \
                            "Dashboard" "" OFF \
                            "Indexer" "" OFF \
                            "MQTT" "" OFF \
                            "Participation" "" OFF \
                            "POI" "" OFF 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ "$exitStatus" != "1" ] && [ ! -z "$shimmerInxPluginList" ]; then
                            shimmerInxPluginList=$(echo $shimmerInxPluginList | tr '[:upper:]' '[:lower:]' | tr -d '"')
                            {
                                whiptailGaugeNumber=10
                                echo 0
                                echo 10
                                for shimmerInxPlugin in ${shimmerInxPluginList[@]}
                                do
                                    if [ -f "/usr/bin/shimmer-inx-$shimmerInxPlugin" ]; then
                                        if [ ! -f "/tmp/shimmer-inx-$shimmerInxPlugin.lock" ]; then
                                            sudo touch /tmp/shimmer-inx-$shimmerInxPlugin.lock > /dev/null 2>&1
                                        fi
                                        source $swarmConfigs/shimmer-inx-$shimmerInxPlugin.cfg
                                        source $shimmerInxModule/shimmer-inx-$shimmerInxPlugin/shimmerInx${shimmerInxPlugin^}Version
                                        source $shimmerInxModule/shimmer-inx-$shimmerInxPlugin/shimmerInx${shimmerInxPlugin^}Installer
                                        source $shimmerInxModule/shimmer-inx-$shimmerInxPlugin/shimmerInx${shimmerInxPlugin^}Parser
                                        sudo systemctl restart shimmer-inx-$shimmerInxPlugin > /dev/null 2>&1
                                        let whiptailGaugeNumber=$whiptailGaugeNumber+10
                                        echo $whiptailGaugeNumber
                                        if [ -f "/tmp/shimmer-inx-$shimmerInxPlugin.lock" ]; then
                                            sudo rm -rf /tmp/shimmer-inx-$shimmerInxPlugin.lock > /dev/null 2>&1
                                        fi
                                    fi
                                done
                                echo 100
                                sleep 0.5
                                unset whiptailGaugeNumber
                            } | whiptail --gauge "Please wait while all selected [Shimmer] INX plugins are updated..." 8 65 0
                            whiptail --title "INX [SHIMMER] Plugins" --msgbox "Update of all selected [Shimmer] INX plugins completed." 8 65
                        fi
                    ;;
                    "2)")
                        shimmerInxPluginList=$(whiptail --title "INX [SHIMMER] Plugins" --checklist "\nSelect (spacebar) [Shimmer] INX plugins you want to install." 24 65 5 \
                            "Dashboard" "" OFF \
                            "Indexer" "" OFF \
                            "MQTT" "" OFF \
                            "Participation" "" OFF \
                            "POI" "" OFF 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ "$exitStatus" != "1" ] && [ ! -z "$shimmerInxPluginList" ]; then
                            shimmerInxPluginList=$(echo $shimmerInxPluginList | tr '[:upper:]' '[:lower:]' | tr -d '"')
                            {
                                whiptailGaugeNumber=10
                                echo 0
                                echo 10
                                for shimmerInxPlugin in ${shimmerInxPluginList[@]}
                                do
                                    if [ ! -f "/usr/bin/shimmer-inx-$shimmerInxPlugin" ]; then
                                        if [ ! -f "/tmp/shimmer-inx-$shimmerInxPlugin.lock" ]; then
                                            sudo touch /tmp/shimmer-inx-$shimmerInxPlugin.lock > /dev/null 2>&1
                                        fi
                                        source $swarmConfigs/shimmer-inx-$shimmerInxPlugin.cfg
                                        source $shimmerInxModule/shimmer-inx-$shimmerInxPlugin/shimmerInx${shimmerInxPlugin^}Version
                                        source $shimmerInxModule/shimmer-inx-$shimmerInxPlugin/shimmerInx${shimmerInxPlugin^}Installer
                                        source $shimmerInxModule/shimmer-inx-$shimmerInxPlugin/shimmerInx${shimmerInxPlugin^}Parser
                                        sudo systemctl start shimmer-inx-$shimmerInxPlugin > /dev/null 2>&1
                                        let whiptailGaugeNumber=$whiptailGaugeNumber+10
                                        echo $whiptailGaugeNumber
                                        if [ -f "/tmp/shimmer-inx-$shimmerInxPlugin.lock" ]; then
                                            sudo rm -rf /tmp/shimmer-inx-$shimmerInxPlugin.lock > /dev/null 2>&1
                                        fi
                                    fi
                                done
                                echo 100
                                sleep 0.5
                                unset whiptailGaugeNumber
                            } | whiptail --gauge "Please wait while all selected [Shimmer] INX plugins are installed..." 8 65 0
                            if [[ $shimmerInxPluginList = *dashboard* ]]; then
                                if (whiptail --title "Proxy [SHIMMER] INX-Dashboard" --yesno --defaultno "Before you change the settings, are you sure you want to separate the [Shimmer] INX dashboard from the Hornet (Shimmer) proxy endpoint (its own subdomain or port)?\n\nAre you sure you want to continue?" 16 65); then
                                    source $swarmConfigs/proxy.cfg
                                    if [ "$proxyShimmerInxDashboardEnabled" = "false" ]; then
                                        proxyShimmerInxDashboardEnabled=true
                                        sudo sed -i 's/^proxyShimmerInxDashboardEnabled=.*/proxyShimmerInxDashboardEnabled='$proxyShimmerInxDashboardEnabled'/' $swarmConfigs/proxy.cfg
                                    fi
                                    if [ -z "$proxyShimmerInxDashboardUrl" ]; then
                                        proxyUrl="example.com:443"
                                        proxyUrl=$(whiptail --inputbox "\nSet your domain and port for [Shimmer] INX-Dashboard" 10 65 $proxyUrl --title "Proxy [SHIMMER] INX-Dashboard" 3>&1 1>&2 2>&3)
                                        exitStatus=$?
                                        if [ "$proxyUrl" = "my.example.com:443" ]; then
                                            unset proxyUrl
                                        fi
                                        if [ "$exitStatus" != "1" ]; then
                                            source $proxyModule/proxyUrlValidation
                                            if [ "$proxyUrlValid" = "true" ]; then
                                                proxyShimmerInxDashboardUrl=$proxyUrl
                                                sudo sed -i 's/^proxyShimmerInxDashboardUrl=.*/proxyShimmerInxDashboardUrl="'$proxyUrl'"/' $swarmConfigs/proxy.cfg
                                                source $proxyModule/proxyDeployment
                                            fi
                                        fi
                                        unset proxyUrl proxyUrlValid
                                    else
                                        proxyUrl=$proxyShimmerInxDashboardUrl
                                        source $proxyModule/proxyUrlValidation
                                        if [ "$proxyUrlValid" = "true" ]; then
                                            source $proxyModule/proxyDeployment
                                        fi
                                        unset proxyUrl proxyUrlValid
                                    fi
                                else
                                    source $proxyModule/proxyShimmerInxDashboard
                                fi
                            fi
                            if (whiptail --title "INX [SHIMMER] Plugins" --yesno --defaultno "Do you want to make the API routes public for all [Shimmer] INX plugins?" 8 65); then
                                for shimmerInxPlugin in ${shimmerInxPluginList[@]}
                                do
                                    if [ -f "/usr/bin/shimmer-inx-indexer" ] && [ "$shimmerInxPlugin" = "indexer" ]; then
                                        source $shimmerInxIndexerModule/shimmerInxIndexerApiRoutes
                                    fi
                                    if [ -f "/usr/bin/shimmer-inx-mqtt" ] && [ "$shimmerInxPlugin" = "mqtt" ]; then
                                        source $shimmerInxMqttModule/shimmerInxMqttApiRoutes
                                    fi
                                    if [ -f "/usr/bin/shimmer-inx-participation" ] && [ "$shimmerInxPlugin" = "participation" ]; then
                                        source $shimmerInxParticipationModule/shimmerInxParticipationApiRoutes
                                    fi
                                    if [ -f "/usr/bin/shimmer-inx-poi" ] && [ "$shimmerInxPlugin" = "poi" ]; then
                                        source $shimmerInxPoiModule/shimmerInxPoiApiRoutes
                                    fi
                                done
                                unset shimmerInxPlugin
                            fi
                            whiptail --title "INX [SHIMMER] Plugins" --msgbox "Installation of all selected [Shimmer] INX plugins completed." 8 65
                        fi
                    ;;
                    "3)")
                        shimmerInxPluginList=$(whiptail --title "INX [SHIMMER] Plugins" --checklist "\nSelect (spacebar) [Shimmer] INX plugins you want to remove." 24 65 5 \
                            "Dashboard" "" OFF \
                            "Indexer" "" OFF \
                            "MQTT" "" OFF \
                            "Participation" "" OFF \
                            "POI" "" OFF 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ "$exitStatus" != "1" ] && [ ! -z "$shimmerInxPluginList" ]; then
                            shimmerInxPluginList=$(echo $shimmerInxPluginList | tr '[:upper:]' '[:lower:]' | tr -d '"')
                            if (whiptail --title "INX [SHIMMER] Installer" --yesno --defaultno "Do you really want to remove selected [Shimmer] INX plugins?" 8 65); then
                                {
                                    whiptailGaugeNumber=10
                                    echo 0
                                    echo 10
                                    for shimmerInxPlugin in ${shimmerInxPluginList[@]}
                                    do
                                        if [ -f "/usr/bin/shimmer-inx-$shimmerInxPlugin" ]; then
                                            source $swarmConfigs/shimmer-inx-$shimmerInxPlugin.cfg
                                            source $shimmerInxModule/shimmer-inx-$shimmerInxPlugin/shimmerInx${shimmerInxPlugin^}Removal
                                            let whiptailGaugeNumber=$whiptailGaugeNumber+10
                                            echo $whiptailGaugeNumber
                                        fi
                                    done
                                    echo 100
                                    sleep 0.5
                                    unset whiptailGaugeNumber
                                } | whiptail --gauge "Please wait while all selected [Shimmer] INX plugins are removed..." 8 65 0
                                whiptail --title "INX [SHIMMER] Plugins" --msgbox "Removal of all selected [Shimmer] INX plugins completed." 8 65
                            fi
                        fi
                    ;;
                esac
            done
            exitCode=0
        ;;
    esac
done
exitCode=0
