#!/bin/bash
while [ $exitCode -lt 1 ]; do
    clear
    source $swarmConfigs/shimmer-inx-indexer.cfg
    if [ "$shimmerInxIndexerUpdateCheck" = "true" ]; then
        menuShimmerInxIndexerUpdateCheck="disable"
    else
        menuShimmerInxIndexerUpdateCheck="enable"
    fi
    source $shimmerInxIndexerModule/shimmerInxIndexerConfigs
    CHOICE=$(
        whiptail --title "INX-Indexer [SHIMMER] Configurations" --menu "\nChoose an option" 24 65 0 \
        "" "" \
        "1)" "API Routes" \
        "2)" "[${menuShimmerInxIndexerUpdateCheck^}] Update Check" 3>&2 2>&1 1>&3
    )

    exitstatus=$?
    if [ "$exitstatus" = "1" ]; then
        exitCode=1
        if [ "$restartShimmerInxIndexer" = "true" ] && [ -f "/usr/bin/shimmer-inx-indexer" ]; then
            if (whiptail --title "INX-Indexer [SHIMMER] Menu" --yesno "Would you like to apply the changes and restart [Shimmer] INX-Indexer?" 8 65); then
                if [ ! -f "/tmp/shimmer-inx-indexer.lock" ]; then
                    sudo touch /tmp/shimmer-inx-indexer.lock > /dev/null 2>&1
                fi
                {
                    echo 0
                    echo 33
                    source $shimmerInxIndexerModule/shimmerInxIndexerParser
                    echo 50
                    sudo systemctl restart shimmer-inx-indexer > /dev/null 2>&1
                    sleep 0.25
                    echo 100
                    sleep 0.25
                } | whiptail --gauge "Please wait while the changes are applied and [Shimmer] INX-Indexer is restarted..." 8 65 0
                unset restartShimmerInxIndexer
                if [ -f "/tmp/shimmer-inx-indexer.lock" ]; then
                    sudo rm -rf /tmp/shimmer-inx-indexer.lock > /dev/null 2>&1
                fi
            fi
        fi
    fi

    case $CHOICE in
        "1)")
            source $swarmConfigs/shimmer-inx-indexer.cfg
            shimmerInxIndexerApiRoutes=$shimmerInxIndexerApiPublicRoutes
            source $shimmerInxIndexerModule/shimmerInxIndexerApiRoutes
            shimmerInxIndexerApiRoutes=$(whiptail --title "INX-Indexer [SHIMMER] API routes" --checklist "\nSelect which API routes should not be public(*):" 24 65 1 \
                "/api/indexer/v1/*" "" $shimmerInxIndexerApiRoutesIndexer 3>&1 1>&2 2>&3)
            exitStatus=$?
            shimmerInxIndexerApiRoutes=$(echo $shimmerInxIndexerApiRoutes | tr '[:upper:]' '[:lower:]' | tr -s '[:blank:]' ',' | tr -d '"')
            if [ "$exitStatus" != "1" ]; then
                shimmerInxIndexerUpdateApiRoutes=true
                source $shimmerInxIndexerModule/shimmerInxIndexerApiRoutes
                if [ "$shimmerInxIndexerApiPublicRoutesUpdated" = "true" ]; then
                    whiptail --title "INX-Indexer [SHIMMER] API Routes" --msgbox "New config for API routes saved (requires restart of Hornet)." 8 65
                fi
                unset shimmerInxIndexerUpdateApiRoutes shimmerInxIndexerApiPublicRoutesUpdated
            fi
            unset shimmerInxIndexerApiRoutes
        ;;
        "2)")
            source $swarmConfigs/shimmer-inx-indexer.cfg
            if [ "$shimmerInxIndexerUpdateCheck" = "true" ]; then
                shimmerInxIndexerUpdateCheckStatus="enabled"
            else
                shimmerInxIndexerUpdateCheckStatus="disabled"
            fi
            if (whiptail --title "INX-Indexer [SHIMMER] Update Check" --yesno "Would you like to \"$shimmerInxIndexerUpdateCheckStatus\" [Shimmer] INX-Indexer update check?" 8 65); then
                if [ "$shimmerInxIndexerUpdateCheck" = "true" ]; then
                    shimmerInxIndexerUpdateCheck=false
                else
                    shimmerInxIndexerUpdateCheck=true
                fi
                source $shimmerInxIndexerConfigParsers/shimmerInxIndexerUpdateCheck
                sudo sed -i 's~^shimmerInxIndexerUpdateCheck=.*~shimmerInxIndexerUpdateCheck='$shimmerInxIndexerUpdateCheck'~g' $swarmConfigs/shimmer-inx-indexer.cfg
            fi
        ;;
    esac
done
sudo chown -R inx:inx $shimmerInxIndexerHome/*.json
exitCode=0