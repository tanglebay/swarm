#!/bin/bash
while [ $exitCode -lt 1 ]; do
    clear
    source $swarmConfigs/shimmer-inx-dashboard.cfg
    if [ "$shimmerInxDashboardUpdateCheck" = "true" ]; then
        menuShimmerInxDashboardUpdateCheck="Disable"
    else
        menuShimmerInxDashboardUpdateCheck="Enable"
    fi
    source $shimmerInxDashboardModules/shimmerInxDashboardConfigs
    CHOICE=$(
        whiptail --title "INX-Dashboard [SHIMMER] Configurations" --menu "\nChoose an option" 24 65 0 \
        "1)" "INX Address" \
        "2)" "Enable Plugins" \
        "3)" "Disable Plugins" \
        "4)" "$menuShimmerInxDashboardUpdateCheck update check" 3>&2 2>&1 1>&3
    )

    exitstatus=$?
    if [ "$exitstatus" = "1" ]; then
        exitCode=1
        if [ "$restartShimmerInxDashboard" = "true" ] && [ -f "/usr/bin/shimmer-inx-dashboard" ]; then
            if (whiptail --title "INX-Dashboard [SHIMMER] Menu" --yesno "Would you like to apply the changes and restart INX-Dashboard?" 8 65); then
                {
                    echo 0
                    echo 33
                    source $shimmerInxDashboardModules/shimmerInxDashboardParser
                    echo 50
                    sudo systemctl restart shimmer-inx-dashboard > /dev/null 2>&1
                    sleep 0.25
                    echo 100
                    sleep 0.25
                } | whiptail --gauge "Please wait while the changes are applied and INX-Dashboard is restarted..." 8 65 0
                unset restartShimmerInxDashboard
            fi
        fi
    fi

    case $CHOICE in
        "1)")
            source $swarmConfigs/shimmer-inx-dashboard.cfg
            shimmerInxDashboardInxAddress=$(whiptail --inputbox "\nSet the address of the INX interface" 10 65 $shimmerInxDashboardInxAddress --title "INX-Dashboard [SHIMMER] INX Address" 3>&1 1>&2 2>&3)
            exitStatus=$?
            if [ $exitStatus != 1 ]; then
                if [ ! -z "$shimmerInxDashboardInxAddress" ] && [[ $shimmerInxDashboardInxAddress =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+:+[0-9]+|^localhost:[0-9]+$ ]]; then
                    source $shimmerInxDashboardConfigParsers/shimmerInxDashboardInxAddress
                    if [ "$newInxDashboardInxAddress" = "true" ]; then
                        sudo sed -i 's/^shimmerInxDashboardInxAddress=.*/shimmerInxDashboardInxAddress="'$shimmerInxDashboardInxAddress'"/' $swarmConfigs/shimmer-inx-dashboard.cfg
                        whiptail --title "INX-Dashboard [SHIMMER] INX Address" --msgbox "New INX address \"$shimmerInxDashboardInxAddress\" applied!" 8 65
                        unset newShimmerInxDashboardInxAddress
                    else
                        whiptail --title "INX-Dashboard [SHIMMER] INX Address" --msgbox "No INX address change detected." 8 65
                    fi
                else
                    whiptail --title "INX-Dashboard [SHIMMER] INX Address" --msgbox "No valid INX address, please try again." 8 65
                fi
            fi
        ;;
        "2)")
            useShimmerInxDashboardEnablePlugins=true
            source $swarmConfigs/shimmer-inx-dashboard.cfg
            currentShimmerInxDashboardEnablePlugins=$shimmerInxDashboardEnablePlugins
            source $shimmerInxDashboardModules/shimmerInxDashboardPlugins
            shimmerInxDashboardEnablePlugins=$(whiptail --title "INX-Dashboard [SHIMMER] Plugins" --checklist "\nSelect (with spacebar) the INX-Dashboard plugins to be activated:" 24 65 1 \
                "Prometheus" "plugin for metrics (e.g. Grafana)" $shimmerInxDashboardPluginPrometheus 3>&1 1>&2 2>&3)
            exitStatus=$?
            shimmerInxDashboardEnablePlugins=$(echo $shimmerInxDashboardEnablePlugins | tr '[:upper:]' '[:lower:]' | tr -s '[:blank:]' ',' | tr -d '"')
            if [ -z "$shimmerInxDashboardEnablePlugins" ] || [[ $shimmerInxDashboardEnablePlugins = *prometheus* ]]; then
                if [ "$shimmerInxDashboardEnablePlugins" != "$currentShimmerInxDashboardEnablePlugins" ] && [ "$exitStatus" != "1" ]; then
                    if [ -f "/usr/bin/shimmer-inx-dashboard" ]; then
                        source $shimmerInxDashboardConfigParsers/shimmerInxDashboardEnablePlugins
                    fi
                    sudo sed -i 's/^shimmerInxDashboardEnablePlugins=.*/shimmerInxDashboardEnablePlugins="'$shimmerInxDashboardEnablePlugins'"/' $swarmConfigs/shimmer-inx-dashboard.cfg
                    if [ ! -z "$shimmerInxDashboardEnablePlugins" ]; then
                        whiptail --title "INX-Dashboard [SHIMMER] Plugins" --msgbox "The following plugins are enabled:\n$shimmerInxDashboardEnablePlugins" 14 65
                    else
                        whiptail --title "INX-Dashboard [SHIMMER] Plugins" --msgbox "There are no plugins enabled for INX-Dashboard." 8 65
                    fi
                fi
                unset shimmerInxDashboardEnablePlugins
            fi
            unset useShimmerInxDashboardEnablePlugins
        ;;
        "3)")
            useShimmerInxDashboardDisablePlugins=true
            source $swarmConfigs/shimmer-inx-dashboard.cfg
            currentShimmerInxDashboardDisablePlugins=$shimmerInxDashboardDisablePlugins
            source $shimmerInxDashboardModules/shimmerInxDashboardPlugins
            shimmerInxDashboardDisablePlugins=$(whiptail --title "INX-Dashboard [SHIMMER] Plugins" --checklist "\nSelect (with spacebar) the INX-Dashboard plugins to be deactivated:" 24 65 1 \
                "Prometheus" "plugin for metrics (e.g. Grafana)" $shimmerInxDashboardPluginPrometheus 3>&1 1>&2 2>&3)
            exitStatus=$?
            shimmerInxDashboardDisablePlugins=$(echo $shimmerInxDashboardDisablePlugins | tr '[:upper:]' '[:lower:]' | tr -s '[:blank:]' ',' | tr -d '"')
            if [ -z "$shimmerInxDashboardDisablePlugins" ] || [[ $shimmerInxDashboardDisablePlugins = *warpsync* ]]; then
                if [ "$shimmerInxDashboardDisablePlugins" != "$currentShimmerInxDashboardDisablePlugins" ] && [ "$exitStatus" != "1" ]; then
                    if [ -f "/usr/bin/shimmer-inx-dashboard" ]; then
                        source $shimmerInxDashboardConfigParsers/shimmerInxDashboardDisablePlugins
                    fi
                    sudo sed -i 's/^shimmerInxDashboardDisablePlugins=.*/shimmerInxDashboardDisablePlugins="'$shimmerInxDashboardDisablePlugins'"/' $swarmConfigs/shimmer-inx-dashboard.cfg
                    if [ ! -z "$shimmerInxDashboardDisablePlugins" ]; then
                        whiptail --title "INX-Dashboard [SHIMMER] Plugins" --msgbox "The following plugins are disabled:\n$shimmerInxDashboardDisablePlugins" 14 65
                    else
                        whiptail --title "INX-Dashboard [SHIMMER] Plugins" --msgbox "There are no plugins disabled for INX-Dashboard." 8 65
                    fi
                fi
            else
                unset shimmerInxDashboardDisablePlugins
            fi
            unset useShimmerInxDashboardDisablePlugins
        ;;
        "4)")
            source $swarmConfigs/shimmer-inx-dashboard.cfg
            if [ "$shimmerInxDashboardUpdateCheck" = "true" ]; then
                shimmerInxDashboardUpdateCheckStatus="enabled"
            else
                shimmerInxDashboardUpdateCheckStatus="disabled"
            fi
            if (whiptail --title "INX-Dashboard [SHIMMER] Update Check" --yesno "Would you like to \"$shimmerInxDashboardUpdateCheckStatus\" update check?" 8 65); then
                if [ "$shimmerInxDashboardUpdateCheck" = "true" ]; then
                    shimmerInxDashboardUpdateCheck=false
                else
                    shimmerInxDashboardUpdateCheck=true
                fi
                source $shimmerInxDashboardConfigParsers/shimmerInxDashboardUpdateCheck
                sudo sed -i 's~^shimmerInxDashboardUpdateCheck=.*~shimmerInxDashboardUpdateCheck='$shimmerInxDashboardUpdateCheck'~g' $swarmConfigs/shimmer-inx-dashboard.cfg
            fi
        ;;
    esac
done
sudo chown -R inx:inx $shimmerInxDashboardHome/*.json
exitCode=0