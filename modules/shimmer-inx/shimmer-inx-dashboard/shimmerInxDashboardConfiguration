#!/bin/bash
while [ $exitCode -lt 1 ]; do
    clear
    source $swarmConfigs/shimmer-inx-dashboard.cfg
    if [ "$shimmerInxDashboardUpdateCheck" = "true" ]; then
        menuShimmerInxDashboardUpdateCheck="Disable"
    else
        menuShimmerInxDashboardUpdateCheck="Enable"
    fi
    source $shimmerInxDashboardModules/shimmerInxDashboardConfigs
    CHOICE=$(
        whiptail --title "INX-Dashboard [SHIMMER] Configurations" --menu "\nChoose an option" 24 65 0 \
        "1)" "Dashboard Auth" \
        "2)" "INX Address" \
        "3)" "$menuShimmerInxDashboardUpdateCheck update check" 3>&2 2>&1 1>&3
    )

    exitstatus=$?
    if [ "$exitstatus" = "1" ]; then
        exitCode=1
        if [ "$restartShimmerInxDashboard" = "true" ] && [ -f "/usr/bin/shimmer-inx-dashboard" ]; then
            if (whiptail --title "INX-Dashboard [SHIMMER] Menu" --yesno "Would you like to apply the changes and restart INX-Dashboard?" 8 65); then
                {
                    echo 0
                    echo 33
                    source $shimmerInxDashboardModules/shimmerInxDashboardParser
                    echo 50
                    sudo systemctl restart shimmer-inx-dashboard > /dev/null 2>&1
                    sleep 0.25
                    echo 100
                    sleep 0.25
                } | whiptail --gauge "Please wait while the changes are applied and INX-Dashboard is restarted..." 8 65 0
                unset restartShimmerInxDashboard
            fi
        fi
    fi

    case $CHOICE in
        "1)")
            while [ $exitCode -lt 1 ]; do
                clear
                source $swarmConfigs/shimmer-inx-dashboard.cfg
                # Hornet Dashboard
                CHOICE=$(
                    whiptail --title "INX-Dashboard [SHIMMER] Auth" --menu "\nChoose an option" 24 65 0 \
                    "1)" "Dashboard Username" \
                    "2)" "Dashboard Password" 3>&2 2>&1 1>&3
                )
                exitstatus=$?
                if [ "$exitstatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        shimmerInxDashboardAuthUsername=$(whiptail --inputbox "\nDefine a username for the dashboard login" 10 65 $shimmerInxDashboardAuthUsername --title "INX-Dashboard [SHIMMER] Auth" 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ $exitStatus != 1 ]; then
                            if [ ! -z "$shimmerInxDashboardAuthUsername" ]; then
                                sudo sed -i 's/^shimmerInxDashboardAuthUsername=.*/shimmerInxDashboardAuthUsername="'$shimmerInxDashboardAuthUsername'"/' $swarmConfigs/shimmer-inx-dashboard.cfg
                                if [ -f "/usr/bin/shimmer-inx-dashboard" ]; then
                                    source $shimmerInxDashboardConfigParsers/shimmerInxDashboardAuthUsername
                                    if [ "$newShimmerInxDashboardAuthUsername" = "true" ]; then
                                        unset newShimmerInxDashboardAuthUsername
                                    else
                                        whiptail --title "INX-Dashboard [SHIMMER] Auth" --msgbox "No username change detected." 8 65
                                    fi
                                fi
                                whiptail --title "INX-Dashboard [SHIMMER] Auth" --msgbox "New username \"$shimmerInxDashboardAuthUsername\" applied." 8 65
                            else
                                whiptail --title "INX-Dashboard [SHIMMER] Auth" --msgbox "No valid username, please try again." 8 65
                            fi
                        fi
                    ;;
                    "2)")
                        shimmerInxDashboardHornetPwdGen=true
                        if [ -f "/usr/bin/shimmer-hornet" ]; then
                            source $shimmerInxDashboardModules/shimmerInxDashboardPwdGen
                        else
                            whiptail --title "INX-Dashboard [SHIMMER] Auth" --msgbox "No installation of [SHIMMER] Hornet was found." 8 65
                        fi
                        unset shimmerInxDashboardHornetPwdGen
                    ;;
                esac
            done
            exitCode=0
        ;;
        "2)")
            source $swarmConfigs/shimmer-inx-dashboard.cfg
            shimmerInxDashboardInxAddress=$(whiptail --inputbox "\nSet the address of the INX interface" 10 65 $shimmerInxDashboardInxAddress --title "INX-Dashboard [SHIMMER] INX Address" 3>&1 1>&2 2>&3)
            exitStatus=$?
            if [ $exitStatus != 1 ]; then
                if [ ! -z "$shimmerInxDashboardInxAddress" ] && [[ $shimmerInxDashboardInxAddress =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+:+[0-9]+|^localhost:[0-9]+$ ]]; then
                    source $shimmerInxDashboardConfigParsers/shimmerInxDashboardInxAddress
                    if [ "$newShimmerInxDashboardInxAddress" = "true" ]; then
                        sudo sed -i 's/^shimmerInxDashboardInxAddress=.*/shimmerInxDashboardInxAddress="'$shimmerInxDashboardInxAddress'"/' $swarmConfigs/shimmer-inx-dashboard.cfg
                        whiptail --title "INX-Dashboard [SHIMMER] INX Address" --msgbox "New INX address \"$shimmerInxDashboardInxAddress\" applied!" 8 65
                        unset newShimmerInxDashboardInxAddress
                    else
                        whiptail --title "INX-Dashboard [SHIMMER] INX Address" --msgbox "No INX address change detected." 8 65
                    fi
                else
                    whiptail --title "INX-Dashboard [SHIMMER] INX Address" --msgbox "No valid INX address, please try again." 8 65
                fi
            fi
        ;;
        "3)")
            source $swarmConfigs/shimmer-inx-dashboard.cfg
            if [ "$shimmerInxDashboardUpdateCheck" = "true" ]; then
                shimmerInxDashboardUpdateCheckStatus="enabled"
            else
                shimmerInxDashboardUpdateCheckStatus="disabled"
            fi
            if (whiptail --title "INX-Dashboard [SHIMMER] Update Check" --yesno "Would you like to \"$shimmerInxDashboardUpdateCheckStatus\" update check?" 8 65); then
                if [ "$shimmerInxDashboardUpdateCheck" = "true" ]; then
                    shimmerInxDashboardUpdateCheck=false
                else
                    shimmerInxDashboardUpdateCheck=true
                fi
                source $shimmerInxDashboardConfigParsers/shimmerInxDashboardUpdateCheck
                sudo sed -i 's~^shimmerInxDashboardUpdateCheck=.*~shimmerInxDashboardUpdateCheck='$shimmerInxDashboardUpdateCheck'~g' $swarmConfigs/shimmer-inx-dashboard.cfg
            fi
        ;;
    esac
done
sudo chown -R inx:inx $shimmerInxDashboardHome/*.json
exitCode=0