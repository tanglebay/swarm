#!/bin/bash

echo "Starting installation of Shimmer-Inx-Dashboard" > /tmp/shimmerInxDashboardInstaller.log
# General
if ! id inx >/dev/null 2>&1; then
    echo "-> Create user \"inx\"" >> /tmp/shimmerInxDashboardInstaller.log
    useradd --no-create-home --system inx >/dev/null
fi

if [ ! -d "$shimmerInxDashboardHome" ]; then
    echo "-> Create \"$shimmerInxDashboardHome\"" >> /tmp/shimmerInxDashboardInstaller.log
    sudo mkdir -p $shimmerInxDashboardHome > /dev/null 2>&1
    sudo chown -R inx:inx $shimmerInxDashboardHome > /dev/null 2>&1
fi

# Install GO
if ! [ -x "$(command -v go)" ] > /dev/null 2>&1; then
    echo "-> Install go via snap" >> /tmp/shimmerInxDashboardInstaller.log
    sudo snap install go --classic > /dev/null 2>&1
fi

# Create Service
if [ ! -f "/lib/systemd/system/shimmer-inx-dashboard.service" ]; then
    sudo cp -rf $swarmTemplates/app-service/shimmer-inx-dashboard.service /lib/systemd/system/shimmer-inx-dashboard.service > /dev/null 2>&1
    echo "-> Copy service file from templates" >> /tmp/shimmerInxDashboardInstaller.log
    if [ ! -f "/etc/default/shimmer-inx-dashboard" ]; then
        echo "-> Create options file for service" >> /tmp/shimmerInxDashboardInstaller.log
        echo "OPTIONS=\"--config config.json\"" > /etc/default/shimmer-inx-dashboard
    fi
    if [ ! -f "/etc/systemd/system/multi-user.target.wants/shimmer-inx-dashboard.service" ]; then
        echo "-> Enable service for Shimmer-Inx-Dashboard" >> /tmp/shimmerInxDashboardInstaller.log
        sudo systemctl enable shimmer-inx-dashboard > /dev/null 2>&1
    fi
    sudo systemctl daemon-reload > /dev/null 2>&1
fi

##############################################################################################################################################
echo "" >> /tmp/shimmerInxDashboardInstaller.log

# Create dir if not exist
echo "-> Create TMP folder" >> /tmp/shimmerInxDashboardInstaller.log
sudo mkdir -p /tmp/shimmer-inx-dashboard > /dev/null 2>&1

# Download latest inx-dashboard
echo "-> Download binary/config archive for v${latestShimmerInxDashboardVersion}" >> /tmp/shimmerInxDashboardInstaller.log
( cd /tmp/shimmer-inx-dashboard/ ; sudo wget -q https://$cdnUrl/apps/inx/inx-dashboard/v${latestShimmerInxDashboardVersion}/inx-dashboard-v${latestShimmerInxDashboardVersion}_linux_$osArchitecture.tar.gz )
if [ -f "/tmp/shimmer-inx-dashboard/inx-dashboard-v${latestShimmerInxDashboardVersion}_linux_$osArchitecture.tar.gz" ]; then
    shimmerInxDashboardDownloadChecksum=$(sudo shasum -a 512 /tmp/shimmer-inx-dashboard/inx-dashboard-v${latestShimmerInxDashboardVersion}_linux_$osArchitecture.tar.gz | awk '{ print $1 }')
    echo "-> Generate local chksum of downloaded archive \"$shimmerInxDashboardDownloadChecksum\"" >> /tmp/shimmerInxDashboardInstaller.log
fi

# Download checksum
echo "-> Download remote checksum" >> /tmp/shimmerInxDashboardInstaller.log
( cd /tmp/shimmer-inx-dashboard/ ; sudo wget -q https://$cdnUrl/apps/inx/inx-dashboard/v${latestShimmerInxDashboardVersion}/inx-dashboard_checksums_linux_$osArchitecture.txt )
shimmerInxDashboardChecksum=$(sudo grep "inx-dashboard-v${latestShimmerInxDashboardVersion}_linux_$osArchitecture.tar.gz" /tmp/shimmer-inx-dashboard/inx-dashboard_checksums_linux_$osArchitecture.txt | awk '{ print $1 }')
echo $shimmerInxDashboardChecksum > /tmp/shimmer-inx-dashboard.checksum
echo "-> Get remote checksum \"$shimmerInxDashboardChecksum\"" >> /tmp/shimmerInxDashboardInstaller.log

# Unzip archive
if [ "$shimmerInxDashboardDownloadChecksum" = "$shimmerInxDashboardChecksum" ] && [ ! -z "$shimmerInxDashboardDownloadChecksum" ] && [ ! -z "$shimmerInxDashboardChecksum" ]; then
    echo "-> Unzip downloaded archive" >> /tmp/shimmerInxDashboardInstaller.log
    ( cd /tmp/shimmer-inx-dashboard ; sudo tar -xzf /tmp/shimmer-inx-dashboard/inx-dashboard-v${latestShimmerInxDashboardVersion}_linux_$osArchitecture.tar.gz ) > /dev/null 2>&1

    # Copy binary
    if [ -f "/tmp/shimmer-inx-dashboard/inx-dashboard" ]; then
        shimmerInxDashboardStatus="$(systemctl show -p ActiveState --value shimmer-inx-dashboard)"
        if [ "$shimmerInxDashboardStatus" = "active" ]; then
            echo "-> Stop Shimmer-Inx-Dashboard service" >> /tmp/shimmerInxDashboardInstaller.log
            sudo systemctl stop shimmer-inx-dashboard > /dev/null 2>&1
        fi
        echo "-> Copy new binary to \"/usr/bin/shimmer-inx-dashboard\"" >> /tmp/shimmerInxDashboardInstaller.log
        sudo cp -rf /tmp/shimmer-inx-dashboard/inx-dashboard /usr/bin/shimmer-inx-dashboard > /dev/null 2>&1
        sudo chmod +x /usr/bin/shimmer-inx-dashboard > /dev/null 2>&1
        newShimmerInxDashboardBinary=true
    fi
fi

##############################################################################################################################################

if [ "$newShimmerInxDashboardBinary" = "true" ]; then
    if [ -f "/tmp/shimmer-inx-dashboard/config_defaults.json" ]; then
        echo "-> Copy new config_defaults.json file to \"/var/lib/shimmer-inx-dashboard/config.json\"" >> /tmp/shimmerInxDashboardInstaller.log
        sudo cp -rf /tmp/shimmer-inx-dashboard/config_defaults.json /var/lib/shimmer-inx-dashboard/config.json > /dev/null 2>&1
        sudo chmod 644 /var/lib/shimmer-inx-dashboard/*.json > /dev/null 2>&1
        newShimmerInxDashboardConfig=true
    else
        if [ -f "/tmp/inx-dashboard/config.json" ]; then
            echo "-> Copy new config.json file to \"/var/lib/shimmer-inx-dashboard/config.json\"" >> /tmp/shimmerInxDashboardInstaller.log
            sudo cp -rf /tmp/shimmer-inx-dashboard/config.json /var/lib/shimmer-inx-dashboard/config.json > /dev/null 2>&1
            sudo chmod 644 /var/lib/shimmer-inx-dashboard/*.json > /dev/null 2>&1
            newShimmerInxDashboardConfig=true
        fi
    fi
fi

##############################################################################################################################################

if [ "$newShimmerInxDashboardConfig" = "true" ]; then
    # Run installer modules
    echo "-> Set permissions for \"$shimmerInxDashboardHome\"" >> /tmp/shimmerInxDashboardInstaller.log
    sudo chown -R inx:inx $shimmerInxDashboardHome > /dev/null 2>&1
    sudo chmod 644 $shimmerInxDashboardHome/*.json > /dev/null 2>&1

    restartShimmerInxDashboard=true
    shimmerInxDashboardUpdated=true
    echo "-> Run proxy module for Shimmer-Inx-Dashboard" >> /tmp/shimmerInxDashboardInstaller.log
    source $proxyModule/proxyShimmerInxDashboard
fi

# Remove temporary files
echo "-> Remove tmp folder" >> /tmp/shimmerInxDashboardInstaller.log
sudo rm -rf /tmp/shimmer-inx-dashboard > /dev/null 2>&1

echo "Installation finished!" >> /tmp/shimmerInxDashboardInstaller.log
unset newShimmerInxDashboardBinary newShimmerInxDashboardConfig shimmerInxDashboardDownloadChecksum