#!/bin/bash

source $swarmConfigs/iota-hornet.cfg
source $swarmConfigs/proxy.cfg
source $proxyModules/proxyParser

if [ "$killall" = "true" ]; then
    sudo killall -s SIGKILL iota-hornet > /dev/null 2>&1
else
    sudo systemctl stop iota-hornet > /dev/null 2>&1
fi

getHornetInstallations=$(ls /usr/bin/ | grep hornet)
if [ -z "$getHornetInstallations" ]; then
    if id hornet >/dev/null 2>&1; then
        sudo deluser hornet >/dev/null
    fi
fi

sudo systemctl disable iota-hornet > /dev/null 2>&1

sudo rm -rf /usr/bin/iota-hornet /var/lib/iota-hornet /lib/systemd/system/iota-hornet.service /etc/default/iota-hornet > /dev/null 2>&1

sudo systemctl daemon-reload > /dev/null 2>&1

if [ "$ufw" = "true" ]; then
    sudo ufw delete allow $iotaHornetGossipPort/tcp > /dev/null 2>&1
    sudo ufw delete allow $iotaHornetAutopeeringPort/udp > /dev/null 2>&1
fi

getInxInstallations=$(ls /usr/bin/ | grep inx-)
if [ -z "$getHornetInstallations" ] && [ -z "$getInxInstallations" ] && [ ! -f "/usr/bin/goshimmer" ] && [ ! -f "/usr/bin/wasp" ]; then
    sudo snap remove go > /dev/null 2>&1
fi

if [ -f "/etc/nginx/sites-enabled/iota-hornet" ]; then
    if [ "$ufw" = "true" ]; then
        if [ "$proxyIotaHornetPort" != "$proxyShimmerHornetPort" ] && [ "$proxyIotaHornetPort" != "$proxyIotaBeePort" ] && [ "$proxyIotaHornetPort" != "$proxyShimmerBeePort" ] && [ "$proxyIotaHornetPort" != "$proxyGoshimmerPort" ] && [ "$proxyIotaHornetPort" != "$proxyWaspDashboardPort" ] && [ "$proxyIotaHornetPort" != "$proxyWaspApiPort" ]; then
            sudo ufw delete allow $proxyHornetPort/tcp > /dev/null 2>&1
        fi
    fi
    sudo sed -i 's/^proxyIotaHornetUrl=.*/proxyIotaHornetUrl=""/' $swarmConfigs/proxy.cfg
    sudo rm -rf /etc/nginx/sites-enabled/iota-hornet > /dev/null 2>&1
    sudo systemctl reload nginx
fi
