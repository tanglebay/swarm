#!/bin/bash

# General
if ! id inx >/dev/null 2>&1; then
    useradd --no-create-home --system inx >/dev/null
fi

if [ ! -d "$iotaInxIndexerHome" ]; then
    sudo mkdir -p $iotaInxIndexerHome > /dev/null 2>&1
    sudo chown -R inx:inx $iotaInxIndexerHome > /dev/null 2>&1
fi

# Install GO
if ! [ -x "$(command -v go)" ] > /dev/null 2>&1; then
    sudo snap install go --classic > /dev/null 2>&1
fi

# Create Service
if [ ! -f "/lib/systemd/system/iota-inx-indexer.service" ]; then
    sudo cp -rf $swarmTemplates/app-service/iota-inx-indexer.service /lib/systemd/system/iota-inx-indexer.service > /dev/null 2>&1
    if [ ! -f "/etc/default/iota-inx-indexer" ]; then
        echo "OPTIONS=\"--config config.json\"" > /etc/default/iota-inx-indexer
    fi
    if [ ! -f "/etc/systemd/system/multi-user.target.wants/iota-inx-indexer.service" ]; then
        sudo systemctl enable iota-inx-indexer > /dev/null 2>&1
    fi
    sudo systemctl daemon-reload > /dev/null 2>&1
fi

##############################################################################################################################################

source $swarmModule/swarmAuth
if [ "$swarmAuth" = "200" ]; then
    # Create dir if not exist
    sudo mkdir -p /tmp/iota-inx-indexer > /dev/null 2>&1

    # Download latest inx-indexer
    ( cd /tmp/iota-inx-indexer/ ; sudo wget -q https://$swarmAuthUser:$swarmAuthPwd@$cdnUrl/inx/inx-indexer/v${latestIotaInxIndexerVersion}/inx-indexer-v${latestIotaInxIndexerVersion}_linux_$osArchitecture.tar.gz )
    if [ -f "/tmp/iota-inx-indexer/inx-indexer-v${latestIotaInxIndexerVersion}_linux_$osArchitecture.tar.gz" ]; then
        iotaInxIndexerDownloadChecksum=$(sudo shasum -a 512 /tmp/iota-inx-indexer/inx-indexer-v${latestIotaInxIndexerVersion}_linux_$osArchitecture.tar.gz | awk '{ print $1 }')
    fi

    # Download checksum
    ( cd /tmp/iota-inx-indexer/ ; sudo wget -q https://$swarmAuthUser:$swarmAuthPwd@$cdnUrl/inx/inx-indexer/v${latestIotaInxIndexerVersion}/checksums_linux_$osArchitecture.txt )
    iotaInxIndexerChecksum=$(sudo grep "inx-indexer-v${latestIotaInxIndexerVersion}_linux_$osArchitecture.tar.gz" /tmp/iota-inx-indexer/checksums_linux_$osArchitecture.txt | awk '{ print $1 }')
    echo $iotaInxIndexerChecksum > /tmp/iota-inx-indexer.checksum

    # Unzip archive
    if [ "$iotaInxIndexerDownloadChecksum" = "$iotaInxIndexerChecksum" ] && [ ! -z "$iotaInxIndexerDownloadChecksum" ] && [ ! -z "$iotaInxIndexerChecksum" ]; then
        ( cd /tmp/iota-inx-indexer ; sudo tar -xzf /tmp/iota-inx-indexer/inx-indexer-v${latestIotaInxIndexerVersion}_linux_$osArchitecture.tar.gz ) > /dev/null 2>&1

        # Copy binary
        if [ -f "/tmp/iota-inx-indexer/inx-indexer" ]; then
            iotaInxIndexerStatus="$(systemctl show -p ActiveState --value iota-inx-indexer)"
            if [ "$iotaInxIndexerStatus" = "active" ]; then
                sudo systemctl stop iota-inx-indexer > /dev/null 2>&1
            fi

            sudo cp -rf /tmp/iota-inx-indexer/inx-indexer /usr/bin/iota-inx-indexer > /dev/null 2>&1
            sudo chmod +x /usr/bin/iota-inx-indexer > /dev/null 2>&1
            newIotaInxIndexerBinary=true
        fi
    fi
fi

##############################################################################################################################################

if [ "$newIotaInxIndexerBinary" = "true" ]; then
    if [ -f "/tmp/iota-inx-indexer/config_defaults.json" ]; then
        sudo cp -rf /tmp/iota-inx-indexer/config_defaults.json /var/lib/iota-inx-indexer/config.json > /dev/null 2>&1
        sudo chmod 644 /var/lib/iota-inx-indexer/*.json > /dev/null 2>&1
        newIotaInxIndexerConfig=true
    else
        if [ -f "/tmp/inx-indexer/config.json" ]; then
            sudo cp -rf /tmp/iota-inx-indexer/config.json /var/lib/iota-inx-indexer/config.json > /dev/null 2>&1
            sudo chmod 644 /var/lib/iota-inx-indexer/*.json > /dev/null 2>&1
            newIotaInxIndexerConfig=true
        fi
    fi
fi

##############################################################################################################################################

if [ "$newIotaInxIndexerConfig" = "true" ]; then
    # Run installer modules
    sudo chown -R inx:inx $iotaInxIndexerHome > /dev/null 2>&1
    sudo chmod 644 $iotaInxIndexerHome/*.json > /dev/null 2>&1

    restartIotaInxIndexer=true
    iotaInxIndexerUpdated=true

    source $proxyModule/proxyIotaInxMqtt
fi

# Remove temporary files
sudo rm -rf /tmp/iota-inx-indexer > /dev/null 2>&1


unset newIotaInxIndexerBinary newIotaInxIndexerConfig iotaInxIndexerDownloadChecksum