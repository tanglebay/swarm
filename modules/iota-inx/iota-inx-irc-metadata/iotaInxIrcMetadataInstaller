#!/bin/bash

echo "SHIMMER INX INSTALLER" > /tmp/iotaInxIrcMetadataInstaller.log

# General
if ! id inx >/dev/null 2>&1; then
    useradd --no-create-home --system inx >/dev/null
    echo "-> Added INX user" >> /tmp/iotaInxIrcMetadataInstaller.log
fi

if [ ! -d "$iotaInxIrcMetadataHome" ]; then
    sudo mkdir -p $iotaInxIrcMetadataHome > /dev/null 2>&1
    sudo chown -R inx:inx $iotaInxIrcMetadataHome > /dev/null 2>&1
    echo "-> Created INX-IRC-Metadata folder" >> /tmp/iotaInxIrcMetadataInstaller.log
fi

# Install GO
if ! [ -x "$(command -v go)" ] > /dev/null 2>&1; then
    sudo snap install go --classic > /dev/null 2>&1
    echo "-> Installed go via snap" >> /tmp/iotaInxIrcMetadataInstaller.log
fi

# Create Service
if [ ! -f "/lib/systemd/system/iota-inx-irc-metadata.service" ]; then
    sudo cp -rf $swarmTemplates/app-service/iota-inx-irc-metadata.service /lib/systemd/system/iota-inx-irc-metadata.service > /dev/null 2>&1
    if [ ! -f "/etc/default/iota-inx-irc-metadata" ]; then
        echo "OPTIONS=\"--config config.json\"" > /etc/default/iota-inx-irc-metadata
    fi
    if [ ! -f "/etc/systemd/system/multi-user.target.wants/iota-inx-irc-metadata.service" ]; then
        sudo systemctl enable iota-inx-irc-metadata > /dev/null 2>&1
    fi
    sudo systemctl daemon-reload > /dev/null 2>&1
    echo "-> Register service for INX-IRC-Metadata" >> /tmp/iotaInxIrcMetadataInstaller.log
fi

##############################################################################################################################################

# Create dir if not exist
sudo mkdir -p /tmp/iota-inx-irc-metadata > /dev/null 2>&1
echo "-> Created tmp folder for INX-IRC-Metadata" >> /tmp/iotaInxIrcMetadataInstaller.log

# Download latest inx-irc-metadata
( cd /tmp/iota-inx-irc-metadata/ ; sudo wget -q https://$cdnUrl/apps/inx/inx-irc-metadata/v${latestIotaInxIrcMetadataVersion}/inx-irc-metadata-v${latestIotaInxIrcMetadataVersion}_linux_$osArchitecture.tar.gz )
echo "-> Downloading \"inx-irc-metadata-v${latestIotaInxIrcMetadataVersion}_linux_$osArchitecture.tar.gz\"" >> /tmp/iotaInxIrcMetadataInstaller.log
if [ -f "/tmp/iota-inx-irc-metadata/inx-irc-metadata-v${latestIotaInxIrcMetadataVersion}_linux_$osArchitecture.tar.gz" ]; then
    iotaInxIrcMetadataDownloadChecksum=$(sudo shasum -a 512 /tmp/iota-inx-irc-metadata/inx-irc-metadata-v${latestIotaInxIrcMetadataVersion}_linux_$osArchitecture.tar.gz | awk '{ print $1 }')
    echo "-> Calculated SHA512 hash of the downloaded tar.gz file: $iotaInxIrcMetadataDownloadChecksum" >> /tmp/iotaInxIrcMetadataInstaller.log

    # Download checksum
    ( cd /tmp/iota-inx-irc-metadata/ ; sudo wget -q https://$cdnUrl/apps/inx/inx-irc-metadata/v${latestIotaInxIrcMetadataVersion}/inx-irc-metadata_checksums_linux_$osArchitecture.txt )
    echo "-> Downloading remote checksum of the tar.gz file" >> /tmp/iotaInxIrcMetadataInstaller.log
    if [ -f "/tmp/iota-inx-irc-metadata/inx-irc-metadata_checksums_linux_$osArchitecture.txt" ]; then
        iotaInxIrcMetadataChecksum=$(sudo grep "inx-irc-metadata-v${latestIotaInxIrcMetadataVersion}_linux_$osArchitecture.tar.gz" /tmp/iota-inx-irc-metadata/inx-irc-metadata_checksums_linux_$osArchitecture.txt | awk '{ print $1 }')
        echo $iotaInxIrcMetadataChecksum > /tmp/iota-inx-irc-metadata.checksum
        echo "-> Remote SHA512 hash of the downloaded tar.gz file: $iotaInxIrcMetadataChecksum" >> /tmp/iotaInxIrcMetadataInstaller.log

        # Unzip archive
        if [ "$iotaInxIrcMetadataDownloadChecksum" = "$iotaInxIrcMetadataChecksum" ] && [ ! -z "$iotaInxIrcMetadataDownloadChecksum" ] && [ ! -z "$iotaInxIrcMetadataChecksum" ]; then
            ( cd /tmp/iota-inx-irc-metadata ; sudo tar -xzf /tmp/iota-inx-irc-metadata/inx-irc-metadata-v${latestIotaInxIrcMetadataVersion}_linux_$osArchitecture.tar.gz ) > /dev/null 2>&1
            echo "-> Unzip downloaded tar.gz file" >> /tmp/iotaInxIrcMetadataInstaller.log
            # Copy binary
            if [ -f "/tmp/iota-inx-irc-metadata/inx-irc-metadata" ]; then
                iotaInxIrcMetadataStatus="$(systemctl show -p ActiveState --value iota-inx-irc-metadata)"
                if [ "$iotaInxIrcMetadataStatus" = "active" ]; then
                    sudo systemctl stop iota-inx-irc-metadata > /dev/null 2>&1
                    echo "-> Stopped running service of INX-IRC-Metadata" >> /tmp/iotaInxIrcMetadataInstaller.log
                fi

                sudo cp -rf /tmp/iota-inx-irc-metadata/inx-irc-metadata /usr/bin/iota-inx-irc-metadata > /dev/null 2>&1
                sudo chmod +x /usr/bin/iota-inx-irc-metadata > /dev/null 2>&1
                newIotaInxIrcMetadataBinary=true
                echo "-> Copied new files to target folder and set permissions" >> /tmp/iotaInxIrcMetadataInstaller.log
            fi
        fi
    else
        echo "-> ERROR - Failed downloading \"inx-irc-metadata_checksums_linux_$osArchitecture.txt\"" >> /tmp/iotaInxIrcMetadataInstaller.log
    fi
else
    echo "-> ERROR - Failed downloading \"inx-irc-metadata-v${latestIotaInxIrcMetadataVersion}_linux_$osArchitecture.tar.gz\"" >> /tmp/iotaInxIrcMetadataInstaller.log
fi

##############################################################################################################################################

if [ "$newIotaInxIrcMetadataBinary" = "true" ]; then
    if [ -f "/tmp/iota-inx-irc-metadata/config_defaults.json" ]; then
        sudo cp -rf /tmp/iota-inx-irc-metadata/config_defaults.json /var/lib/iota-inx-irc-metadata/config.json > /dev/null 2>&1
        sudo chmod 644 /var/lib/iota-inx-irc-metadata/*.json > /dev/null 2>&1
        newIotaInxIrcMetadataConfig=true
    else
        if [ -f "/tmp/inx-irc-metadata/config.json" ]; then
            sudo cp -rf /tmp/iota-inx-irc-metadata/config.json /var/lib/iota-inx-irc-metadata/config.json > /dev/null 2>&1
            sudo chmod 644 /var/lib/iota-inx-irc-metadata/*.json > /dev/null 2>&1
            newIotaInxIrcMetadataConfig=true
        fi
    fi
    echo "-> Copied new config file" >> /tmp/iotaInxIrcMetadataInstaller.log
fi

##############################################################################################################################################

if [ "$newIotaInxIrcMetadataConfig" = "true" ]; then
    # Run installer modules
    sudo chown -R inx:inx $iotaInxIrcMetadataHome > /dev/null 2>&1
    sudo chmod 644 $iotaInxIrcMetadataHome/*.json > /dev/null 2>&1

    restartIotaInxIrcMetadata=true
    iotaInxIrcMetadataUpdated=true
    echo "-> Installation of INX-IRC-Metadata finished" >> /tmp/iotaInxIrcMetadataInstaller.log
fi

# Remove temporary files
sudo rm -rf /tmp/iota-inx-irc-metadata > /dev/null 2>&1
echo "-> Remove tmp folder of INX-IRC-Metadata" >> /tmp/iotaInxIrcMetadataInstaller.log

unset newIotaInxIrcMetadataBinary newIotaInxIrcMetadataConfig iotaInxIrcMetadataDownloadChecksum