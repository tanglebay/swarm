#!/bin/bash

while [ $exitCode -lt 1 ]; do
    source $swarmConfigs/iota-inx-irc-metadata.cfg
    clear
    CHOICE=$(
        whiptail --title "INX [IOTA] IRC-Metadata" --menu "\nChoose an option" 24 65 0 \
        "" "" \
        "1)" "INX-IRC-Metadata Info" \
        "2)" "INX-IRC-Metadata Tools" \
        "3)" "INX-IRC-Metadata Configuration" \
        "4)" "INX-IRC-Metadata Management" \
        "5)" "INX-IRC-Metadata Installer" 3>&2 2>&1 1>&3
    )

    exitstatus=$?
    if [ "$exitstatus" = "1" ]; then
        exitCode=1
    fi

    case $CHOICE in
        "1)")
            source $iotaInxIrcMetadataModule/iotaInxIrcMetadataInfo
        ;;
        "2)")
            while [ $exitCode -lt 1 ]; do
                CHOICE=$(
                    whiptail --title "INX-IRC-Metadata [IOTA] Tools" --menu "\nChoose your option" 24 65 0 \
                    "" "" \
                    "1)" "Validate Poi" \
                    "2)" "Create PoI" \
                    "3)" "View Last Created PoI" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        if [ -f "/usr/bin/iota-inx-irc-metadata" ]; then
                            if (whiptail --title "INX-IRC-Metadata [IOTA] Tools" --yesno --defaultno "In the following file, please insert the proof of inclusion to be validated. Do you want to continue?" 8 65); then
                                if [ ! -f "/tmp/iota-inx-irc-metadata-validate.json" ]; then
                                    sudo touch /tmp/iota-inx-irc-metadata-validate.json > /dev/null 2>&1
                                fi
                                sudo $swarmCLEditor /tmp/iota-inx-irc-metadata-validate.json
                                iotaInxIrcMetadataValidateData=$(cat /tmp/iota-inx-irc-metadata-validate.json)
                                if jq -e . >/dev/null 2>&1 <<<"$iotaInxIrcMetadataValidateData"; then
                                    source $swarmConfigs/iota-hornet.cfg
                                    iotaInxIrcMetadataValidateResult=$(curl -s -X POST "localhost:14266/api/plugins/poi/validate" -H "accept: application/json" -H "Content-Type: application/json" -H "Authorization: Bearer ${iotaHornetApiJwtToken}" -d "$iotaInxIrcMetadataValidateData")
                                    if [[ $iotaInxIrcMetadataValidateResult = *\"valid\":*true* ]]; then
                                        iotaInxIrcMetadataValidateResult="valid"
                                    else
                                        iotaInxIrcMetadataValidateResult="invalid"
                                    fi
                                    whiptail --title "INX-IRC-Metadata [IOTA] Tools" --msgbox "The validated poi is $iotaInxIrcMetadataValidateResult." 8 65
                                    unset iotaInxIrcMetadataValidateResult
                                else
                                    whiptail --title "INX-IRC-Metadata [IOTA] Tools" --msgbox "PoI validation aborted because content is not valid json data." 8 65
                                fi
                                echo "" > /tmp/iota-inx-irc-metadata-validate.json
                                unset iotaInxIrcMetadataValidateData
                            fi
                        else
                            whiptail --title "INX-IRC-Metadata [IOTA] Tools" --msgbox "Please install [IOTA] INX-IRC-Metadata plugin first." 8 65
                        fi
                    ;;
                    "2)")
                        if [ -f "/usr/bin/iota-inx-irc-metadata" ]; then
                            iotaInxIrcMetadataCreateId=$(whiptail --inputbox "\nPlease enter the message id of which you want to create a poi" 10 65 --title "INX-IRC-Metadata [IOTA] Tools" 3>&1 1>&2 2>&3)
                            exitStatus=$?
                            if [ $exitStatus != 1 ] && [ ! -z "$iotaInxIrcMetadataCreateId" ]; then
                                source $swarmConfigs/iota-hornet.cfg
                                iotaInxIrcMetadataCreateResult=$(sudo curl -s "localhost:14266/api/poi/v1/create/$iotaInxIrcMetadataCreateId" -H "accept: application/json" -H "Content-Type: application/json" -H "Authorization: Bearer ${iotaHornetApiJwtToken}")
                                if [[ $iotaInxIrcMetadataCreateResult = *code* ]]; then
                                    if [[ $iotaInxIrcMetadataCreateResult = *400* ]]; then
                                        whiptail --title "INX-IRC-Metadata [IOTA] Tools" --msgbox "PoI creation aborted because invalid data provided (400)." 8 65
                                    fi
                                    if [[ $iotaInxIrcMetadataCreateResult = *403* ]]; then
                                        whiptail --title "INX-IRC-Metadata [IOTA] Tools" --msgbox "PoI creation aborted because not available for public use (403)." 8 65
                                    fi
                                    if [[ $iotaInxIrcMetadataCreateResult = *404* ]]; then
                                        whiptail --title "INX-IRC-Metadata [IOTA] Tools" --msgbox "PoI creation aborted because could not find data (404)." 8 65
                                    fi
                                    if [[ $iotaInxIrcMetadataCreateResult = *500* ]]; then
                                        whiptail --title "INX-IRC-Metadata [IOTA] Tools" --msgbox "PoI creation aborted because internal server error (500)." 8 65
                                    fi
                                else
                                    echo $iotaInxIrcMetadataCreateResult | jq -r '.data' > /tmp/iota-inx-irc-metadata-create.json
                                    if [ -s "/tmp/iota-inx-irc-metadata-create.json" ]; then
                                        clear
                                        sudo cat /tmp/iota-inx-irc-metadata-create.json |jq
                                        echo ""
                                        echo ""
                                        read -n 1 -s -r -p "Press any key to continue"
                                        clear
                                    else
                                        whiptail --title "INX-IRC-Metadata [IOTA] Tools" --msgbox "Aborted - PoI creation file is empty." 8 65
                                    fi
                                fi
                            fi
                        else
                            whiptail --title "INX-IRC-Metadata [IOTA] Tools" --msgbox "Please install [IOTA] INX-IRC-Metadata plugin first." 8 65
                        fi
                    ;;
                    "3)")
                        if [ -f "/usr/bin/iota-inx-irc-metadata" ]; then
                            if [ -s "/tmp/iota-inx-irc-metadata-create.json" ]; then
                                clear
                                sudo cat /tmp/iota-inx-irc-metadata-create.json |jq
                                echo ""
                                echo ""
                                read -n 1 -s -r -p "Press any key to continue"
                                clear
                            else
                                whiptail --title "INX-IRC-Metadata [IOTA] Tools" --msgbox "Aborted - PoI creation file is empty." 8 65
                            fi
                        else
                            whiptail --title "INX-IRC-Metadata [IOTA] Tools" --msgbox "Please install [IOTA] INX-IRC-Metadata plugin first." 8 65
                        fi
                    ;;
                esac
            done
            exitCode=0
        ;;
        "3)")
            while [ $exitCode -lt 1 ]; do
                clear
                CHOICE=$(
                    whiptail --title "INX-IRC-Metadata [IOTA] Configuration" --menu "\nChoose an option" 24 65 0 \
                    "" "" \
                    "1)" "INX-IRC-Metadata Configuration" \
                    "2)" "Advanced Configuration" 3>&2 2>&1 1>&3
                )

                exitstatus=$?
                if [ "$exitstatus" = "1" ]; then
                    exitCode=1
                fi

                case $CHOICE in
                    "1)")
                        source $iotaInxIrcMetadataModule/iotaInxIrcMetadataConfiguration
                    ;;
                    "2)")
                        while [ $exitCode -lt 1 ]; do
                            clear
                            CHOICE=$(
                                whiptail --title "INX-IRC-Metadata [IOTA] Configuration" --menu "\nChoose an option" 24 65 0 \
                                "" "" \
                                "1)" "Config.json" \
                                "2)" "Iota-INX-IRC-Metadata.cfg (SWARM)" 3>&2 2>&1 1>&3
                            )

                            exitstatus=$?
                            if [ "$exitstatus" = "1" ]; then
                                exitCode=1
                            fi

                            case $CHOICE in
                                "1)")
                                    if [ -f "$iotaInxIrcMetadataHome/config.json" ]; then
                                        sudo $swarmCLEditor $iotaInxIrcMetadataHome/config.json
                                        if (whiptail --title "INX-IRC-Metadata [IOTA] Configuration" --yesno --defaultno "Would you like to restart [Iota] INX-IRC-Metadata now?" 8 65); then
                                            if [ ! -f "/tmp/iota-inx-irc-metadata.lock" ]; then
                                                sudo touch /tmp/iota-inx-$iotaInxPlugin.lock > /dev/null 2>&1
                                            fi
                                            {
                                                echo 0
                                                echo 50
                                                sudo systemctl restart iota-inx-irc-metadata > /dev/null 2>&1
                                                echo 100
                                                sleep 0.25
                                            } | whiptail --gauge "Please wait while INX-IRC-Metadata is restarting..." 8 65 0
                                            if [ -f "/tmp/iota-inx-irc-metadata.lock" ]; then
                                                sudo rm -rf /tmp/iota-inx-irc-metadata.lock > /dev/null 2>&1
                                            fi
                                        fi
                                    else
                                        whiptail --title "INX-IRC-Metadata [IOTA] Configuration" --msgbox "[Iota] INX-IRC-Metadata is not installed." 8 65
                                    fi
                                ;;
                                "2)")
                                    sudo $swarmCLEditor $swarmConfigs/iota-inx-irc-metadata.cfg
                                    if [ -f "/usr/bin/iota-inx-irc-metadata" ]; then
                                        if (whiptail --title "INX-IRC-Metadata [IOTA] Configuration" --yesno --defaultno "Would you like to restart [Iota] INX-IRC-Metadata now?" 8 65); then
                                            if [ ! -f "/tmp/iota-inx-irc-metadata.lock" ]; then
                                                sudo touch /tmp/iota-inx-irc-metadata.lock > /dev/null 2>&1
                                            fi
                                            {
                                                echo 0
                                                source $iotaInxIrcMetadataModule/iotaInxIrcMetadataParser
                                                echo 50
                                                sudo systemctl restart iota-inx-irc-metadata > /dev/null 2>&1
                                                echo 100
                                                sleep 0.25
                                            } | whiptail --gauge "Please wait while [Iota] INX-IRC-Metadata is restarting..." 8 65 0
                                            if [ -f "/tmp/iota-inx-irc-metadata.lock" ]; then
                                                sudo rm -rf /tmp/iota-inx-irc-metadata.lock > /dev/null 2>&1
                                            fi
                                        fi
                                    fi
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                esac
            done
            exitCode=0
        ;;
        "4)")
            if [ -f "/usr/bin/iota-inx-irc-metadata" ]; then
                while [ $exitCode -lt 1 ]; do
                    clear
                    CHOICE=$(
                        whiptail --title "INX-IRC-Metadata [IOTA] Management" --menu "\nChoose an option" 24 65 0 \
                        "" "" \
                        "1)" "Show INX-IRC-Metadata Log" \
                        "2)" "Stop/Start INX-IRC-Metadata" \
                        "3)" "Reset INX-IRC-Metadata Config" 3>&2 2>&1 1>&3
                    )

                    exitstatus=$?
                    if [ "$exitstatus" = "1" ]; then
                        exitCode=1
                    fi

                    case $CHOICE in
                        "1)")
                            # Display last 65 lines of log
                            sudo journalctl -fu iota-inx-irc-metadata | less -FRSXM
                            clear
                        ;;
                        "2)")
                            CHOICE=$(
                                whiptail --title "INX-IRC-Metadata [IOTA] Management" --menu "\nChoose your option" 24 65 0 \
                                "" "" \
                                "1)" "Restart INX-IRC-Metadata" \
                                "2)" "Start INX-IRC-Metadata" \
                                "3)" "Stop INX-IRC-Metadata" \
                                "4)" "Status INX-IRC-Metadata" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    if [ ! -f "/tmp/iota-inx-irc-metadata.lock" ]; then
                                        sudo touch /tmp/iota-inx-irc-metadata.lock > /dev/null 2>&1
                                    fi
                                    {
                                        echo 0
                                        echo 50
                                        sudo systemctl restart iota-inx-irc-metadata > /dev/null 2>&1
                                        echo 100
                                        sleep 0.25
                                    } | whiptail --gauge "Please wait while [Iota] INX-IRC-Metadata is restarting..." 8 65 0
                                    if [ -f "/tmp/iota-inx-irc-metadata.lock" ]; then
                                        sudo rm -rf /tmp/iota-inx-irc-metadata.lock > /dev/null 2>&1
                                    fi
                                    whiptail --title "INX-IRC-Metadata [IOTA] Management" --msgbox "[Iota] INX-IRC-Metadata successfully restarted." 8 65
                                ;;
                                "2)")
                                    {
                                        echo 0
                                        echo 50
                                        sudo systemctl start iota-inx-irc-metadata > /dev/null 2>&1
                                        echo 100
                                        sleep 0.25
                                    } | whiptail --gauge "Please wait while [Iota] INX-IRC-Metadata is starting..." 8 65 0
                                    if [ -f "/tmp/iota-inx-irc-metadata.lock" ]; then
                                        sudo rm -rf /tmp/iota-inx-irc-metadata.lock > /dev/null 2>&1
                                    fi
                                    whiptail --title "INX-IRC-Metadata [IOTA] Management" --msgbox "[Iota] INX-IRC-Metadata successfully started." 8 65
                                ;;
                                "3)")
                                    if [ ! -f "/tmp/iota-inx-irc-metadata.lock" ]; then
                                        sudo touch /tmp/iota-inx-irc-metadata.lock > /dev/null 2>&1
                                    fi
                                    {
                                        echo 0
                                        echo 50
                                        sudo systemctl stop iota-inx-irc-metadata > /dev/null 2>&1
                                        echo 100
                                        sleep 0.25
                                    } | whiptail --gauge "Please wait while [Iota] INX-IRC-Metadata is stopping..." 8 65 0
                                    whiptail --title "INX-IRC-Metadata [IOTA] Management" --msgbox "[Iota] INX-IRC-Metadata successfully stopped." 8 65
                                ;;
                                "4)")
                                    iotaInxIrcMetadataStatus="$(sudo systemctl status iota-inx-irc-metadata)"
                                    whiptail --title "INX-IRC-Metadata [IOTA] Management" --msgbox "$iotaInxIrcMetadataStatus" 15 65
                                ;;
                            esac
                        ;;
                        "3)")
                            if (whiptail --title "INX-IRC-Metadata [IOTA] Management" --yesno --defaultno "Are you sure you want to reset the [Iota] INX-IRC-Metadata config file?" 8 65); then
                                source $swarmConfigs/iota-inx-irc-metadata.cfg
                                if [ ! -f "/tmp/iota-inx-irc-metadata.lock" ]; then
                                    sudo touch /tmp/iota-inx-irc-metadata.lock > /dev/null 2>&1
                                fi
                                {
                                    echo 0
                                    echo 20
                                    sudo systemctl stop iota-inx-irc-metadata > /dev/null 2>&1
                                    echo 40
                                    sudo -u inx wget -q -O $iotaInxIrcMetadataHome/config.json https://raw.githubusercontent.com/iotaledger/inx-poi/develop/config_template.json
                                    echo 60
                                    source $iotaInxIrcMetadataModule/iotaInxIrcMetadataParser
                                    echo 80
                                    sudo systemctl start iota-inx-irc-metadata > /dev/null 2>&1
                                    echo 100
                                    sleep 0.25
                                } | whiptail --gauge "Please wait while the [Iota] INX-IRC-Metadata config reset is running (this may take a while)..." 8 65 0
                                if [ -f "/tmp/iota-inx-irc-metadata.lock" ]; then
                                    sudo rm -rf /tmp/iota-inx-irc-metadata.lock > /dev/null 2>&1
                                fi
                                whiptail --title "INX-IRC-Metadata [IOTA] Debugging" --msgbox "[Iota] INX-IRC-Metadata config successfully reset." 8 65
                            fi
                        ;;
                    esac
                done
                exitCode=0
            else
                whiptail --title "INX [IOTA] POI" --msgbox "Sorry, but [Iota] INX-IRC-Metadata is not installed." 8 65
            fi
        ;;
        "5)")
            while [ $exitCode -lt 1 ]; do
                CHOICE=$(
                    whiptail --title "INX-IRC-Metadata [IOTA] Installer" --menu "\nChoose your option" 24 65 0 \
                    "" "" \
                    "1)" "Update INX-IRC-Metadata" \
                    "2)" "Install INX-IRC-Metadata" \
                    "3)" "Remove INX-IRC-Metadata" 3>&2 2>&1 1>&3
                )

                exitstatus=$?
                if [ "$exitstatus" = "1" ]; then
                    exitCode=1
                fi

                case $CHOICE in
                    "1)")
                        if [ -f "/usr/bin/iota-inx-irc-metadata" ]; then
                            if (whiptail --title "INX-IRC-Metadata [IOTA] Installer" --yesno --defaultno "Do you really want to update [Iota] INX-IRC-Metadata?" 8 65); then
                                if [ ! -f "/tmp/iota-inx-irc-metadata.lock" ]; then
                                    sudo touch /tmp/iota-inx-irc-metadata.lock > /dev/null 2>&1
                                fi
                                # Update INX-IRC-Metadata
                                source $iotaInxIrcMetadataModule/iotaInxIrcMetadataVersion
                                if [ ! -z "$latestIotaInxIrcMetadataVersion" ]; then
                                    {
                                        echo 0
                                        echo 33
                                        source $iotaInxIrcMetadataModule/iotaInxIrcMetadataVersion
                                        echo 66
                                        source $iotaInxIrcMetadataModule/iotaInxIrcMetadataInstaller                      
                                        echo 100
                                        sleep 0.5
                                    } | whiptail --gauge "Please wait while [Iota] INX-IRC-Metadata is updated..." 8 65 0
                                    {
                                        # CALL MODULE CONFIGPARSER
                                        source $iotaInxIrcMetadataModule/iotaInxIrcMetadataParser
                                        sudo systemctl restart iota-inx-irc-metadata 2>/dev/null
                                    } | whiptail --gauge "Please wait while parsing the [Iota] INX-IRC-Metadata configuration..." 8 65 0
                                    iotaInxIrcMetadataChecksum=$(cat /tmp/iota-inx-irc-metadata.checksum 2>/dev/null)
                                    whiptail --title "INX-Poi [IOTA] Installer" --msgbox "[Iota] INX-IRC-Metadata successfully updated.\n\nChecksum: $iotaInxIrcMetadataChecksum" 10 65
                                    if [ -f "/tmp/iota-inx-irc-metadata.checksum" ]; then
                                        sudo rm -rf /tmp/iota-inx-irc-metadata.checksum 2>/dev/null
                                        unset iotaInxIrcMetadataChecksum
                                    fi
                                else
                                    whiptail --title "INX-IRC-Metadata [IOTA] Installer" --msgbox "Sorry, but [Iota] INX-IRC-Metadata update aborted." 8 65
                                fi
                                if [ -f "/tmp/iota-inx-irc-metadata.lock" ]; then
                                    sudo rm -rf /tmp/iota-inx-irc-metadata.lock > /dev/null 2>&1
                                fi
                            fi
                        else
                            whiptail --title "INX-IRC-Metadata [IOTA] Installer" --msgbox "Sorry, but [Iota] INX-IRC-Metadata is not installed." 8 65
                        fi
                    ;;
                    "2)")
                        if [ -f "/usr/bin/iota-hornet" ]; then
                            # INSTALL INX-IRC-Metadata
                            if [ ! -f "/usr/bin/iota-inx-irc-metadata" ]; then
                                if [ ! -f "/tmp/iota-inx-irc-metadata.lock" ]; then
                                    sudo touch /tmp/iota-inx-irc-metadata.lock > /dev/null 2>&1
                                fi
                                source $swarmConfigs/iota-inx-irc-metadata.cfg
                                source $iotaInxIrcMetadataModule/iotaInxIrcMetadataVersion
                                {
                                    echo 0
                                    echo 10
                                    echo 30
                                    source $iotaInxIrcMetadataModule/iotaInxIrcMetadataInstaller
                                    echo 50
                                    if [ -f "/usr/bin/iota-inx-irc-metadata" ]; then
                                        source $swarmConfigs/iota-inx-irc-metadata.cfg
                                        echo 60
                                        # CALL MODULE CONFIGPARSER
                                        source $iotaInxIrcMetadataModule/iotaInxIrcMetadataParser
                                        echo 70
                                        sudo systemctl start iota-inx-irc-metadata > /dev/null 2>&1
                                        echo 80
                                        sleep 2
                                        iotaInxIrcMetadataStatus="$(systemctl show -p ActiveState --value iota-inx-irc-metadata)"
                                        if [ "$iotaInxIrcMetadataStatus" != "active" ]; then
                                            sudo systemctl restart iota-inx-irc-metadata > /dev/null 2>&1
                                        fi
                                        echo 100
                                    fi
                                } | whiptail --gauge "Please wait while installing INX-IRC-Metadata..." 8 65 0
                                if [ -f "/usr/bin/iota-inx-irc-metadata" ]; then
                                    if [ -f "/tmp/iota-inx-irc-metadata.checksum" ]; then
                                        iotaInxIrcMetadataChecksum=$(cat /tmp/iota-inx-irc-metadata.checksum)
                                    fi
                                    whiptail --title "INX-IRC-Metadata [IOTA] Installer" --msgbox "[Iota] INX-IRC-Metadata installation finished!\n\nChecksum: $iotaInxIrcMetadataChecksum" 17 65
                                    if [ -f "/tmp/iota-inx-irc-metadata.checksum" ]; then
                                        sudo rm -rf /tmp/iota-inx-irc-metadata.checksum > /dev/null 2>&1
                                    fi
                                    if (whiptail --title "INX-IRC-Metadata [IOTA] Installer" --yesno --defaultno "Do you want to make the API routes public for [Iota] INX-IRC-Metadata?" 8 65); then
                                        source $iotaInxIrcMetadataModule/iotaInxIrcMetadataApiRoutes
                                    fi
                                else
                                    {
                                        echo 0
                                        echo 25
                                        source $swarmConfigs/iota-inx-irc-metadata.cfg
                                        echo 50
                                        source $iotaInxIrcMetadataModule/iotaInxIrcMetadataRemoval
                                        echo 75
                                        echo 100
                                    } | whiptail --gauge "Please wait while the [Iota] INX-IRC-Metadata files are removed...." 8 65 0
                                    whiptail --title "INX-IRC-Metadata [IOTA] Installer" --msgbox "Error while installing [Iota] INX-IRC-Metadata! Please try again later." 8 65
                                fi
                                if [ -f "/tmp/iota-inx-irc-metadata.lock" ]; then
                                    sudo rm -rf /tmp/iota-inx-irc-metadata.lock > /dev/null 2>&1
                                fi
                            else
                                if [ -f "/usr/bin/iota-inx-irc-metadata" ]; then
                                    whiptail --title "INX-IRC-Metadata [IOTA] Installer" --msgbox "[Iota] INX-IRC-Metadata already installed." 8 65
                                else
                                    if [ "$iotaInxIrcMetadataSkipInstallation" = "true" ]; then
                                        whiptail --title "INX-IRC-Metadata [IOTA] Installer" --msgbox "Installation of [Iota] INX-IRC-Metadata aborted." 8 65
                                    fi
                                fi
                            fi
                            unset iotaInxIrcMetadataSkipInstallation iotaInxIrcMetadataChecksum
                        else
                            whiptail --title "INX [IOTA] POI" --msgbox "To be able to install [Iota] INX-IRC-Metadata, a compatible node must be installed first." 8 65
                        fi
                    ;;
                    "3)")
                        if (whiptail --title "INX-IRC-Metadata [IOTA] Installer" --yesno --defaultno "Do you really want to remove [Iota] INX-IRC-Metadata?" 8 65); then
                            {
                                echo 0
                                echo 50
                                source $iotaInxIrcMetadataModule/iotaInxIrcMetadataRemoval
                                echo 100
                                sleep 0.5
                            } | whiptail --gauge "Please wait while [Iota] INX-IRC-Metadata will be removed..." 8 65 0
                            whiptail --title "INX-IRC-Metadata [IOTA] Installer" --msgbox "[Iota] INX-IRC-Metadata successfully removed." 8 65
                        fi
                    ;;
                esac
            done
            exitCode=0
        ;;
    esac
done
exitCode=0