#!/bin/bash
while [ $exitCode -lt 1 ]; do
    clear
    source $swarmConfigs/iota-inx-participation.cfg
    if [ "$iotaInxParticipationUpdateCheck" = "true" ]; then
        menuIotaInxParticipationUpdateCheck="disable"
    else
        menuIotaInxParticipationUpdateCheck="enable"
    fi
    source $iotaInxParticipationModule/iotaInxParticipationConfigs
    CHOICE=$(
        whiptail --title "INX-Participation [IOTA] Configurations" --menu "\nChoose an option" 24 70 0 \
        "" "" \
        "1)" "API Routes" \
        "2)" "[${menuIotaInxParticipationUpdateCheck^}] Update Check" 3>&2 2>&1 1>&3
    )

    exitstatus=$?
    if [ "$exitstatus" = "1" ]; then
        exitCode=1
        if [ "$restartIotaInxParticipation" = "true" ] && [ -f "/usr/bin/iota-inx-participation" ]; then
            if (whiptail --title "INX-Participation [IOTA] Menu" --yesno "Would you like to apply the changes and restart [Iota] INX-Participation?" 8 70); then
                if [ ! -f "/tmp/iota-inx-participation.lock" ]; then
                    sudo touch /tmp/iota-inx-participation.lock > /dev/null 2>&1
                fi
                {
                    echo 0
                    echo 33
                    source $iotaInxParticipationModule/iotaInxParticipationParser
                    echo 50
                    sudo systemctl restart iota-inx-participation > /dev/null 2>&1
                    sleep 0.25
                    echo 100
                    sleep 0.25
                } | whiptail --gauge "Please wait while the changes are applied and [Iota] INX-Participation is restarted..." 8 70 0
                unset restartIotaInxParticipation
                if [ -f "/tmp/iota-inx-participation.lock" ]; then
                    sudo rm -rf /tmp/iota-inx-participation.lock > /dev/null 2>&1
                fi
            fi
        fi
    fi

    case $CHOICE in
        "1)")
            source $swarmConfigs/iota-inx-participation.cfg
            iotaInxParticipationApiRoutes=$iotaInxParticipationApiPublicRoutes
            source $iotaInxParticipationModule/iotaInxParticipationApiRoutes
            iotaInxParticipationApiRoutes=$(whiptail --title "INX-Participation [IOTA] API Routes" --checklist "\nSelect which API routes should not be public(*):" 24 70 3 \
                "/api/participation/v1/events*" "" $iotaInxParticipationApiRoutesEvents \
                "/api/participation/v1/outputs*" "" $iotaInxParticipationApiRoutesOutputs \
                "/api/participation/v1/addresses*" "" $iotaInxParticipationApiRoutesAddresses 3>&1 1>&2 2>&3)
            exitStatus=$?
            iotaInxParticipationApiRoutes=$(echo $iotaInxParticipationApiRoutes | tr '[:upper:]' '[:lower:]' | tr -s '[:blank:]' ',' | tr -d '"')
            if [ "$exitStatus" != "1" ]; then
                iotaInxParticipationUpdateApiRoutes=true
                source $iotaInxParticipationModule/iotaInxParticipationApiRoutes
                if [ "$iotaInxParticipationApiPublicRoutesUpdated" = "true" ]; then
                    whiptail --title "INX-Participation [IOTA] API Routes" --msgbox "New config for API routes saved (requires restart of Hornet)." 8 70
                fi
                unset iotaInxParticipationUpdateApiRoutes iotaInxParticipationApiPublicRoutesUpdated
            fi
            unset iotaInxParticipationApiRoutes
        ;;
        "2)")
            source $swarmConfigs/iota-inx-participation.cfg
            if [ "$iotaInxParticipationUpdateCheck" = "true" ]; then
                iotaInxParticipationUpdateCheckStatus="enabled"
            else
                iotaInxParticipationUpdateCheckStatus="disabled"
            fi
            if (whiptail --title "INX-Participation [IOTA] Update Check" --yesno "Would you like to \"$iotaInxParticipationUpdateCheckStatus\" [Iota] INX-Participation update check?" 8 70); then
                if [ "$iotaInxParticipationUpdateCheck" = "true" ]; then
                    iotaInxParticipationUpdateCheck=false
                else
                    iotaInxParticipationUpdateCheck=true
                fi
                source $iotaInxParticipationConfigParsers/iotaInxParticipationUpdateCheck
                sudo sed -i 's~^iotaInxParticipationUpdateCheck=.*~iotaInxParticipationUpdateCheck='$iotaInxParticipationUpdateCheck'~g' $swarmConfigs/iota-inx-participation.cfg
            fi
        ;;
    esac
done
sudo chown -R inx:inx $iotaInxParticipationHome/*.json
exitCode=0