#!/bin/bash
source $swarmConfigs/latest-versions.cfg

if [ -z "$latestIotaInxMqttVersion" ] || [ "$latestIotaInxMqttVersion" = "\"\"" ] || [ "$latestIotaInxMqttVersion" = "null" ] || ! [[ $latestIotaInxMqttVersion =~ [0-9] ]]; then
    source $swarmModule/swarmAuth
    if [ "$swarmAuth" = "200" ]; then
        latestIotaInxMqttVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@$cdnUrl/github/releases.json | jq '."inx-mqtt".'$iotaInxMqttRelease'')
        latestIotaInxMqttVersion=$(echo $latestIotaInxMqttVersion | tr -d 'v"')

        if [ ! -z "$latestIotaInxMqttVersion" ] && [ "$latestIotaInxMqttVersion" != "\"\"" ] && [ "$latestIotaInxMqttVersion" != "null" ]; then
            sudo sed -i 's~^latestIotaInxMqttVersion=.*~latestIotaInxMqttVersion="'$latestIotaInxMqttVersion'"~' $swarmConfigs/latest-versions.cfg
        fi
    fi
fi

# Local node version
if [ -f "/usr/bin/iota-inx-mqtt" ]; then
    iotaInxMqttVersion=$(/usr/bin/iota-inx-mqtt -v | awk '{ print $2 }' | tr -d 'v')
fi

# Replace var if empty
if [ -z "$latestIotaInxMqttVersion" ] || [ "$latestIotaInxMqttVersion" = "null" ]; then
    latestIotaInxMqttVersion=$iotaInxMqttVersion
fi
