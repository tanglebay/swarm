#!/bin/bash
while [ $exitCode -lt 1 ]; do
    clear
    source $swarmConfigs/iota-inx-mqtt.cfg
    if [ "$iotaInxMqttUpdateCheck" = "true" ]; then
        menuIotaInxMqttUpdateCheck="disable"
    else
        menuIotaInxMqttUpdateCheck="enable"
    fi
    source $iotaInxMqttModule/iotaInxMqttConfigs
    CHOICE=$(
        whiptail --title "INX-MQTT [IOTA] Configurations" --menu "\nChoose an option" 24 70 0 \
        "1)" "API Routes" \
        "2)" "MQTT Settings" \
        "3)" "[${menuIotaInxMqttUpdateCheck^}] Update Check" 3>&2 2>&1 1>&3
    )

    exitstatus=$?
    if [ "$exitstatus" = "1" ]; then
        exitCode=1
        if [ "$restartIotaInxMqtt" = "true" ] && [ -f "/usr/bin/iota-inx-mqtt" ]; then
            if (whiptail --title "INX-MQTT [IOTA] Menu" --yesno "Would you like to apply the changes and restart [IOTA] INX-MQTT?" 8 70); then
                if [ ! -f "/tmp/iota-inx-mqtt.lock" ]; then
                    sudo touch /tmp/iota-inx-mqtt.lock > /dev/null 2>&1
                fi
                {
                    echo 0
                    echo 33
                    source $iotaInxMqttModule/iotaInxMqttParser
                    echo 50
                    sudo systemctl restart iota-inx-mqtt > /dev/null 2>&1
                    sleep 0.25
                    echo 100
                    sleep 0.25
                } | whiptail --gauge "Please wait while the changes are applied and [IOTA] INX-MQTT is restarted..." 8 70 0
                unset restartIotaInxMqtt
                if [ -f "/tmp/iota-inx-mqtt.lock" ]; then
                    sudo rm -rf /tmp/iota-inx-mqtt.lock > /dev/null 2>&1
                fi
            fi
        fi
    fi

    case $CHOICE in
        "1)")
            source $swarmConfigs/iota-inx-mqtt.cfg
            iotaInxMqttApiRoutes=$iotaInxMqttApiPublicRoutes
            source $iotaInxMqttModule/iotaInxMqttApiRoutes
            iotaInxMqttApiRoutes=$(whiptail --title "INX-MQTT [IOTA] API Routes" --checklist "\nSelect which API routes should not be public(*):" 24 70 1 \
                "/api/mqtt/v1" "" $iotaInxMqttApiRoutesMqtt 3>&1 1>&2 2>&3)
            exitStatus=$?
            iotaInxMqttApiRoutes=$(echo $iotaInxMqttApiRoutes | tr '[:upper:]' '[:lower:]' | tr -s '[:blank:]' ',' | tr -d '"')
            if [ "$exitStatus" != "1" ]; then
                iotaInxMqttUpdateApiRoutes=true
                source $iotaInxMqttModule/iotaInxMqttApiRoutes
                if [ "$iotaInxMqttApiPublicRoutesUpdated" = "true" ]; then
                    whiptail --title "INX-MQTT [IOTA] API Routes" --msgbox "New config for API routes saved (requires restart of Hornet)." 8 70
                fi
                unset iotaInxMqttUpdateApiRoutes iotaInxMqttApiPublicRoutesUpdated
            fi
            unset iotaInxMqttApiRoutes
        ;;
        "2)")
            while [ $exitCode -lt 1 ]; do
                clear
                CHOICE=$(
                    whiptail --title "INX-MQTT [IOTA] MQTT Settings" --menu "\nChoose an option" 24 70 0 \
                    "1)" "Websocket Settings" \
                    "2)" "TCP Settings" 3>&2 2>&1 1>&3
                )
                exitstatus=$?
                if [ "$exitstatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        while [ $exitCode -lt 1 ]; do
                            clear
                            if [ "$iotaInxMqttWebsocketEnabled" = "true" ]; then
                                menuIotaInxMqttWebsocketEnabled="Disable"
                            else
                                menuIotaInxMqttWebsocketEnabled="Enable"
                            fi
                            CHOICE=$(
                                whiptail --title "INX-MQTT [IOTA] Websocket" --menu "\nChoose an option" 24 70 0 \
                                "1)" "$menuIotaInxMqttWebsocketEnabled Websocket" \
                                "2)" "Set Websocket Address" 3>&2 2>&1 1>&3
                            )
                            exitstatus=$?
                            if [ "$exitstatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    source $swarmConfigs/iota-inx-mqtt.cfg
                                    if [ "$iotaInxMqttWebsocketEnabled" = "true" ]; then
                                        iotaInxMqttWebsocketEnabledStatus="enabled"
                                    else
                                        iotaInxMqttWebsocketEnabledStatus="disabled"
                                    fi
                                    if (whiptail --title "INX-MQTT [IOTA] Update Check" --yesno "Would you like to \"$iotaInxMqttWebsocketEnabledStatus\" [IOTA] INX-MQTT update check?" 8 70); then
                                        if [ "$iotaInxMqttWebsocketEnabled" = "true" ]; then
                                            iotaInxMqttWebsocketEnabled=false
                                        else
                                            iotaInxMqttWebsocketEnabled=true
                                        fi
                                        source $iotaInxMqttConfigParsers/iotaInxMqttWebsocketEnabled
                                        sudo sed -i 's~^iotaInxMqttWebsocketEnabled=.*~iotaInxMqttWebsocketEnabled='$iotaInxMqttWebsocketEnabled'~g' $swarmConfigs/iota-inx-mqtt.cfg
                                    fi
                                ;;
                                "2)")
                                    source $swarmConfigs/iota-inx-mqtt.cfg
                                    iotaInxMqttWebsocketAddress=$(whiptail --inputbox "\nSet the address of the [IOTA] INX-MQTT websocket interface" 10 65 "$iotaInxMqttWebsocketAddress" --title "INX-MQTT [IOTA] Websocket Address" 3>&1 1>&2 2>&3)
                                    exitStatus=$?
                                    if [ $exitStatus != 1 ]; then
                                        if [ ! -z "$iotaInxMqttWebsocketAddress" ] && [[ $iotaInxMqttWebsocketAddress =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+:+[0-9]+|^localhost:[0-9]+$ ]]; then
                                            source $iotaInxMqttConfigParsers/iotaInxMqttWebsocketAddress
                                            if [ "$newIotaInxMqttWebsocketAddress" = "true" ]; then
                                                sudo sed -i 's/^iotaInxMqttWebsocketAddress=.*/iotaInxMqttWebsocketAddress="'$iotaInxMqttWebsocketAddress'"/' $swarmConfigs/iota-inx-mqtt.cfg
                                                whiptail --title "INX-MQTT [IOTA] Websocket Address" --msgbox "New [IOTA] INX-MQTT websocket address \"$iotaInxMqttWebsocketAddress\" applied!" 8 70
                                                unset newIotaInxMqttWebsocketAddress
                                            else
                                                whiptail --title "INX-MQTT [IOTA] Websocket Address" --msgbox "No [IOTA] INX-MQTT websocket address change detected." 8 70
                                            fi
                                        else
                                            whiptail --title "INX-MQTT [IOTA] Websocket Address" --msgbox "No valid [IOTA] INX-MQTT websocket address, please try again." 8 70
                                        fi
                                    fi
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                    "2)")
                        while [ $exitCode -lt 1 ]; do
                            clear
                            if [ "$iotaInxMqttTcpEnabled" = "true" ]; then
                                menuIotaInxMqttTcpEnabled="Disable"
                            else
                                menuIotaInxMqttTcpEnabled="Enable"
                            fi
                            CHOICE=$(
                                whiptail --title "INX-MQTT [IOTA] TCP" --menu "\nChoose an option" 24 70 0 \
                                "1)" "$menuIotaInxMqttTcpEnabled TCP" \
                                "2)" "Set TCP Address" 3>&2 2>&1 1>&3
                            )
                            exitstatus=$?
                            if [ "$exitstatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    source $swarmConfigs/iota-inx-mqtt.cfg
                                    if [ "$iotaInxMqttTcpEnabled" = "true" ]; then
                                        iotaInxMqttTcpEnabledStatus="enabled"
                                    else
                                        iotaInxMqttTcpEnabledStatus="disabled"
                                    fi
                                    if (whiptail --title "INX-MQTT [IOTA] TCP" --yesno "Would you like to \"$iotaInxMqttTcpEnabledStatus\" [IOTA] INX-MQTT tcp interface?" 8 70); then
                                        if [ "$iotaInxMqttTcpEnabled" = "true" ]; then
                                            iotaInxMqttTcpEnabled=false
                                        else
                                            iotaInxMqttTcpEnabled=true
                                        fi
                                        source $iotaInxMqttConfigParsers/iotaInxMqttTcpEnabled
                                        sudo sed -i 's~^iotaInxMqttTcpEnabled=.*~iotaInxMqttTcpEnabled='$iotaInxMqttTcpEnabled'~g' $swarmConfigs/iota-inx-mqtt.cfg
                                    fi
                                ;;
                                "2)")
                                    source $swarmConfigs/iota-inx-mqtt.cfg
                                    iotaInxMqttTcpAddress=$(whiptail --inputbox "\nSet the address of the [IOTA] INX-MQTT TCP interface" 10 65 $iotaInxMqttTcpAddress --title "INX-MQTT [IOTA] TCP Address" 3>&1 1>&2 2>&3)
                                    exitStatus=$?
                                    if [ $exitStatus != 1 ]; then
                                        if [ ! -z "$iotaInxMqttTcpAddress" ] && [[ $iotaInxMqttTcpAddress =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+:+[0-9]+|^localhost:[0-9]+$ ]]; then
                                            source $iotaInxMqttConfigParsers/iotaInxMqttTcpAddress
                                            if [ "$newIotaInxMqttTcpAddress" = "true" ]; then
                                                sudo sed -i 's/^iotaInxMqttTcpAddress=.*/iotaInxMqttTcpAddress="'$iotaInxMqttTcpAddress'"/' $swarmConfigs/iota-inx-mqtt.cfg
                                                whiptail --title "INX-MQTT [IOTA] TCP Address" --msgbox "New [IOTA] INX-MQTT TCP address \"$iotaInxMqttTcpAddress\" applied!" 8 70
                                                unset newIotaInxMqttTcpAddress
                                            else
                                                whiptail --title "INX-MQTT [IOTA] TCP Address" --msgbox "No [IOTA] INX-mQTT TCP address change detected." 8 70
                                            fi
                                        else
                                            whiptail --title "INX-MQTT [IOTA] TCP Address" --msgbox "No valid [IOTA] INX-MQTT TCP address, please try again." 8 70
                                        fi
                                    fi
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                esac
            done
            exitCode=0
        ;;
        "3)")
            source $swarmConfigs/iota-inx-mqtt.cfg
            if [ "$iotaInxMqttUpdateCheck" = "true" ]; then
                iotaInxMqttUpdateCheckStatus="enabled"
            else
                iotaInxMqttUpdateCheckStatus="disabled"
            fi
            if (whiptail --title "INX-MQTT [IOTA] Update Check" --yesno "Would you like to \"$iotaInxMqttUpdateCheckStatus\" [IOTA] INX-MQTT update check?" 8 70); then
                if [ "$iotaInxMqttUpdateCheck" = "true" ]; then
                    iotaInxMqttUpdateCheck=false
                else
                    iotaInxMqttUpdateCheck=true
                fi
                source $iotaInxMqttConfigParsers/iotaInxMqttUpdateCheck
                sudo sed -i 's~^iotaInxMqttUpdateCheck=.*~iotaInxMqttUpdateCheck='$iotaInxMqttUpdateCheck'~g' $swarmConfigs/iota-inx-mqtt.cfg
            fi
        ;;
    esac
done
sudo chown -R inx:inx $iotaInxMqttHome/*.json
exitCode=0