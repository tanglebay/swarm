#!/bin/bash
source $swarmConfigs/latest-versions.cfg

# SET TIME
timeFrame=`date '+%M'`

# GET LATEST VERSIONS
if [ "$timeFrame" = "00" ] || [ "$timeFrame" = "15" ] || [ "$timeFrame" = "30" ] || [ "$timeFrame" = "45" ]; then
    # Latest SWARM version
    latestSwarmVersion=$(curl --max-time 5 -Ls https://cdn.tanglebay.com/swarm/version/stable | head -n 1)
    latestSwarmVersion=$(echo $latestSwarmVersion | tr -d 'v')
    sudo sed -i 's~^latestSwarmVersion=.*~latestSwarmVersion="'$latestSwarmVersion'"~' $swarmConfigs/latest-versions.cfg
fi

if [ "$timeFrame" = "$watchdogUpdateNumber" ] || [ "$timeFrame" = "$watchdogUpdateNumber2" ]; then
    apps=(iota-hornet shimmer-hornet goshimmer wasp shimmer-inx-dashboard shimmer-inx-indexer shimmer-inx-mqtt shimmer-inx-participation shimmer-inx-poi)
    for app in ${apps[@]}
    do
        if [ "$app" = "iota-hornet" ]; then
            appName="hornet"
            appPrefix="iotaHornet"
        fi
        if [ "$app" = "shimmer-hornet" ]; then
            appName="hornet"
            appPrefix="shimmerHornet"
        fi
        if [ "$app" = "goshimmer" ]; then
            appName="goshimmer"
            appPrefix="goshimmer"
        fi
        if [ "$app" = "wasp" ]; then
            appName="wasp"
            appPrefix="wasp"
        fi
        if [ "$app" = "shimmer-inx-dashboard" ]; then
            appName="inx-dashboard"
            appPrefix="shimmerInxDashboard"
        fi
        if [ "$app" = "shimmer-inx-indexer" ]; then
            appName="inx-indexer"
            appPrefix="shimmerInxIndexer"
        fi
        if [ "$app" = "shimmer-inx-mqtt" ]; then
            appName="inx-mqtt"
            appPrefix="shimmerInxMqtt"
        fi
        if [ "$app" = "shimmer-inx-participation" ]; then
            appName="inx-participation"
            appPrefix="shimmerInxParticipation"
        fi
        if [ "$app" = "shimmer-inx-poi" ]; then
            appName="inx-poi"
            appPrefix="shimmerInxPoi"
        fi
        if [ -f "/usr/bin/$app" ]; then
            appCurrentLatestVersion=latest${appPrefix^}Version
            appRelease=${appPrefix}Release
            appReleaseVersion=${appPrefix}ReleaseVersion
            appModules=${appPrefix}Modules

            if [ "${!appRelease}" = "stable" ]; then
                appLatestVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/$appName | grep ${!appReleaseVersion} | awk '!/(-rc|-beta|-alpha)/' | head -n 1)
                appLatestVersion=$(echo $appLatestVersion | tr -d 'v')
            fi
            if [ "${!appRelease}" = "beta" ]; then
                appLatestVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/$appName | grep ${!appReleaseVersion} | awk '!/-alpha/' | head -n 1)
                appLatestVersion=$(echo $appLatestVersion | tr -d 'v')
            fi
            if [ "${!appRelease}" = "alpha" ]; then
                appLatestVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/$appName | grep ${!appReleaseVersion} | head -n 1)
                appLatestVersion=$(echo $appLatestVersion | tr -d 'v')
            fi
            if [ "$appLatestVersion" = "\"\"" ] || [ -z "$appLatestVersion" ] || [ "$appLatestVersion" = "null" ]; then
                if [ -f "/usr/bin/$app" ]; then
                    source ${!appModules}/${appPrefix}Version
                    appLatestVersion=${appPrefix}Version
                fi
            fi
            if [ "$(printf '%s\n' "$appLatestVersion" "${!appCurrentLatestVersion}" | sort -V | head -n1)" != "$appLatestVersion" ] && [ ! -z "$appLatestVersion" ]; then
                sudo sed -i 's~^latest'${appPrefix^}'Version=.*~latest'${appPrefix^}'Version="'$appLatestVersion'"~' $swarmConfigs/latest-versions.cfg
            fi
        else
            if [ ! -z "$appLatestVersion" ]; then
                sudo sed -i 's~^latest'${appPrefix^}'Version=.*~latest'${appPrefix^}'Version=""~' $swarmConfigs/latest-versions.cfg
            fi
        fi
        unset appName appPrefix appCurrentLatestVersion appRelease appReleaseVersion appModules appLatestVersion
    done
    unset apps app
fi