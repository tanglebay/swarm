#!/bin/bash
source $swarmConfigs/latest-versions.cfg

# SET TIME
timeFrame=`date '+%M'`

# GET LATEST VERSIONS
if [ "$timeFrame" = "00" ] || [ "$timeFrame" = "15" ] || [ "$timeFrame" = "30" ] || [ "$timeFrame" = "45" ]; then
    # Latest SWARM version
    latestSwarmVersion=$(curl --max-time 5 -Ls https://cdn.tanglebay.com/swarm/version/stable | head -n 1)
    latestSwarmVersion=$(echo $latestSwarmVersion | tr -d 'v')
    sudo sed -i 's~^latestSwarmVersion=.*~latestSwarmVersion="'$latestSwarmVersion'"~' $swarmConfigs/latest-versions.cfg
fi

if [ "$timeFrame" = "$watchdogUpdateNumber" ] || [ "$timeFrame" = "$watchdogUpdateNumber2" ]; then
    if [ -f "/usr/bin/iota-hornet" ]; then
        currentLatestIotaHornetVersion=$latestIotaHornetVersion
        # Latest Hornet version
        if [ "$iotaHornetRelease" = "stable" ]; then
            latestIotaHornetVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/hornet | grep $iotaHornetReleaseVersion | awk '!/(-rc|-beta|-alpha)/' | head -n 1)
            latestIotaHornetVersion=$(echo $latestIotaHornetVersion | tr -d 'v')
        fi
        if [ "$iotaHornetRelease" = "beta" ]; then
            latestIotaHornetVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/hornet | grep $iotaHornetReleaseVersion | awk '!/-alpha/' | head -n 1)
            latestIotaHornetVersion=$(echo $latestIotaHornetVersion | tr -d 'v')
        fi
        if [ "$iotaHornetRelease" = "alpha" ]; then
            latestIotaHornetVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/hornet | grep $iotaHornetReleaseVersion | head -n 1)
            latestIotaHornetVersion=$(echo $latestIotaHornetVersion | tr -d 'v')
        fi
        if [ "$latestIotaHornetVersion" = "\"\"" ] || [ -z "$latestIotaHornetVersion" ] || [ "$latestIotaHornetVersion" = "null" ]; then
            if [ -f "/usr/bin/iota-hornet" ]; then
                latestIotaHornetVersion=$(/usr/bin/iota-hornet -v | awk '{ print $2 }')
            fi
        fi
        if [ "$(printf '%s\n' "$latestIotaHornetVersion" "$currentLatestIotaHornetVersion" | sort -V | head -n1)" != "$latestIotaHornetVersion" ] && [ ! -z "$latestIotaHornetVersion" ]; then
            sudo sed -i 's~^latestIotaHornetVersion=.*~latestIotaHornetVersion="'$latestIotaHornetVersion'"~' $swarmConfigs/latest-versions.cfg
        fi
        unset currentLatestIotaHornetVersion
    else
        if [ ! -z "$latestIotaHornetVersion" ]; then
            sudo sed -i 's~^latestIotaHornetVersion=.*~latestIotaHornetVersion=""~' $swarmConfigs/latest-versions.cfg
        fi
    fi

    if [ -f "/usr/bin/shimmer-hornet" ]; then
        currentLatestShimmerHornetVersion=$latestShimmerHornetVersion
        # Latest Shimmer-Hornet version
        if [ "$shimmerHornetRelease" = "stable" ]; then
            latestShimmerHornetVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/hornet | grep $shimmerHornetReleaseVersion | awk '!/(-rc|-beta|-alpha)/' | head -n 1)
            latestShimmerHornetVersion=$(echo $latestShimmerHornetVersion | tr -d 'v')
        fi
        if [ "$shimmerHornetRelease" = "beta" ]; then
            latestShimmerHornetVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/hornet | grep $shimmerHornetReleaseVersion | awk '!/-alpha/' | head -n 1)
            latestShimmerHornetVersion=$(echo $latestShimmerHornetVersion | tr -d 'v')
        fi
        if [ "$shimmerHornetRelease" = "alpha" ]; then
            latestShimmerHornetVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/hornet | grep $shimmerHornetReleaseVersion | head -n 1)
            latestShimmerHornetVersion=$(echo $latestShimmerHornetVersion | tr -d 'v')
        fi
        if [ "$latestShimmerHornetVersion" = "\"\"" ] || [ -z "$latestShimmerHornetVersion" ] || [ "$latestShimmerHornetVersion" = "null" ]; then
            if [ -f "/usr/bin/shimmer-hornet" ]; then
                latestShimmerHornetVersion=$(/usr/bin/shimmer-hornet -v | awk '{ print $2 }')
            fi
        fi
        if [ "$(printf '%s\n' "$latestShimmerHornetVersion" "$currentLatestShimmerHornetVersion" | sort -V | head -n1)" != "$latestShimmerHornetVersion" ] && [ ! -z "$latestShimmerHornetVersion" ]; then
            sudo sed -i 's~^latestShimmerHornetVersion=.*~latestShimmerHornetVersion="'$latestShimmerHornetVersion'"~' $swarmConfigs/latest-versions.cfg
        fi
        unset currentLatestShimmerHornetVersion
    else
        if [ ! -z "$latestShimmerHornetVersion" ]; then
            sudo sed -i 's~^latestShimmerHornetVersion=.*~latestShimmerHornetVersion=""~' $swarmConfigs/latest-versions.cfg
        fi
    fi

    if [ -f "/usr/bin/goshimmer" ]; then
        currentLatestGoshimmerVersion=$latestGoshimmerVersion
        # Latest GoShimmer version
        latestGoshimmerVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/goshimmer | awk '!/(-rc|-beta|-alpha)/' | head -n 1)
        latestGoshimmerVersion=$(echo $latestGoshimmerVersion | tr -d 'v')
        if [ "$latestGoshimmerVersion" = "\"\"" ] || [ -z "$latestGoshimmerVersion" ] || [ "$latestGoshimmerVersion" = "null" ]; then
            if [ -f "/usr/bin/goshimmer" ]; then
                latestGoshimmerVersion=$(cd $goshimmerHome ; /usr/bin/goshimmer -v | awk '{print $2}' | tr -d 'v')
            fi
        fi
        if [ "$(printf '%s\n' "$latestGoshimmerVersion" "$currentLatestGoshimmerVersion" | sort -V | head -n1)" != "$latestGoshimmerVersion" ] && [ ! -z "$latestGoshimmerVersion" ]; then
            sudo sed -i 's~^latestGoshimmerVersion=.*~latestGoshimmerVersion="'$latestGoshimmerVersion'"~' $swarmConfigs/latest-versions.cfg
        fi
        unset currentGoshimmerVersion
    else
        if [ ! -z "$latestGoshimmerVersion" ]; then
            sudo sed -i 's~^latestGoshimmerVersion=.*~latestGoshimmerVersion=""~' $swarmConfigs/latest-versions.cfg
        fi
    fi

    if [ -f "/usr/bin/wasp" ]; then
        currentLatestWaspVersion=$latestWaspVersion
        # Latest WASP version
        latestWaspVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/wasp | awk '!/(-rc|-beta|-alpha)/' | head -n 1)
        latestWaspVersion=$(echo $latestWaspVersion | tr -d 'v')
        if [ "$latestWaspVersion" = "\"\"" ] || [ -z "$latestWaspVersion" ] || [ "$latestWaspVersion" = "null" ]; then
            if [ -f "/usr/bin/wasp" ]; then
                latestWaspVersion=$(cd $waspHome ; /usr/bin/wasp -v | awk '{print $2}' | tr -d 'v')
            fi
        fi
        if [ "$(printf '%s\n' "$latestWaspVersion" "$currentLatestWaspVersion" | sort -V | head -n1)" != "$latestWaspVersion" ] && [ ! -z "$latestWaspVersion" ]; then
            sudo sed -i 's~^latestWaspVersion=.*~latestWaspVersion="'$latestWaspVersion'"~' $swarmConfigs/latest-versions.cfg
        fi
        unset currentLatestWaspVersion
    else
        if [ ! -z "$latestWaspVersion" ]; then
            sudo sed -i 's~^latestWaspVersion=.*~latestWaspVersion=""~' $swarmConfigs/latest-versions.cfg
        fi
    fi

    if [ -f "/usr/bin/shimmer-inx-dashboard" ]; then
        currentLatestShimmerInxDashboardVersion=$latestShimmerInxDashboardVersion
        # Latest INX-Dashboard version
        if [ "$shimmerInxDashboardRelease" = "stable" ]; then
            latestShimmerInxDashboardVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/inx-dashboard | grep $shimmerInxDashboardReleaseVersion | awk '!/(-rc|-beta|-alpha)/' | head -n 1)
            latestShimmerInxDashboardVersion=$(echo $latestShimmerInxDashboardVersion | tr -d 'v')
        fi
        if [ "$shimmerInxDashboardRelease" = "beta" ]; then
            latestShimmerInxDashboardVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/inx-dashboard | grep $shimmerInxDashboardReleaseVersion | awk '!/-alpha/' | head -n 1)
            latestShimmerInxDashboardVersion=$(echo $latestShimmerInxDashboardVersion | tr -d 'v')
        fi
        if [ "$shimmerInxDashboardRelease" = "alpha" ]; then
            latestShimmerInxDashboardVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/inx-dashboard | grep $shimmerInxDashboardReleaseVersion | head -n 1)
            latestShimmerInxDashboardVersion=$(echo $latestShimmerInxDashboardVersion | tr -d 'v')
        fi
        if [ "$latestShimmerInxDashboardVersion" = "\"\"" ] || [ -z "$latestShimmerInxDashboardVersion" ] || [ "$latestShimmerInxDashboardVersion" = "null" ]; then
            if [ -f "/usr/bin/shimmer-inx-dashboard" ]; then
                latestShimmerInxDashboardVersion=$(/usr/bin/shimmer-inx-dashboard -v | awk '{ print $2 }')
            fi
        fi
        if [ "$(printf '%s\n' "$latestShimmerInxDashboardVersion" "$currentLatestShimmerInxDashboardVersion" | sort -V | head -n1)" != "$latestShimmerInxDashboardVersion" ] && [ ! -z "$latestShimmerInxDashboardVersion" ]; then
            sudo sed -i 's~^latestShimmerInxDashboardVersion=.*~latestShimmerInxDashboardVersion="'$latestShimmerInxDashboardVersion'"~' $swarmConfigs/latest-versions.cfg
        fi
        unset currentLatestShimmerInxDashboardVersion
    else
        if [ ! -z "$latestShimmerInxDashboardVersion" ]; then
            sudo sed -i 's~^latestShimmerInxDashboardVersion=.*~latestShimmerInxDashboardVersion=""~' $swarmConfigs/latest-versions.cfg
        fi
    fi

    if [ -f "/usr/bin/shimmer-inx-indexer" ]; then
        currentLatestShimmerInxIndexerVersion=$latestShimmerInxIndexerVersion
        # Latest INX-Indexer version
        if [ "$shimmerInxIndexerRelease" = "stable" ]; then
            latestShimmerInxIndexerVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/inx-indexer | grep $shimmerInxIndexerReleaseVersion | awk '!/(-rc|-beta|-alpha)/' | head -n 1)
            latestShimmerInxIndexerVersion=$(echo $latestShimmerInxIndexerVersion | tr -d 'v')
        fi
        if [ "$shimmerInxIndexerRelease" = "beta" ]; then
            latestShimmerInxIndexerVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/inx-indexer | grep $shimmerInxIndexerReleaseVersion | awk '!/-alpha/' | head -n 1)
            latestShimmerInxIndexerVersion=$(echo $latestShimmerInxIndexerVersion | tr -d 'v')
        fi
        if [ "$shimmerInxIndexerRelease" = "alpha" ]; then
            latestShimmerInxIndexerVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/inx-indexer | grep $shimmerInxIndexerReleaseVersion | head -n 1)
            latestShimmerInxIndexerVersion=$(echo $latestShimmerInxIndexerVersion | tr -d 'v')
        fi
        if [ "$latestShimmerInxIndexerVersion" = "\"\"" ] || [ -z "$latestShimmerInxIndexerVersion" ] || [ "$latestShimmerInxIndexerVersion" = "null" ]; then
            if [ -f "/usr/bin/shimmer-inx-indexer" ]; then
                latestShimmerInxIndexerVersion=$(/usr/bin/shimmer-inx-indexer -v | awk '{ print $2 }')
            fi
        fi
        if [ "$(printf '%s\n' "$latestShimmerInxIndexerVersion" "$currentLatestShimmerInxIndexerVersion" | sort -V | head -n1)" != "$latestShimmerInxIndexerVersion" ] && [ ! -z "$latestShimmerInxIndexerVersion" ]; then
            sudo sed -i 's~^latestShimmerInxIndexerVersion=.*~latestShimmerInxIndexerVersion="'$latestShimmerInxIndexerVersion'"~' $swarmConfigs/latest-versions.cfg
        fi
        unset currentLatestShimmerInxIndexerVersion
    else
        if [ ! -z "$latestShimmerInxIndexerVersion" ]; then
            sudo sed -i 's~^latestShimmerInxIndexerVersion=.*~latestShimmerInxIndexerVersion=""~' $swarmConfigs/latest-versions.cfg
        fi
    fi

    if [ -f "/usr/bin/shimmer-inx-mqtt" ]; then
        currentLatestShimmerInxMqttVersion=$latestShimmerInxMqttVersion
        # Latest INX-MQTT version
        if [ "$shimmerInxMqttRelease" = "stable" ]; then
            latestShimmerInxMqttVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/inx-mqtt | grep $shimmerInxMqttReleaseVersion | awk '!/(-rc|-beta|-alpha)/' | head -n 1)
            latestShimmerInxMqttVersion=$(echo $latestShimmerInxMqttVersion | tr -d 'v')
        fi
        if [ "$shimmerInxMqttRelease" = "beta" ]; then
            latestShimmerInxMqttVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/inx-mqtt | grep $shimmerInxMqttReleaseVersion | awk '!/-alpha/' | head -n 1)
            latestShimmerInxMqttVersion=$(echo $latestShimmerInxMqttVersion | tr -d 'v')
        fi
        if [ "$shimmerInxMqttRelease" = "alpha" ]; then
            latestShimmerInxMqttVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/inx-mqtt | grep $shimmerInxMqttReleaseVersion | head -n 1)
            latestShimmerInxMqttVersion=$(echo $latestShimmerInxMqttVersion | tr -d 'v')
        fi
        if [ "$latestShimmerInxMqttVersion" = "\"\"" ] || [ -z "$latestShimmerInxMqttVersion" ] || [ "$latestShimmerInxMqttVersion" = "null" ]; then
            if [ -f "/usr/bin/shimmer-inx-mqtt" ]; then
                latestShimmerInxMqttVersion=$(/usr/bin/shimmer-inx-mqtt -v | awk '{ print $2 }')
            fi
        fi
        if [ "$(printf '%s\n' "$latestShimmerInxMqttVersion" "$currentLatestShimmerInxMqttVersion" | sort -V | head -n1)" != "$latestShimmerInxMqttVersion" ] && [ ! -z "$latestShimmerInxMqttVersion" ]; then
            sudo sed -i 's~^latestShimmerInxMqttVersion=.*~latestShimmerInxMqttVersion="'$latestShimmerInxMqttVersion'"~' $swarmConfigs/latest-versions.cfg
        fi
        unset currentLatestShimmerInxMqttVersion
    else
        if [ ! -z "$latestShimmerInxMqttVersion" ]; then
            sudo sed -i 's~^latestShimmerInxMqttVersion=.*~latestShimmerInxMqttVersion=""~' $swarmConfigs/latest-versions.cfg
        fi
    fi

    if [ -f "/usr/bin/shimmer-inx-participation" ]; then
        currentLatestShimmerInxParticipationVersion=$latestShimmerInxParticipationVersion
        # Latest INX-Participation version
        if [ "$shimmerInxParticipationRelease" = "stable" ]; then
            latestShimmerInxParticipationVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/inx-participation | grep $shimmerInxParticipationReleaseVersion | awk '!/(-rc|-beta|-alpha)/' | head -n 1)
            latestShimmerInxParticipationVersion=$(echo $latestShimmerInxParticipationVersion | tr -d 'v')
        fi
        if [ "$shimmerInxParticipationRelease" = "beta" ]; then
            latestShimmerInxParticipationVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/inx-participation | grep $shimmerInxParticipationReleaseVersion | awk '!/-alpha/' | head -n 1)
            latestShimmerInxParticipationVersion=$(echo $latestShimmerInxParticipationVersion | tr -d 'v')
        fi
        if [ "$shimmerInxParticipationRelease" = "alpha" ]; then
            latestShimmerInxParticipationVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/inx-participation | grep $shimmerInxParticipationReleaseVersion | head -n 1)
            latestShimmerInxParticipationVersion=$(echo $latestShimmerInxParticipationVersion | tr -d 'v')
        fi
        if [ "$latestShimmerInxParticipationVersion" = "\"\"" ] || [ -z "$latestShimmerInxParticipationVersion" ] || [ "$latestShimmerInxParticipationVersion" = "null" ]; then
            if [ -f "/usr/bin/shimmer-inx-participation" ]; then
                latestShimmerInxParticipationVersion=$(/usr/bin/shimmer-inx-participation -v | awk '{ print $2 }')
            fi
        fi
        if [ "$(printf '%s\n' "$latestShimmerInxParticipationVersion" "$currentLatestShimmerInxParticipationVersion" | sort -V | head -n1)" != "$latestShimmerInxParticipationVersion" ] && [ ! -z "$latestShimmerInxParticipationVersion" ]; then
            sudo sed -i 's~^latestShimmerInxParticipationVersion=.*~latestShimmerInxParticipationVersion="'$latestShimmerInxParticipationVersion'"~' $swarmConfigs/latest-versions.cfg
        fi
        unset currentLatestShimmerInxParticipationVersion
    else
        if [ ! -z "$latestShimmerInxParticipationVersion" ]; then
            sudo sed -i 's~^latestShimmerInxParticipationVersion=.*~latestShimmerInxParticipationVersion=""~' $swarmConfigs/latest-versions.cfg
        fi
    fi

    if [ -f "/usr/bin/shimmer-inx-poi" ]; then
        currentLatestShimmerInxPoiVersion=$latestShimmerInxPoiVersion
        # Latest INX-POI version
        if [ "$shimmerInxPoiRelease" = "stable" ]; then
            latestShimmerInxPoiVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/inx-poi | grep $shimmerInxPoiReleaseVersion | awk '!/(-rc|-beta|-alpha)/' | head -n 1)
            latestShimmerInxPoiVersion=$(echo $latestShimmerInxPoiVersion | tr -d 'v')
        fi
        if [ "$shimmerInxPoiRelease" = "beta" ]; then
            latestShimmerInxPoiVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/inx-poi | grep $shimmerInxPoiReleaseVersion | awk '!/-alpha/' | head -n 1)
            latestShimmerInxPoiVersion=$(echo $latestShimmerInxPoiVersion | tr -d 'v')
        fi
        if [ "$shimmerInxPoiRelease" = "alpha" ]; then
            latestShimmerInxPoiVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/inx-poi | grep $shimmerInxPoiReleaseVersion | head -n 1)
            latestShimmerInxPoiVersion=$(echo $latestShimmerInxPoiVersion | tr -d 'v')
        fi
        if [ "$latestShimmerInxPoiVersion" = "\"\"" ] || [ -z "$latestShimmerInxPoiVersion" ] || [ "$latestShimmerInxPoiVersion" = "null" ]; then
            if [ -f "/usr/bin/shimmer-inx-poi" ]; then
                latestShimmerInxPoiVersion=$(/usr/bin/shimmer-inx-poi -v | awk '{ print $2 }')
            fi
        fi
        if [ "$(printf '%s\n' "$latestShimmerInxPoiVersion" "$currentLatestShimmerInxPoiVersion" | sort -V | head -n1)" != "$latestShimmerInxPoiVersion" ] && [ ! -z "$latestShimmerInxPoiVersion" ]; then
            sudo sed -i 's~^latestShimmerInxPoiVersion=.*~latestShimmerInxPoiVersion="'$latestShimmerInxPoiVersion'"~' $swarmConfigs/latest-versions.cfg
        fi
        unset currentLatestShimmerInxPoiVersion
    else
        if [ ! -z "$latestShimmerInxPoiVersion" ]; then
            sudo sed -i 's~^latestShimmerInxPoiVersion=.*~latestShimmerInxPoiVersion=""~' $swarmConfigs/latest-versions.cfg
        fi
    fi
fi
