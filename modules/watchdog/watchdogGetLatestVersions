#!/bin/bash
source $swarmConfigs/latest-versions.cfg

# SET TIME
timeFrame=`date '+%M'`

# GET LATEST VERSIONS
if [ "$timeFrame" = "00" ] || [ "$timeFrame" = "15" ] || [ "$timeFrame" = "30" ] || [ "$timeFrame" = "45" ]; then
    # Latest SWARM version
    latestSwarmVersion=$(curl --max-time 5 -Ls https://cdn.tanglebay.com/swarm/version/stable | head -n 1)
    latestSwarmVersion=$(echo $latestSwarmVersion | tr -d 'v')
    sudo sed -i 's~^latestSwarmVersion=.*~latestSwarmVersion="'$latestSwarmVersion'"~' $swarmConfigs/latest-versions.cfg
fi

if [ "$timeFrame" = "$watchdogUpdateNumber" ] || [ "$timeFrame" = "$watchdogUpdateNumber2" ]; then
    for swarmApp in ${swarmApps[@]}
    do
        if [ "$swarmApp" = "iota-hornet" ]; then
            swarmAppName="hornet"
            swarmAppPrefix="iotaHornet"
        fi
        if [ "$swarmApp" = "shimmer-hornet" ]; then
            swarmAppName="hornet"
            swarmAppPrefix="shimmerHornet"
        fi
        if [ "$swarmApp" = "goshimmer" ]; then
            swarmAppName="goshimmer"
            swarmAppPrefix="goshimmer"
        fi
        if [ "$swarmApp" = "wasp" ]; then
            swarmAppName="wasp"
            swarmAppPrefix="wasp"
        fi
        if [ "$swarmApp" = "shimmer-inx-dashboard" ]; then
            swarmAppName="inx-dashboard"
            swarmAppPrefix="shimmerInxDashboard"
        fi
        if [ "$swarmApp" = "shimmer-inx-indexer" ]; then
            swarmAppName="inx-indexer"
            swarmAppPrefix="shimmerInxIndexer"
        fi
        if [ "$swarmApp" = "shimmer-inx-mqtt" ]; then
            swarmAppName="inx-mqtt"
            swarmAppPrefix="shimmerInxMqtt"
        fi
        if [ "$swarmApp" = "shimmer-inx-participation" ]; then
            swarmAppName="inx-participation"
            swarmAppPrefix="shimmerInxParticipation"
        fi
        if [ "$swarmApp" = "shimmer-inx-poi" ]; then
            swarmAppName="inx-poi"
            swarmAppPrefix="shimmerInxPoi"
        fi
        if [ -f "/usr/bin/$swarmApp" ]; then
            swarmAppCurrentLatestVersion=latest${swarmAppPrefix^}Version
            swarmAppRelease=${swarmAppPrefix}Release
            swarmAppReleaseVersion=${swarmAppPrefix}ReleaseVersion
            swarmAppModules=${swarmAppPrefix}Modules

            if [ "${!swarmAppRelease}" = "stable" ]; then
                swarmAppLatestVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/$swarmAppName | grep ${!swarmAppReleaseVersion} | awk '!/(-rc|-beta|-alpha)/' | head -n 1)
                swarmAppLatestVersion=$(echo $swarmAppLatestVersion | tr -d 'v')
            fi
            if [ "${!swarmAppRelease}" = "beta" ]; then
                swarmAppLatestVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/$swarmAppName | grep ${!swarmAppReleaseVersion} | awk '!/-alpha/' | head -n 1)
                swarmAppLatestVersion=$(echo $swarmAppLatestVersion | tr -d 'v')
            fi
            if [ "${!swarmAppRelease}" = "alpha" ]; then
                swarmAppLatestVersion=$(curl --max-time 5 -Ls https://$swarmAuthUser:$swarmAuthPwd@cdn.tanglebay.com/github/releases/$swarmAppName | grep ${!swarmAppReleaseVersion} | head -n 1)
                swarmAppLatestVersion=$(echo $swarmAppLatestVersion | tr -d 'v')
            fi
            if [ "$swarmAppLatestVersion" = "\"\"" ] || [ -z "$swarmAppLatestVersion" ] || [ "$swarmAppLatestVersion" = "null" ]; then
                if [ -f "/usr/bin/$swarmApp" ]; then
                    source ${!swarmAppModules}/${swarmAppPrefix}Version
                    swarmAppLatestVersion=${swarmAppPrefix}Version
                fi
            fi
            if [ "$(printf '%s\n' "$swarmAppLatestVersion" "${!swarmAppCurrentLatestVersion}" | sort -V | head -n1)" != "$swarmAppLatestVersion" ] && [ ! -z "$swarmAppLatestVersion" ]; then
                sudo sed -i 's~^latest'${swarmAppPrefix^}'Version=.*~latest'${swarmAppPrefix^}'Version="'$swarmAppLatestVersion'"~' $swarmConfigs/latest-versions.cfg
            fi
        else
            if [ ! -z "$swarmAppLatestVersion" ]; then
                sudo sed -i 's~^latest'${swarmAppPrefix^}'Version=.*~latest'${swarmAppPrefix^}'Version=""~' $swarmConfigs/latest-versions.cfg
            fi
        fi
        unset swarmAppName swarmAppPrefix swarmAppCurrentLatestVersion swarmAppRelease swarmAppReleaseVersion swarmAppModules swarmAppLatestVersion
    done
    unset swarmApp
fi