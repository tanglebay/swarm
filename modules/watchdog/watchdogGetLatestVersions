#!/bin/bash
source $swarmConfigs/latest-versions.cfg

# SET TIME
timeFrame=`date '+%M'`

# GET LATEST VERSIONS
if [ "$timeFrame" = "07" ] || [ "$timeFrame" = "22" ] || [ "$timeFrame" = "37" ] || [ "$timeFrame" = "52" ]; then
    # Latest SWARM version
    latestSwarmVersion=$(curl --max-time 5 -Ls https://api.github.com/repos/TangleBay/swarm-releases/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")')
    latestSwarmVersion=$(echo $latestSwarmVersion | tr -d 'v')
    sudo sed -i 's~^latestSwarmVersion=.*~latestSwarmVersion="'$latestSwarmVersion'"~' $swarmConfigs/latest-versions.cfg
fi

if [ "$timeFrame" = "15" ]; then
    if [ -f "/usr/bin/hornet" ]; then
        # Latest Hornet version
        if [ "$hornetRelease" = "stable" ]; then
            latestHornetVersion=$(curl --max-time 5 -Ls https://api.github.com/repos/iotaledger/hornet/releases | grep -oP '"tag_name": "\K(.*)(?=")' | grep $hornetReleaseVersion | awk '!/(-rc|-alpha)/' | head -n 1)
            latestHornetVersion=$(echo $latestHornetVersion | tr -d 'v')
        fi
        if [ "$hornetRelease" = "beta" ]; then
            latestHornetVersion=$(curl --max-time 5 -Ls https://api.github.com/repos/iotaledger/hornet/releases | grep -oP '"tag_name": "\K(.*)(?=")' | grep $hornetReleaseVersion | awk '!/-alpha/' | head -n 1)
            latestHornetVersion=$(echo $latestHornetVersion | tr -d 'v')
        fi
        if [ "$hornetRelease" = "alpha" ]; then
            latestHornetVersion=$(curl --max-time 5 -Ls https://api.github.com/repos/iotaledger/hornet/releases | grep -oP '"tag_name": "\K(.*)(?=")' | grep $hornetReleaseVersion | head -n 1)
            latestHornetVersion=$(echo $latestHornetVersion | tr -d 'v')
        fi
        if [ "$latestHornetVersion" = "\"\"" ] || [ -z "$latestHornetVersion" ] || [ "$latestHornetVersion" = "null" ]; then
            if [ -f "/usr/bin/hornet" ]; then
                latestHornetVersion=$(/usr/bin/hornet -v | awk '{ print $2 }')
            fi
        fi
        sudo sed -i 's~^latestHornetVersion=.*~latestHornetVersion="'$latestHornetVersion'"~' $swarmConfigs/latest-versions.cfg
    fi

    if [ -f "/usr/bin/shimmer-hornet" ]; then
        # Latest Shimmer-Hornet version
        if [ "$shimmerHornetRelease" = "stable" ]; then
            latestShimmerHornetVersion=$(curl --max-time 5 -Ls https://api.github.com/repos/iotaledger/hornet/releases | grep -oP '"tag_name": "\K(.*)(?=")' | grep $shimmerHornetReleaseVersion | awk '!/(-rc|-alpha)/' | head -n 1)
            latestShimmerHornetVersion=$(echo $latestShimmerHornetVersion | tr -d 'v')
        fi
        if [ "$shimmerHornetRelease" = "beta" ]; then
            latestShimmerHornetVersion=$(curl --max-time 5 -Ls https://api.github.com/repos/iotaledger/hornet/releases | grep -oP '"tag_name": "\K(.*)(?=")' | grep $shimmerHornetReleaseVersion | awk '!/-alpha/' | head -n 1)
            latestShimmerHornetVersion=$(echo $latestShimmerHornetVersion | tr -d 'v')
        fi
        if [ "$shimmerHornetRelease" = "alpha" ]; then
            latestShimmerHornetVersion=$(curl --max-time 5 -Ls https://api.github.com/repos/iotaledger/hornet/releases | grep -oP '"tag_name": "\K(.*)(?=")' | grep $shimmerHornetReleaseVersion | head -n 1)
            latestShimmerHornetVersion=$(echo $latestShimmerHornetVersion | tr -d 'v')
        fi
        if [ "$latestShimmerHornetVersion" = "\"\"" ] || [ -z "$latestShimmerHornetVersion" ] || [ "$latestShimmerHornetVersion" = "null" ]; then
            if [ -f "/usr/bin/shimmer-hornet" ]; then
                latestShimmerHornetVersion=$(/usr/bin/shimmer-hornet -v | awk '{ print $2 }')
            fi
        fi
        sudo sed -i 's~^latestShimmerHornetVersion=.*~latestShimmerHornetVersion="'$latestShimmerHornetVersion'"~' $swarmConfigs/latest-versions.cfg
    fi
fi

if [ "$timeFrame" = "30" ]; then
    if [ -f "/usr/bin/bee" ]; then
        # Latest Bee version
        if [ "$beeRelease" = "stable" ]; then
            latestBeeVersion=$(curl --max-time 5 -Ls https://api.github.com/repos/iotaledger/bee/releases | grep -oP '"tag_name": "\K(.*)(?=")' | grep $beeReleaseVersion | awk '!/(-rc|-alpha)/' | head -n 1)
            latestBeeVersion=$(echo $latestBeeVersion | tr -d 'v')
        fi
        if [ "$beeRelease" = "beta" ]; then
            latestBeeVersion=$(curl --max-time 5 -Ls https://api.github.com/repos/iotaledger/bee/releases | grep -oP '"tag_name": "\K(.*)(?=")' | grep $beeReleaseVersion | awk '!/-alpha/' | head -n 1)
            latestBeeVersion=$(echo $latestBeeVersion | tr -d 'v')
        fi
        if [ "$beeRelease" = "alpha" ]; then
            latestBeeVersion=$(curl --max-time 5 -Ls https://api.github.com/repos/iotaledger/bee/releases | grep -oP '"tag_name": "\K(.*)(?=")' | grep $beeReleaseVersion | head -n 1)
            latestBeeVersion=$(echo $latestBeeVersion | tr -d 'v')
        fi
        if [ "$latestBeeVersion" = "\"\"" ] || [ -z "$latestBeeVersion" ] || [ "$latestBeeVersion" = "null" ]; then
            if [ -f "/usr/bin/shimmer-bee" ]; then
                latestBeeVersion=$(/usr/bin/bee -v | awk '{ print $2 }')
            fi
        fi
        sudo sed -i 's~^latestBeeVersion=.*~latestBeeVersion="'$latestBeeVersion'"~' $swarmConfigs/latest-versions.cfg
    fi

    if [ -f "/usr/bin/shimmer-bee" ]; then
        # Latest Shimmer-Bee version
        if [ "$shimmerBeeRelease" = "stable" ]; then
            latestShimmerBeeVersion=$(curl --max-time 5 -Ls https://api.github.com/repos/iotaledger/bee/releases | grep -oP '"tag_name": "\K(.*)(?=")' | grep $shimmerBeeReleaseVersion | awk '!/(-rc|-alpha)/' | head -n 1)
            latestShimmerBeeVersion=$(echo $latestShimmerBeeVersion | tr -d 'v')
        fi
        if [ "$shimmerBeeRelease" = "beta" ]; then
            latestShimmerBeeVersion=$(curl --max-time 5 -Ls https://api.github.com/repos/iotaledger/bee/releases | grep -oP '"tag_name": "\K(.*)(?=")' | grep $shimmerBeeReleaseVersion | awk '!/-alpha/' | head -n 1)
            latestShimmerBeeVersion=$(echo $latestShimmerBeeVersion | tr -d 'v')
        fi
        if [ "$shimmerBeeRelease" = "alpha" ]; then
            latestShimmerBeeVersion=$(curl --max-time 5 -Ls https://api.github.com/repos/iotaledger/bee/releases | grep -oP '"tag_name": "\K(.*)(?=")' | grep $shimmerBeeReleaseVersion | head -n 1)
            latestShimmerBeeVersion=$(echo $latestShimmerBeeVersion | tr -d 'v')
        fi
        if [ "$latestShimmerBeeVersion" = "\"\"" ] || [ -z "$latestShimmerBeeVersion" ] || [ "$latestShimmerBeeVersion" = "null" ]; then
            if [ -f "/usr/bin/shimmer-bee" ]; then
                latestShimmerBeeVersion=$(/usr/bin/shimmer-bee -v | awk '{ print $2 }')
            fi
        fi
        sudo sed -i 's~^latestShimmerBeeVersion=.*~latestShimmerBeeVersion="'$latestShimmerBeeVersion'"~' $swarmConfigs/latest-versions.cfg
    fi
fi


if [ "$timeFrame" = "45" ]; then
    if [ -f "/usr/bin/goshimmer" ]; then
        # Latest GoShimmer version
        latestGoshimmerVersion=$(curl --max-time 5 -Ls https://api.github.com/repos/iotaledger/goshimmer/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")')
        latestGoshimmerVersion=$(echo $latestGoshimmerVersion | tr -d 'v')
        if [ "$latestGoshimmerVersion" = "\"\"" ] || [ -z "$latestGoshimmerVersion" ] || [ "$latestGoshimmerVersion" = "null" ]; then
            if [ -f "/usr/bin/goshimmer" ]; then
                latestGoshimmerVersion=$(cd $goshimmerHome ; /usr/bin/goshimmer -v | awk '{print $2}' | tr -d 'v')
            fi
        fi
        sudo sed -i 's~^latestGoshimmerVersion=.*~latestGoshimmerVersion="'$latestGoshimmerVersion'"~' $swarmConfigs/latest-versions.cfg
    fi

    if [ -f "/usr/bin/wasp" ]; then
        # Latest WASP version
        latestWaspVersion=$(curl --max-time 5 -Ls https://api.github.com/repos/iotaledger/wasp/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")')
        latestWaspVersion=$(echo $latestWaspVersion | tr -d 'v')
        if [ "$latestWaspVersion" = "\"\"" ] || [ -z "$latestWaspVersion" ] || [ "$latestWaspVersion" = "null" ]; then
            if [ -f "/usr/bin/wasp" ]; then
                latestWaspVersion=$(cd $waspHome ; /usr/bin/wasp -v | awk '{print $2}' | tr -d 'v')
            fi
        fi
        sudo sed -i 's~^latestWaspVersion=.*~latestWaspVersion="'$latestWaspVersion'"~' $swarmConfigs/latest-versions.cfg
    fi
fi

if [ "$timeFrame" = "00" ]; then
    if [ -f "/usr/bin/shimmer-inx-indexer" ]; then
        # Latest INX-Indexer version
        if [ "$shimmerInxIndexerRelease" = "stable" ]; then
            latestShimmerInxIndexerVersion=$(curl --max-time 5 -Ls https://api.github.com/repos/iotaledger/inx-indexer/releases | grep -oP '"tag_name": "\K(.*)(?=")' | grep $shimmerInxIndexerReleaseVersion | awk '!/(-rc|-alpha)/' | head -n 1)
            latestShimmerInxIndexerVersion=$(echo $latestShimmerInxIndexerVersion | tr -d 'v')
        fi
        if [ "$shimmerInxIndexerRelease" = "beta" ]; then
            latestShimmerInxIndexerVersion=$(curl --max-time 5 -Ls https://api.github.com/repos/iotaledger/inx-indexer/releases | grep -oP '"tag_name": "\K(.*)(?=")' | grep $shimmerInxIndexerReleaseVersion | awk '!/-alpha/' | head -n 1)
            latestShimmerInxIndexerVersion=$(echo $latestShimmerInxIndexerVersion | tr -d 'v')
        fi
        if [ "$shimmerInxIndexerRelease" = "alpha" ]; then
            latestShimmerInxIndexerVersion=$(curl --max-time 5 -Ls https://api.github.com/repos/iotaledger/inx-indexer/releases | grep -oP '"tag_name": "\K(.*)(?=")' | grep $shimmerInxIndexerReleaseVersion | head -n 1)
            latestShimmerInxIndexerVersion=$(echo $latestShimmerInxIndexerVersion | tr -d 'v')
        fi
        if [ "$latestShimmerInxIndexerVersion" = "\"\"" ] || [ -z "$latestShimmerInxIndexerVersion" ] || [ "$latestShimmerInxIndexerVersion" = "null" ]; then
            if [ -f "/usr/bin/inx-indexer" ]; then
                latestShimmerInxIndexerVersion=$(/usr/bin/shimmer-inx-indexer -v | awk '{ print $2 }')
            fi
        fi
        sudo sed -i 's~^latestShimmerInxIndexerVersion=.*~latestShimmerInxIndexerVersion="'$latestShimmerInxIndexerVersion'"~' $swarmConfigs/latest-versions.cfg
    fi

    if [ -f "/usr/bin/shimmer-inx-mqtt" ]; then
        # Latest INX-MQTT version
        if [ "$shimmerInxMqttRelease" = "stable" ]; then
            latestShimmerInxMqttVersion=$(curl --max-time 5 -Ls https://api.github.com/repos/iotaledger/inx-mqtt/releases | grep -oP '"tag_name": "\K(.*)(?=")' | grep $shimmerInxMqttReleaseVersion | awk '!/(-rc|-alpha)/' | head -n 1)
            latestShimmerInxMqttVersion=$(echo $latestShimmerInxMqttVersion | tr -d 'v')
        fi
        if [ "$shimmerInxMqttRelease" = "beta" ]; then
            latestShimmerInxMqttVersion=$(curl --max-time 5 -Ls https://api.github.com/repos/iotaledger/inx-mqtt/releases | grep -oP '"tag_name": "\K(.*)(?=")' | grep $shimmerInxMqttReleaseVersion | awk '!/-alpha/' | head -n 1)
            latestShimmerInxMqttVersion=$(echo $latestShimmerInxMqttVersion | tr -d 'v')
        fi
        if [ "$shimmerInxMqttRelease" = "alpha" ]; then
            latestShimmerInxMqttVersion=$(curl --max-time 5 -Ls https://api.github.com/repos/iotaledger/inx-mqtt/releases | grep -oP '"tag_name": "\K(.*)(?=")' | grep $shimmerInxMqttReleaseVersion | head -n 1)
            latestShimmerInxMqttVersion=$(echo $latestShimmerInxMqttVersion | tr -d 'v')
        fi
        if [ "$latestShimmerInxMqttVersion" = "\"\"" ] || [ -z "$latestShimmerInxMqttVersion" ] || [ "$latestShimmerInxMqttVersion" = "null" ]; then
            if [ -f "/usr/bin/inx-mqtt" ]; then
                latestShimmerInxMqttVersion=$(/usr/bin/shimmer-inx-mqtt -v | awk '{ print $2 }')
            fi
        fi
        sudo sed -i 's~^latestShimmerInxMqttVersion=.*~latestShimmerInxMqttVersion="'$latestShimmerInxMqttVersion'"~' $swarmConfigs/latest-versions.cfg
    fi

    if [ -f "/usr/bin/shimmer-inx-participation" ]; then
        # Latest INX-Participation version
        if [ "$shimmerInxParticipationRelease" = "stable" ]; then
            latestShimmerInxParticipationVersion=$(curl --max-time 5 -Ls https://api.github.com/repos/iotaledger/inx-participation/releases | grep -oP '"tag_name": "\K(.*)(?=")' | grep $shimmerInxParticipationReleaseVersion | awk '!/(-rc|-alpha)/' | head -n 1)
            latestShimmerInxParticipationVersion=$(echo $latestShimmerInxParticipationVersion | tr -d 'v')
        fi
        if [ "$shimmerInxParticipationRelease" = "beta" ]; then
            latestShimmerInxParticipationVersion=$(curl --max-time 5 -Ls https://api.github.com/repos/iotaledger/inx-participation/releases | grep -oP '"tag_name": "\K(.*)(?=")' | grep $shimmerInxParticipationReleaseVersion | awk '!/-alpha/' | head -n 1)
            latestShimmerInxParticipationVersion=$(echo $latestShimmerInxParticipationVersion | tr -d 'v')
        fi
        if [ "$shimmerInxParticipationRelease" = "alpha" ]; then
            latestShimmerInxParticipationVersion=$(curl --max-time 5 -Ls https://api.github.com/repos/iotaledger/inx-participation/releases | grep -oP '"tag_name": "\K(.*)(?=")' | grep $shimmerInxParticipationReleaseVersion | head -n 1)
            latestShimmerInxParticipationVersion=$(echo $latestShimmerInxParticipationVersion | tr -d 'v')
        fi
        if [ "$latestShimmerInxParticipationVersion" = "\"\"" ] || [ -z "$latestShimmerInxParticipationVersion" ] || [ "$latestShimmerInxParticipationVersion" = "null" ]; then
            if [ -f "/usr/bin/inx-participation" ]; then
                latestShimmerInxParticipationVersion=$(/usr/bin/shimmer-inx-participation -v | awk '{ print $2 }')
            fi
        fi
        sudo sed -i 's~^latestShimmerInxParticipationVersion=.*~latestShimmerInxParticipationVersion="'$latestShimmerInxParticipationVersion'"~' $swarmConfigs/latest-versions.cfg
    fi
fi
