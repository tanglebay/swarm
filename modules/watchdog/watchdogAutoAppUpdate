#!/bin/bash

if [ "$timeFrame" = "$watchdogUpdateNumber" ] || [ "$timeFrame" = "$watchdogUpdateNumber2" ]; then
    for swarmApp in ${swarmApps[@]}
    do
        if [ -f "/usr/bin/$swarmApp" ]; then
            source $swarmModule/swarmAppVars

            swarmAppModule=${swarmAppPrefix}Module
            swarmAppAutoUpdate=watchdog${swarmAppPrefix^}AutoUpdate

            if [ "${!swarmAppAutoUpdate}" = "true" ] && [ ! -f "/tmp/$swarmApp.lock" ] && [ ! -f "/tmp/watchdog_$swarmApp.lock" ]; then
                source ${!swarmAppModule}/${swarmAppPrefix}Version
                swarmAppVersion=${swarmAppPrefix}Version
                swarmAppLatestVersion=latest${swarmAppPrefix^}Version
                if [ "${!swarmAppLatestVersion}" != "${!swarmAppVersion}" ] && [ ! -z "${!swarmAppLatestVersion}" ] && [ ! -z "${!swarmAppVersion}" ] && [[ ${!swarmAppLatestVersion} =~ [0-9] ]] && [[ ${!swarmAppVersion} =~ [0-9] ]]; then
                    if [ ! -f "/tmp/watchdog_$swarmApp.lock" ]; then
                        sudo touch /tmp/watchdog_$swarmApp.lock > /dev/null 2>&1
                    fi
                    swarmAppCurrentVersion=${!swarmAppVersion}
                    source ${!swarmAppModule}/${swarmAppPrefix}Installer
                    source ${!swarmAppModule}/${swarmAppPrefix}Version
                    swarmAppVersion=${swarmAppPrefix}Version
                    swarmAppUpdated=${swarmAppPrefix}Updated
                    if [ "$swarmAppCurrentVersion" != "${!swarmAppVersion}" ] || [ "${!swarmAppUpdated}" = "true" ]; then
                        restartDate=`date '+%d-%m-%Y %H-%M-%S'`
                        # CALL MODULE CONFIGPARSER
                        source ${!swarmAppModule}/${swarmAppPrefix}Parser
                        swarmAppRestart=restart${swarmAppPrefix^}
                        if [ "${!swarmAppRestart}" = "true" ]; then
                            if [ "$swarmApp" = "iota-hornet" ]; then
                                for iotaInxPlugin in ${iotaInxPlugins[@]}
                                do
                                    if [ -f "/usr/bin/iota-inx-$iotaInxPlugin" ]; then
                                        if [ ! -f "/tmp/watchdog_iota-inx-$iotaInxPlugin.lock" ]; then
                                            sudo touch /tmp/watchdog_iota-inx-$iotaInxPlugin.lock > /dev/null 2>&1
                                        fi
                                        sudo systemctl stop iota-inx-$iotaInxPlugin 2>/dev/null
                                    fi
                                done
                                unset iotaInxPlugin
                            fi
                            if [ "$swarmApp" = "shimmer-hornet" ]; then
                                for shimmerInxPlugin in ${shimmerInxPlugins[@]}
                                do
                                    if [ -f "/usr/bin/shimmer-inx-$shimmerInxPlugin" ]; then
                                        if [ ! -f "/tmp/watchdog_shimmer-inx-$shimmerInxPlugin.lock" ]; then
                                            sudo touch /tmp/watchdog_shimmer-inx-$shimmerInxPlugin.lock > /dev/null 2>&1
                                        fi
                                        sudo systemctl stop shimmer-inx-$shimmerInxPlugin 2>/dev/null
                                    fi
                                done
                                unset shimmerInxPlugin
                            fi
                            sudo systemctl stop $swarmApp > /dev/null 2>&1
                            sleep 5
                            sudo systemctl start $swarmApp > /dev/null 2>&1
                            sleep 10
                            if [ "$swarmApp" = "iota-hornet" ]; then
                                for iotaInxPlugin in ${iotaInxPlugins[@]}
                                do
                                    if [ -f "/usr/bin/iota-inx-$iotaInxPlugin" ]; then
                                        sudo systemctl start iota-inx-$iotaInxPlugin 2>/dev/null
                                        if [ -f "/tmp/watchdog_iota-inx-$iotaInxPlugin.lock" ]; then
                                            sudo rm -rf /tmp/watchdog_iota-inx-$iotaInxPlugin.lock > /dev/null 2>&1
                                        fi
                                    fi
                                done
                                unset iotaInxPlugin
                            fi
                            if [ "$swarmApp" = "shimmer-hornet" ]; then
                                for shimmerInxPlugin in ${shimmerInxPlugins[@]}
                                do
                                    if [ -f "/usr/bin/shimmer-inx-$shimmerInxPlugin" ]; then
                                        sudo systemctl start shimmer-inx-$shimmerInxPlugin 2>/dev/null
                                        if [ -f "/tmp/watchdog_shimmer-inx-$shimmerInxPlugin.lock" ]; then
                                            sudo rm -rf /tmp/watchdog_shimmer-inx-$shimmerInxPlugin.lock > /dev/null 2>&1
                                        fi
                                    fi
                                done
                                unset shimmerInxPlugin
                            fi
                        fi
                        swarmAppChecksum=${swarmAppPrefix}Checksum
                        echo "$restartDate [AUTOUPDATE] New Version (${!swarmAppLatestVersion}) of $swarmAppName installed. Checksum: ${!swarmAppChecksum}" >> $swarmLogs/swarm.log
                        telegramText="Host: $HOSTNAME%0A%0AApp: $swarmAppName%0AAction: New version <b>${!swarmAppLatestVersion}</b> installed.%0A%0AChecksum: ${!swarmAppChecksum}"
                        source $watchdogModule/watchdogTelegram
                        if [ -f "/tmp/watchdog_$swarmApp.checksum" ]; then
                            sudo rm -rf /tmp/watchdog_$swarmApp.checksum > /dev/null 2>&1
                        fi
                    fi
                    if [ -f "/tmp/watchdog_$swarmApp.lock" ]; then
                        sudo rm -rf /tmp/watchdog_$swarmApp.lock > /dev/null 2>&1
                    fi
                fi
            fi
            unset swarmAppName swarmAppPrefix swarmAppVersion swarmAppLatestVersion swarmAppCurrentVersion swarmAppUpdated restartDate swarmAppRestart swarmAppChecksum telegramText
        fi
    done
    unset swarmApp
fi