#!/bin/bash

while [ $exitCode -lt 1 ]; do
    if [ "$watchdogSwarmAutoUpdate" = "true" ]; then
        watchdogSwarmAutoUpdateMenu="Disable"
    else
        watchdogSwarmAutoUpdateMenu="Enable"
    fi

    CHOICE=$(
        whiptail --title "Watchdog [-] Configuration" --menu "\nChoose an option" 24 65 0 \
        "" "" \
        "1)" "Hornet" \
        "2)" "INX" \
        "3)" "GoShimmer" \
        "4)" "Telegram Notifications" \
        "5)" "SWARM" \
        "6)" "System" 3>&2 2>&1 1>&3
    )
    exitStatus=$?
    if [ "$exitStatus" = "1" ]; then
        exitCode=1
    fi
    case $CHOICE in
        "1)")
            while [ $exitCode -lt 1 ]; do
                CHOICE=$(
                    whiptail --title "Watchdog [-] Hornet" --menu "\nChoose an option" 24 65 0 \
                    "" "" \
                    "1)" "[IOTA] Hornet" \
                    "2)" "[SHIMMER] Hornet" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        while [ $exitCode -lt 1 ]; do
                            source $swarmConfigs/watchdog.cfg
                            if [ "$watchdogIotaHornetAutoUpdate" = "true" ]; then
                                watchdogIotaHornetAutoUpdateMenu="Disable"
                            else
                                watchdogIotaHornetAutoUpdateMenu="Enable"
                            fi
                            if [ "$watchdogIotaHornetAllowDbReset" = "true" ]; then
                                watchdogIotaHornetAllowDbResetMenu="Forbid"
                            else
                                watchdogIotaHornetAllowDbResetMenu="Allow"
                            fi
                            if [ "$watchdogIotaHornetServiceStatusCheck" = "true" ]; then
                                watchdogIotaHornetServiceStatusCheckMenu="Disable"
                            else
                                watchdogIotaHornetServiceStatusCheckMenu="Enable"
                            fi
                            if [ "$watchdogIotaHornetParticipationAutoAdd" = "true" ]; then
                                watchdogIotaHornetParticipationAutoAddMenu="Disable"
                            else
                                watchdogIotaHornetParticipationAutoAddMenu="Enable"
                            fi

                            CHOICE=$(
                                whiptail --title "Watchdog [IOTA] Hornet" --menu "\nChoose an option" 24 65 0 \
                                "" "" \
                                "1)" "$watchdogIotaHornetAutoUpdateMenu [IOTA] Hornet AutoUpdater" \
                                "2)" "$watchdogIotaHornetAllowDbResetMenu [IOTA] Hornet database reset" \
                                "3)" "$watchdogIotaHornetServiceStatusCheckMenu [IOTA] Hornet service status check" \
                                "4)" "$watchdogIotaHornetParticipationAutoAddMenu auto-add [IOTA] Hornet participation events" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    if [ "$watchdogIotaHornetAutoUpdate" = "true" ]; then
                                        watchdogIotaHornetAutoUpdate=false
                                        watchdogIotaHornetAutoUpdateMenu="disabled"
                                    else
                                        watchdogIotaHornetAutoUpdate=true
                                        watchdogIotaHornetAutoUpdateMenu="enabled"
                                    fi
                                    sudo sed -i 's/^watchdogIotaHornetAutoUpdate=.*/watchdogIotaHornetAutoUpdate='$watchdogIotaHornetAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                    whiptail --title "Watchdog [IOTA] Hornet" --msgbox "[IOTA] Hornet AutoUpdater $watchdogIotaHornetAutoUpdateMenu." 8 65
                                ;;
                                "2)")
                                    if [ "$watchdogIotaHornetAllowDbReset" = "true" ]; then
                                        watchdogIotaHornetAllowDbReset=false
                                        watchdogIotaHornetAllowDbResetMenu="disabled"
                                    else
                                        watchdogIotaHornetAllowDbReset=true
                                        watchdogIotaHornetAllowDbResetMenu="enabled"
                                    fi
                                    sudo sed -i 's/^watchdogIotaHornetAllowDbReset=.*/watchdogIotaHornetAllowDbReset='$watchdogIotaHornetAllowDbReset'/' $swarmConfigs/watchdog.cfg
                                    whiptail --title "Watchdog [IOTA] Hornet" --msgbox "Delete [IOTA] Hornet database $iotaHornetAllowDbResetMenu for Watchdog." 8 65
                                ;;
                                "3)")
                                    if [ "$watchdogIotaHornetServiceStatusCheck" = "true" ]; then
                                        watchdogIotaHornetServiceStatusCheck=false
                                        watchdogIotaHornetServiceStatusCheckMenu="disabled"
                                    else
                                        watchdogIotaHornetServiceStatusCheck=true
                                        watchdogIotaHornetServiceStatusCheckMenu="enabled"
                                    fi
                                    sudo sed -i 's/^watchdogIotaHornetServiceStatusCheck=.*/watchdogIotaHornetServiceStatusCheck='$watchdogIotaHornetServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                    whiptail --title "Watchdog [IOTA] Hornet" --msgbox "Watchdog [IOTA] Hornet service check $watchdogIotaHornetServiceStatusCheckMenu." 8 65
                                ;;
                                "4)")
                                    if [ "$watchdogIotaHornetParticipationAutoAdd" = "true" ]; then
                                        watchdogIotaHornetParticipationAutoAdd=false
                                        watchdogIotaHornetParticipationAutoAddMenu="disabled"
                                    else
                                        watchdogIotaHornetParticipationAutoAdd=true
                                        watchdogIotaHornetParticipationAutoAddMenu="enabled"
                                    fi
                                    sudo sed -i 's/^watchdogIotaHornetParticipationAutoAdd=.*/watchdogIotaHornetParticipationAutoAdd='$watchdogIotaHornetParticipationAutoAdd'/' $swarmConfigs/watchdog.cfg
                                    whiptail --title "Watchdog [IOTA] Hornet" --msgbox "Watchdog auto-add [IOTA] Hornet participation events $watchdogIotaHornetParticipationAutoAddMenu." 8 65
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                    "2)")
                        while [ $exitCode -lt 1 ]; do
                            source $swarmConfigs/watchdog.cfg
                            if [ "$watchdogShimmerHornetAutoUpdate" = "true" ]; then
                                watchdogShimmerHornetAutoUpdateMenu="Disable"
                            else
                                watchdogShimmerHornetAutoUpdateMenu="Enable"
                            fi
                            if [ "$watchdogShimmerHornetAllowDbReset" = "true" ]; then
                                watchdogShimmerHornetAllowDbResetMenu="Forbid"
                            else
                                watchdogShimmerHornetAllowDbResetMenu="Allow"
                            fi
                            if [ "$watchdogShimmerHornetServiceStatusCheck" = "true" ]; then
                                watchdogShimmerHornetServiceStatusCheckMenu="Disable"
                            else
                                watchdogShimmerHornetServiceStatusCheckMenu="Enable"
                            fi

                            CHOICE=$(
                                whiptail --title "Watchdog [SHIMMER] Hornet" --menu "\nChoose an option" 24 65 0 \
                                "" "" \
                                "1)" "$watchdogShimmerHornetAutoUpdateMenu [Shimmer] Hornet AutoUpdater" \
                                "2)" "$watchdogShimmerHornetAllowDbResetMenu [Shimmer] Hornet database reset" \
                                "3)" "$watchdogShimmerHornetServiceStatusCheckMenu [Shimmer] Hornet service status check" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    if [ "$watchdogShimmerHornetAutoUpdate" = "true" ]; then
                                        watchdogShimmerHornetAutoUpdate=false
                                        watchdogShimmerHornetAutoUpdateMenu="disabled"
                                    else
                                        watchdogShimmerHornetAutoUpdate=true
                                        watchdogShimmerHornetAutoUpdateMenu="enabled"
                                    fi
                                    sudo sed -i 's/^watchdogShimmerHornetAutoUpdate=.*/watchdogShimmerHornetAutoUpdate='$watchdogShimmerHornetAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                    whiptail --title "Watchdog [SHIMMER] Hornet" --msgbox "[Shimmer] Hornet AutoUpdater $watchdogShimmerHornetAutoUpdateMenu." 8 65
                                ;;
                                "2)")
                                    if [ "$watchdogShimmerHornetAllowDbReset" = "true" ]; then
                                        watchdogShimmerHornetAllowDbReset=false
                                        watchdogShimmerHornetAllowDbResetMenu="disabled"
                                    else
                                        watchdogShimmerHornetAllowDbReset=true
                                        watchdogShimmerHornetAllowDbResetMenu="enabled"
                                    fi
                                    sudo sed -i 's/^watchdogShimmerHornetAllowDbReset=.*/watchdogShimmerHornetAllowDbReset='$watchdogShimmerHornetAllowDbReset'/' $swarmConfigs/watchdog.cfg
                                    whiptail --title "Watchdog [SHIMMER] Hornet" --msgbox "Delete [Shimmer] Hornet database $watchdogShimmerHornetAllowDbResetMenu for Watchdog." 8 65
                                ;;
                                "3)")
                                    if [ "$watchdogShimmerHornetServiceStatusCheck" = "true" ]; then
                                        watchdogShimmerHornetServiceStatusCheck=false
                                        watchdogShimmerHornetServiceStatusCheckMenu="disabled"
                                    else
                                        watchdogShimmerHornetServiceStatusCheck=true
                                        watchdogShimmerHornetServiceStatusCheckMenu="enabled"
                                    fi
                                    sudo sed -i 's/^watchdogShimmerHornetServiceStatusCheck=.*/watchdogShimmerHornetServiceStatusCheck='$watchdogShimmerHornetServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                    whiptail --title "Watchdog [SHIMMER] Hornet" --msgbox "Watchdog [Shimmer] Hornet service check $watchdogShimmerHornetServiceStatusCheckMenu." 8 65
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                esac
            done
            exitCode=0
        ;;
        "2)")
            while [ $exitCode -lt 1 ]; do
                CHOICE=$(
                    whiptail --title "Watchdog [-] INX" --menu "\nChoose an option" 24 65 0 \
                    "" "" \
                    "1)" "[IOTA] INX" \
                    "2)" "[SHIMMER] INX" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        if [ "$iotaHornetReleaseVersion" = "v2" ] && [ ! -z "$iotaHornetReleaseVersion" ] && [[ $iotaHornetVersion =~ ^2.* ]]; then
                            while [ $exitCode -lt 1 ]; do
                                CHOICE=$(
                                    whiptail --title "Watchdog [IOTA] INX" --menu "\nChoose an option" 24 65 0 \
                                    "" "" \
                                    "1)" "[IOTA] INX-Dashboard" \
                                    "2)" "[IOTA] INX-Indexer" \
                                    "3)" "[IOTA] INX-MQTT" \
                                    "4)" "[IOTA] INX-Participation" \
                                    "5)" "[IOTA] INX-POI" 3>&2 2>&1 1>&3
                                )
                                exitStatus=$?
                                if [ "$exitStatus" = "1" ]; then
                                    exitCode=1
                                fi
                                case $CHOICE in
                                    "1)")
                                        while [ $exitCode -lt 1 ]; do
                                            source $swarmConfigs/watchdog.cfg
                                            if [ "$watchdogIotaInxDashboardAutoUpdate" = "true" ]; then
                                                watchdogIotaInxDashboardAutoUpdateMenu="Disable"
                                            else
                                                watchdogIotaInxDashboardAutoUpdateMenu="Enable"
                                            fi
                                            if [ "$watchdogIotaInxDashboardServiceStatusCheck" = "true" ]; then
                                                watchdogIotaInxDashboardServiceStatusCheckMenu="Disable"
                                            else
                                                watchdogIotaInxDashboardServiceStatusCheckMenu="Enable"
                                            fi

                                            CHOICE=$(
                                                whiptail --title "Watchdog [IOTA] INX-Dashboard" --menu "\nChoose an option" 24 65 0 \
                                                "1)" "$watchdogIotaInxDashboardAutoUpdateMenu AutoUpdater" \
                                                "2)" "$watchdogIotaInxDashboardServiceStatusCheckMenu Service Status Check" 3>&2 2>&1 1>&3
                                            )
                                            exitStatus=$?
                                            if [ "$exitStatus" = "1" ]; then
                                                exitCode=1
                                            fi
                                            case $CHOICE in
                                                "1)")
                                                    if [ "$watchdogIotaInxDashboardAutoUpdate" = "true" ]; then
                                                        watchdogIotaInxDashboardAutoUpdate=false
                                                        watchdogIotaInxDashboardAutoUpdateMenu="disabled"
                                                    else
                                                        watchdogIotaInxDashboardAutoUpdate=true
                                                        watchdogIotaInxDashboardAutoUpdateMenu="enabled"
                                                    fi
                                                    sudo sed -i 's/^watchdogIotaInxDashboardAutoUpdate=.*/watchdogIotaInxDashboardAutoUpdate='$watchdogIotaInxDashboardAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                                    whiptail --title "Watchdog [IOTA] INX-Dashboard" --msgbox "[IOTA] INX-Dashboard AutoUpdater $watchdogIotaInxDashboardAutoUpdateMenu." 8 65
                                                ;;
                                                "2)")
                                                    if [ "$watchdogIotaInxDashboardServiceStatusCheck" = "true" ]; then
                                                        watchdogIotaInxDashboardServiceStatusCheck=false
                                                        watchdogIotaInxDashboardServiceStatusCheckMenu="disabled"
                                                    else
                                                        watchdogIotaInxDashboardServiceStatusCheck=true
                                                        watchdogIotaInxDashboardServiceStatusCheckMenu="enabled"
                                                    fi
                                                    sudo sed -i 's/^watchdogIotaInxDashboardServiceStatusCheck=.*/watchdogIotaInxDashboardServiceStatusCheck='$watchdogIotaInxDashboardServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                                    whiptail --title "Watchdog [IOTA] INX-Dashboard" --msgbox "Watchdog [IOTA] INX-Dashboard service check $shimmerInxDashboardServiceStatusCheckMenu." 8 65
                                                ;;
                                            esac
                                        done
                                        exitCode=0
                                    ;;
                                    "2)")
                                        while [ $exitCode -lt 1 ]; do
                                            source $swarmConfigs/watchdog.cfg
                                            if [ "$watchdogIotaInxIndexerAutoUpdate" = "true" ]; then
                                                watchdogIotaInxIndexerAutoUpdateMenu="Disable"
                                            else
                                                watchdogIotaInxIndexerAutoUpdateMenu="Enable"
                                            fi
                                            if [ "$watchdogIotaInxIndexerAllowDbReset" = "true" ]; then
                                                watchdogIotaInxIndexerAllowDbResetMenu="Forbid"
                                            else
                                                watchdogIotaInxIndexerAllowDbResetMenu="Allow"
                                            fi
                                            if [ "$watchdogIotaInxIndexerServiceStatusCheck" = "true" ]; then
                                                watchdogIotaInxIndexerServiceStatusCheckMenu="Disable"
                                            else
                                                watchdogIotaInxIndexerServiceStatusCheckMenu="Enable"
                                            fi

                                            CHOICE=$(
                                                whiptail --title "Watchdog [IOTA] INX-Indexer" --menu "\nChoose an option" 24 65 0 \
                                                "" "" \
                                                "1)" "$watchdogIotaInxIndexerAutoUpdateMenu AutoUpdater" \
                                                "2)" "$watchdogIotaInxIndexerAllowDbResetMenu Database Reset" \
                                                "3)" "$watchdogIotaInxIndexerServiceStatusCheckMenu Service Status Check" 3>&2 2>&1 1>&3
                                            )
                                            exitStatus=$?
                                            if [ "$exitStatus" = "1" ]; then
                                                exitCode=1
                                            fi
                                            case $CHOICE in
                                                "1)")
                                                    if [ "$watchdogIotaInxIndexerAutoUpdate" = "true" ]; then
                                                        watchdogIotaInxIndexerAutoUpdate=false
                                                        watchdogIotaInxIndexerAutoUpdateMenu="disabled"
                                                    else
                                                        watchdogIotaInxIndexerAutoUpdate=true
                                                        watchdogIotaInxIndexerAutoUpdateMenu="enabled"
                                                    fi
                                                    sudo sed -i 's/^watchdogIotaInxIndexerAutoUpdate=.*/watchdogIotaInxIndexerAutoUpdate='$watchdogIotaInxIndexerAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                                    whiptail --title "Watchdog [IOTA] INX-Indexer" --msgbox "[IOTA] INX-Indexer AutoUpdater $watchdogIotaInxIndexerAutoUpdateMenu." 8 65
                                                ;;
                                                "2)")
                                                    if [ "$watchdogIotaInxIndexerAllowDbReset" = "true" ]; then
                                                        watchdogIotaInxIndexerAllowDbReset=false
                                                        watchdogIotaInxIndexerAllowDbResetMenu="disabled"
                                                    else
                                                        watchdogIotaInxIndexerAllowDbReset=true
                                                        watchdogIotaInxIndexerAllowDbResetMenu="enabled"
                                                    fi
                                                    sudo sed -i 's/^watchdogIotaInxIndexerAllowDbReset=.*/watchdogIotaInxIndexerAllowDbReset='$watchdogIotaInxIndexerAllowDbReset'/' $swarmConfigs/watchdog.cfg
                                                    whiptail --title "Watchdog [IOTA] INX-Indexer" --msgbox "Delete [IOTA] INX-Indexer database $watchdogIotaInxIndexerAllowDbResetMenu for Watchdog." 8 65
                                                ;;
                                                "3)")
                                                    if [ "$watchdogIotaInxIndexerServiceStatusCheck" = "true" ]; then
                                                        watchdogIotaInxIndexerServiceStatusCheck=false
                                                        watchdogIotaInxIndexerServiceStatusCheckMenu="disabled"
                                                    else
                                                        watchdogIotaInxIndexerServiceStatusCheck=true
                                                        watchdogIotaInxIndexerServiceStatusCheckMenu="enabled"
                                                    fi
                                                    sudo sed -i 's/^watchdogIotaInxIndexerServiceStatusCheck=.*/watchdogIotaInxIndexerServiceStatusCheck='$watchdogIotaInxIndexerServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                                    whiptail --title "Watchdog [IOTA] INX-Indexer" --msgbox "Watchdog [IOTA] INX-Indexer service check $watchdogIotaInxIndexerServiceStatusCheckMenu." 8 65
                                                ;;
                                            esac
                                        done
                                        exitCode=0
                                    ;;
                                    "3)")
                                        while [ $exitCode -lt 1 ]; do
                                            source $swarmConfigs/watchdog.cfg
                                            if [ "$watchdogIotaInxMqttAutoUpdate" = "true" ]; then
                                                watchdogIotaInxMqttAutoUpdateMenu="Disable"
                                            else
                                                watchdogIotaInxMqttAutoUpdateMenu="Enable"
                                            fi
                                            if [ "$watchdogIotaInxMqttServiceStatusCheck" = "true" ]; then
                                                watchdogIotaInxMqttServiceStatusCheckMenu="Disable"
                                            else
                                                watchdogIotaInxMqttServiceStatusCheckMenu="Enable"
                                            fi

                                            CHOICE=$(
                                                whiptail --title "Watchdog [IOTA] INX-MQTT" --menu "\nChoose an option" 24 65 0 \
                                                "" "" \
                                                "1)" "$watchdogIotaInxMqttAutoUpdateMenu AutoUpdater" \
                                                "2)" "$watchdogIotaInxMqttServiceStatusCheckMenu Service Status Check" 3>&2 2>&1 1>&3
                                            )
                                            exitStatus=$?
                                            if [ "$exitStatus" = "1" ]; then
                                                exitCode=1
                                            fi
                                            case $CHOICE in
                                                "1)")
                                                    if [ "$watchdogIotaInxMqttAutoUpdate" = "true" ]; then
                                                        watchdogIotaInxMqttAutoUpdate=false
                                                        watchdogIotaInxMqttAutoUpdateMenu="disabled"
                                                    else
                                                        watchdogIotaInxMqttAutoUpdate=true
                                                        watchdogIotaInxMqttAutoUpdateMenu="enabled"
                                                    fi
                                                    sudo sed -i 's/^watchdogIotaInxMqttAutoUpdate=.*/watchdogIotaInxMqttAutoUpdate='$watchdogIotaInxMqttAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                                    whiptail --title "Watchdog [IOTA] INX-MQTT" --msgbox "[IOTA] INX-MQTT AutoUpdater $watchdogIotaInxMqttAutoUpdateMenu." 8 65
                                                ;;
                                                "2)")
                                                    if [ "$watchdogIotaInxMqttServiceStatusCheck" = "true" ]; then
                                                        watchdogIotaInxMqttServiceStatusCheck=false
                                                        watchdogIotaInxMqttServiceStatusCheckMenu="disabled"
                                                    else
                                                        watchdogIotaInxMqttServiceStatusCheck=true
                                                        watchdogIotaInxMqttServiceStatusCheckMenu="enabled"
                                                    fi
                                                    sudo sed -i 's/^watchdogIotaInxMqttServiceStatusCheck=.*/watchdogIotaInxMqttServiceStatusCheck='$watchdogIotaInxMqttServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                                    whiptail --title "Watchdog [IOTA] INX-MQTT" --msgbox "Watchdog [IOTA] INX-MQTT service check $watchdogIotaInxMqttServiceStatusCheckMenu." 8 65
                                                ;;
                                            esac
                                        done
                                        exitCode=0
                                    ;;
                                    "4)")
                                        while [ $exitCode -lt 1 ]; do
                                            source $swarmConfigs/watchdog.cfg
                                            if [ "$watchdogIotaInxParticipationAutoUpdate" = "true" ]; then
                                                watchdogIotaInxParticipationAutoUpdateMenu="Disable"
                                            else
                                                watchdogIotaInxParticipationAutoUpdateMenu="Enable"
                                            fi
                                            if [ "$watchdogIotaInxParticipationAllowDbReset" = "true" ]; then
                                                watchdogIotaInxParticipationAllowDbResetMenu="Forbid"
                                            else
                                                watchdogIotaInxParticipationAllowDbResetMenu="Allow"
                                            fi
                                            if [ "$watchdogIotaInxParticipationServiceStatusCheck" = "true" ]; then
                                                watchdogIotaInxParticipationServiceStatusCheckMenu="Disable"
                                            else
                                                watchdogIotaInxParticipationServiceStatusCheckMenu="Enable"
                                            fi
                                            if [ "$watchdogIotaInxParticipationAutoAdd" = "true" ]; then
                                                watchdogIotaInxParticipationAutoAddMenu="Disable"
                                            else
                                                watchdogIotaInxParticipationAutoAddMenu="Enable"
                                            fi

                                            CHOICE=$(
                                                whiptail --title "Watchdog [IOTA] INX-Participation" --menu "\nChoose an option" 24 65 0 \
                                                "" "" \
                                                "1)" "$watchdogIotaInxParticipationAutoUpdateMenu AutoUpdater" \
                                                "2)" "$watchdogIotaInxParticipationAllowDbResetMenu Database Reset" \
                                                "3)" "$watchdogIotaInxParticipationServiceStatusCheckMenu Service Status Check" \
                                                "4)" "$watchdogIotaInxParticipationAutoAddMenu Auto-Add Participation Events" 3>&2 2>&1 1>&3
                                            )
                                            exitStatus=$?
                                            if [ "$exitStatus" = "1" ]; then
                                                exitCode=1
                                            fi
                                            case $CHOICE in
                                                "1)")
                                                    if [ "$watchdogIotaInxParticipationAutoUpdate" = "true" ]; then
                                                        watchdogIotaInxParticipationAutoUpdate=false
                                                        watchdogIotaInxParticipationAutoUpdateMenu="disabled"
                                                    else
                                                        watchdogIotaInxParticipationAutoUpdate=true
                                                        watchdogIotaInxParticipationAutoUpdateMenu="enabled"
                                                    fi
                                                    sudo sed -i 's/^watchdogIotaInxParticipationAutoUpdate=.*/watchdogIotaInxParticipationAutoUpdate='$watchdogIotaInxParticipationAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                                    whiptail --title "Watchdog [IOTA] INX-Participation" --msgbox "[IOTA] INX-Participation AutoUpdater $watchdogIotaInxParticipationAutoUpdateMenu." 8 65
                                                ;;
                                                "2)")
                                                    if [ "$watchdogIotaInxParticipationAllowDbReset" = "true" ]; then
                                                        watchdogIotaInxParticipationAllowDbReset=false
                                                        watchdogIotaInxParticipationAllowDbResetMenu="disabled"
                                                    else
                                                        watchdogIotaInxParticipationAllowDbReset=true
                                                        watchdogIotaInxParticipationAllowDbResetMenu="enabled"
                                                    fi
                                                    sudo sed -i 's/^watchdogIotaInxParticipationAllowDbReset=.*/watchdogIotaInxParticipationAllowDbReset='$watchdogIotaInxParticipationAllowDbReset'/' $swarmConfigs/watchdog.cfg
                                                    whiptail --title "Watchdog [IOTA] INX-Participation" --msgbox "Delete [IOTA] INX-Participation database $watchdogIotaInxParticipationAllowDbResetMenu for Watchdog." 8 65
                                                ;;
                                                "3)")
                                                    if [ "$watchdogIotaInxParticipationServiceStatusCheck" = "true" ]; then
                                                        watchdogIotaInxParticipationServiceStatusCheck=false
                                                        watchdogIotaInxParticipationServiceStatusCheckMenu="disabled"
                                                    else
                                                        watchdogIotaInxParticipationServiceStatusCheck=true
                                                        watchdogIotaInxParticipationServiceStatusCheckMenu="enabled"
                                                    fi
                                                    sudo sed -i 's/^watchdogIotaInxParticipationServiceStatusCheck=.*/watchdogIotaInxParticipationServiceStatusCheck='$watchdogIotaInxParticipationServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                                    whiptail --title "Watchdog [IOTA] INX-Participation" --msgbox "Watchdog [IOTA] INX-Participation service check $watchdogIotaInxParticipationServiceStatusCheckMenu." 8 65
                                                ;;
                                                "4)")
                                                    if [ "$watchdogIotaInxParticipationAutoAdd" = "true" ]; then
                                                        watchdogIotaInxParticipationAutoAdd=false
                                                        watchdogIotaInxParticipationAutoAddMenu="disabled"
                                                    else
                                                        watchdogIotaInxParticipationAutoAdd=true
                                                        watchdogIotaInxParticipationAutoAddMenu="enabled"
                                                    fi
                                                    sudo sed -i 's/^watchdogIotaInxParticipationAutoAdd=.*/watchdogIotaInxParticipationAutoAdd='$watchdogIotaInxParticipationAutoAdd'/' $swarmConfigs/watchdog.cfg
                                                    whiptail --title "Watchdog [IOTA] INX-Participation" --msgbox "Watchdog auto-add [IOTA] INX-Participation events $watchdogIotaInxParticipationAutoAddMenu." 8 65
                                                ;;
                                            esac
                                        done
                                        exitCode=0
                                    ;;
                                    "5)")
                                        while [ $exitCode -lt 1 ]; do
                                            source $swarmConfigs/watchdog.cfg
                                            if [ "$watchdogIotaInxPoiAutoUpdate" = "true" ]; then
                                                watchdogIotaInxPoiAutoUpdateMenu="Disable"
                                            else
                                                watchdogIotaInxPoiAutoUpdateMenu="Enable"
                                            fi
                                            if [ "$watchdogIotaInxPoiServiceStatusCheck" = "true" ]; then
                                                watchdogIotaInxPoiServiceStatusCheckMenu="Disable"
                                            else
                                                watchdogIotaInxPoiServiceStatusCheckMenu="Enable"
                                            fi

                                            CHOICE=$(
                                                whiptail --title "Watchdog [IOTA] INX-POI" --menu "\nChoose an option" 24 65 0 \
                                                "" "" \
                                                "1)" "$watchdogIotaInxPoiAutoUpdateMenu AutoUpdater" \
                                                "2)" "$watchdogIotaInxPoiServiceStatusCheckMenu Service Status Check" 3>&2 2>&1 1>&3
                                            )
                                            exitStatus=$?
                                            if [ "$exitStatus" = "1" ]; then
                                                exitCode=1
                                            fi
                                            case $CHOICE in
                                                "1)")
                                                    if [ "$watchdogIotaInxPoiAutoUpdate" = "true" ]; then
                                                        watchdogIotaInxPoiAutoUpdate=false
                                                        watchdogIotaInxPoiAutoUpdateMenu="disabled"
                                                    else
                                                        watchdogIotaInxPoiAutoUpdate=true
                                                        watchdogIotaInxPoiAutoUpdateMenu="enabled"
                                                    fi
                                                    sudo sed -i 's/^watchdogIotaInxPoiAutoUpdate=.*/watchdogIotaInxPoiAutoUpdate='$watchdogIotaInxPoiAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                                    whiptail --title "Watchdog [IOTA] INX-POI" --msgbox "[IOTA] INX-POI AutoUpdater $watchdogIotaInxPoiAutoUpdateMenu!" 8 65
                                                ;;
                                                "2)")
                                                    if [ "$watchdogIotaInxPoiServiceStatusCheck" = "true" ]; then
                                                        watchdogIotaInxPoiServiceStatusCheck=false
                                                        watchdogIotaInxPoiServiceStatusCheckMenu="disabled"
                                                    else
                                                        watchdogIotaInxPoiServiceStatusCheck=true
                                                        watchdogIotaInxPoiServiceStatusCheckMenu="enabled"
                                                    fi
                                                    sudo sed -i 's/^watchdogIotaInxPoiServiceStatusCheck=.*/watchdogIotaInxPoiServiceStatusCheck='$watchdogIotaInxPoiServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                                    whiptail --title "Watchdog [IOTA] INX-PoI" --msgbox "Watchdog [IOTA] INX-POI service check $watchdogIotaInxPoiServiceStatusCheckMenu!" 8 65
                                                ;;
                                            esac
                                        done
                                        exitCode=0
                                    ;;
                                esac
                            done
                            exitCode=0
                        else
                            whiptail --title "Watchdog [IOTA] INX" --msgbox "This option will be available only with Hornet v2 (Stardust)." 8 65
                        fi
                    ;;
                    "2)")
                        while [ $exitCode -lt 1 ]; do
                            CHOICE=$(
                                whiptail --title "Watchdog [SHIMMER] INX" --menu "\nChoose an option" 24 65 0 \
                                "" "" \
                                "1)" "[Shimmer] INX-Dashboard" \
                                "2)" "[Shimmer] INX-Indexer" \
                                "3)" "[Shimmer] INX-MQTT" \
                                "4)" "[Shimmer] INX-Participation" \
                                "5)" "[Shimmer] INX-POI" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/watchdog.cfg
                                        if [ "$watchdogShimmerInxDashboardAutoUpdate" = "true" ]; then
                                            watchdogShimmerInxDashboardAutoUpdateMenu="Disable"
                                        else
                                            watchdogShimmerInxDashboardAutoUpdateMenu="Enable"
                                        fi
                                        if [ "$watchdogShimmerInxDashboardServiceStatusCheck" = "true" ]; then
                                            watchdogShimmerInxDashboardServiceStatusCheckMenu="Disable"
                                        else
                                            watchdogShimmerInxDashboardServiceStatusCheckMenu="Enable"
                                        fi

                                        CHOICE=$(
                                            whiptail --title "Watchdog [SHIMMER] INX-Dashboard" --menu "\nChoose an option" 24 65 0 \
                                            "1)" "$watchdogShimmerInxDashboardAutoUpdateMenu AutoUpdater" \
                                            "2)" "$watchdogShimmerInxDashboardServiceStatusCheckMenu Service Status Check" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$watchdogShimmerInxDashboardAutoUpdate" = "true" ]; then
                                                    watchdogShimmerInxDashboardAutoUpdate=false
                                                    watchdogShimmerInxDashboardAutoUpdateMenu="disabled"
                                                else
                                                    watchdogShimmerInxDashboardAutoUpdate=true
                                                    watchdogShimmerInxDashboardAutoUpdateMenu="enabled"
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxDashboardAutoUpdate=.*/watchdogShimmerInxDashboardAutoUpdate='$watchdogShimmerInxDashboardAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-Dashboard" --msgbox "[Shimmer] INX-Dashboard AutoUpdater $watchdogShimmerInxDashboardAutoUpdateMenu." 8 65
                                            ;;
                                            "2)")
                                                if [ "$watchdogShimmerInxDashboardServiceStatusCheck" = "true" ]; then
                                                    watchdogShimmerInxDashboardServiceStatusCheck=false
                                                    watchdogShimmerInxDashboardServiceStatusCheckMenu="disabled"
                                                else
                                                    watchdogShimmerInxDashboardServiceStatusCheck=true
                                                    watchdogShimmerInxDashboardServiceStatusCheckMenu="enabled"
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxDashboardServiceStatusCheck=.*/watchdogShimmerInxDashboardServiceStatusCheck='$watchdogShimmerInxDashboardServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-Dashboard" --msgbox "Watchdog [Shimmer] INX-Dashboard service check $shimmerInxDashboardServiceStatusCheckMenu." 8 65
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                                "2)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/watchdog.cfg
                                        if [ "$watchdogShimmerInxIndexerAutoUpdate" = "true" ]; then
                                            watchdogShimmerInxIndexerAutoUpdateMenu="Disable"
                                        else
                                            watchdogShimmerInxIndexerAutoUpdateMenu="Enable"
                                        fi
                                        if [ "$watchdogShimmerInxIndexerAllowDbReset" = "true" ]; then
                                            watchdogShimmerInxIndexerAllowDbResetMenu="Forbid"
                                        else
                                            watchdogShimmerInxIndexerAllowDbResetMenu="Allow"
                                        fi
                                        if [ "$watchdogShimmerInxIndexerServiceStatusCheck" = "true" ]; then
                                            watchdogShimmerInxIndexerServiceStatusCheckMenu="Disable"
                                        else
                                            watchdogShimmerInxIndexerServiceStatusCheckMenu="Enable"
                                        fi

                                        CHOICE=$(
                                            whiptail --title "Watchdog [SHIMMER] INX-Indexer" --menu "\nChoose an option" 24 65 0 \
                                            "" "" \
                                            "1)" "$watchdogShimmerInxIndexerAutoUpdateMenu AutoUpdater" \
                                            "2)" "$watchdogShimmerInxIndexerAllowDbResetMenu Database Reset" \
                                            "3)" "$watchdogShimmerInxIndexerServiceStatusCheckMenu Service Status Check" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$watchdogShimmerInxIndexerAutoUpdate" = "true" ]; then
                                                    watchdogShimmerInxIndexerAutoUpdate=false
                                                    watchdogShimmerInxIndexerAutoUpdateMenu="disabled"
                                                else
                                                    watchdogShimmerInxIndexerAutoUpdate=true
                                                    watchdogShimmerInxIndexerAutoUpdateMenu="enabled"
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxIndexerAutoUpdate=.*/watchdogShimmerInxIndexerAutoUpdate='$watchdogShimmerInxIndexerAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-Indexer" --msgbox "[Shimmer] INX-Indexer AutoUpdater $watchdogShimmerInxIndexerAutoUpdateMenu." 8 65
                                            ;;
                                            "2)")
                                                if [ "$watchdogShimmerInxIndexerAllowDbReset" = "true" ]; then
                                                    watchdogShimmerInxIndexerAllowDbReset=false
                                                    watchdogShimmerInxIndexerAllowDbResetMenu="disabled"
                                                else
                                                    watchdogShimmerInxIndexerAllowDbReset=true
                                                    watchdogShimmerInxIndexerAllowDbResetMenu="enabled"
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxIndexerAllowDbReset=.*/watchdogShimmerInxIndexerAllowDbReset='$watchdogShimmerInxIndexerAllowDbReset'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-Indexer" --msgbox "Delete [Shimmer] INX-Indexer database $watchdogShimmerInxIndexerAllowDbResetMenu for Watchdog." 8 65
                                            ;;
                                            "3)")
                                                if [ "$watchdogShimmerInxIndexerServiceStatusCheck" = "true" ]; then
                                                    watchdogShimmerInxIndexerServiceStatusCheck=false
                                                    watchdogShimmerInxIndexerServiceStatusCheckMenu="disabled"
                                                else
                                                    watchdogShimmerInxIndexerServiceStatusCheck=true
                                                    watchdogShimmerInxIndexerServiceStatusCheckMenu="enabled"
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxIndexerServiceStatusCheck=.*/watchdogShimmerInxIndexerServiceStatusCheck='$watchdogShimmerInxIndexerServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-Indexer" --msgbox "Watchdog [Shimmer] INX-Indexer service check $watchdogShimmerInxIndexerServiceStatusCheckMenu." 8 65
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                                "3)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/watchdog.cfg
                                        if [ "$watchdogShimmerInxMqttAutoUpdate" = "true" ]; then
                                            watchdogShimmerInxMqttAutoUpdateMenu="Disable"
                                        else
                                            watchdogShimmerInxMqttAutoUpdateMenu="Enable"
                                        fi
                                        if [ "$watchdogShimmerInxMqttServiceStatusCheck" = "true" ]; then
                                            watchdogShimmerInxMqttServiceStatusCheckMenu="Disable"
                                        else
                                            watchdogShimmerInxMqttServiceStatusCheckMenu="Enable"
                                        fi

                                        CHOICE=$(
                                            whiptail --title "Watchdog [SHIMMER] INX-MQTT" --menu "\nChoose an option" 24 65 0 \
                                            "" "" \
                                            "1)" "$watchdogShimmerInxMqttAutoUpdateMenu AutoUpdater" \
                                            "2)" "$watchdogShimmerInxMqttServiceStatusCheckMenu Service Status Check" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$watchdogShimmerInxMqttAutoUpdate" = "true" ]; then
                                                    watchdogShimmerInxMqttAutoUpdate=false
                                                    watchdogShimmerInxMqttAutoUpdateMenu="disabled"
                                                else
                                                    watchdogShimmerInxMqttAutoUpdate=true
                                                    watchdogShimmerInxMqttAutoUpdateMenu="enabled"
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxMqttAutoUpdate=.*/watchdogShimmerInxMqttAutoUpdate='$watchdogShimmerInxMqttAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-MQTT" --msgbox "[Shimmer] INX-MQTT AutoUpdater $watchdogShimmerInxMqttAutoUpdateMenu." 8 65
                                            ;;
                                            "2)")
                                                if [ "$watchdogShimmerInxMqttServiceStatusCheck" = "true" ]; then
                                                    watchdogShimmerInxMqttServiceStatusCheck=false
                                                    watchdogShimmerInxMqttServiceStatusCheckMenu="disabled"
                                                else
                                                    watchdogShimmerInxMqttServiceStatusCheck=true
                                                    watchdogShimmerInxMqttServiceStatusCheckMenu="enabled"
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxMqttServiceStatusCheck=.*/watchdogShimmerInxMqttServiceStatusCheck='$watchdogShimmerInxMqttServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-MQTT" --msgbox "Watchdog [Shimmer] INX-MQTT service check $watchdogShimmerInxMqttServiceStatusCheckMenu." 8 65
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                                "4)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/watchdog.cfg
                                        if [ "$watchdogShimmerInxParticipationAutoUpdate" = "true" ]; then
                                            watchdogShimmerInxParticipationAutoUpdateMenu="Disable"
                                        else
                                            watchdogShimmerInxParticipationAutoUpdateMenu="Enable"
                                        fi
                                        if [ "$watchdogShimmerInxParticipationAllowDbReset" = "true" ]; then
                                            watchdogShimmerInxParticipationAllowDbResetMenu="Forbid"
                                        else
                                            watchdogShimmerInxParticipationAllowDbResetMenu="Allow"
                                        fi
                                        if [ "$watchdogShimmerInxParticipationServiceStatusCheck" = "true" ]; then
                                            watchdogShimmerInxParticipationServiceStatusCheckMenu="Disable"
                                        else
                                            watchdogShimmerInxParticipationServiceStatusCheckMenu="Enable"
                                        fi
                                        if [ "$watchdogShimmerInxParticipationAutoAdd" = "true" ]; then
                                            watchdogShimmerInxParticipationAutoAddMenu="Disable"
                                        else
                                            watchdogShimmerInxParticipationAutoAddMenu="Enable"
                                        fi

                                        CHOICE=$(
                                            whiptail --title "Watchdog [SHIMMER] INX-Participation" --menu "\nChoose an option" 24 65 0 \
                                            "" "" \
                                            "1)" "$watchdogShimmerInxParticipationAutoUpdateMenu AutoUpdater" \
                                            "2)" "$watchdogShimmerInxParticipationAllowDbResetMenu Database Reset" \
                                            "3)" "$watchdogShimmerInxParticipationServiceStatusCheckMenu Service Status Check" \
                                            "4)" "$watchdogShimmerInxParticipationAutoAddMenu Auto-Add Events" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$watchdogShimmerInxParticipationAutoUpdate" = "true" ]; then
                                                    watchdogShimmerInxParticipationAutoUpdate=false
                                                    watchdogShimmerInxParticipationAutoUpdateMenu="disabled"
                                                else
                                                    watchdogShimmerInxParticipationAutoUpdate=true
                                                    watchdogShimmerInxParticipationAutoUpdateMenu="enabled"
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxParticipationAutoUpdate=.*/watchdogShimmerInxParticipationAutoUpdate='$watchdogShimmerInxParticipationAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-Participation" --msgbox "[Shimmer] INX-Participation AutoUpdater $watchdogShimmerInxParticipationAutoUpdateMenu." 8 65
                                            ;;
                                            "2)")
                                                if [ "$watchdogShimmerInxParticipationAllowDbReset" = "true" ]; then
                                                    watchdogShimmerInxParticipationAllowDbReset=false
                                                    watchdogShimmerInxParticipationAllowDbResetMenu="disabled"
                                                else
                                                    watchdogShimmerInxParticipationAllowDbReset=true
                                                    watchdogShimmerInxParticipationAllowDbResetMenu="enabled"
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxParticipationAllowDbReset=.*/watchdogShimmerInxParticipationAllowDbReset='$watchdogShimmerInxParticipationAllowDbReset'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-Participation" --msgbox "Delete [Shimmer] INX-Participation database $watchdogShimmerInxParticipationAllowDbResetMenu for Watchdog." 8 65
                                            ;;
                                            "3)")
                                                if [ "$watchdogShimmerInxParticipationServiceStatusCheck" = "true" ]; then
                                                    watchdogShimmerInxParticipationServiceStatusCheck=false
                                                    watchdogShimmerInxParticipationServiceStatusCheckMenu="disabled"
                                                else
                                                    watchdogShimmerInxParticipationServiceStatusCheck=true
                                                    watchdogShimmerInxParticipationServiceStatusCheckMenu="enabled"
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxParticipationServiceStatusCheck=.*/watchdogShimmerInxParticipationServiceStatusCheck='$watchdogShimmerInxParticipationServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-Participation" --msgbox "Watchdog [Shimmer] INX-Participation service check $watchdogShimmerInxParticipationServiceStatusCheckMenu." 8 65
                                            ;;
                                            "4)")
                                                if [ "$watchdogShimmerInxParticipationAutoAdd" = "true" ]; then
                                                    watchdogShimmerInxParticipationAutoAdd=false
                                                    watchdogShimmerInxParticipationAutoAddMenu="disabled"
                                                else
                                                    watchdogShimmerInxParticipationAutoAdd=true
                                                    watchdogShimmerInxParticipationAutoAddMenu="enabled"
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxParticipationAutoAdd=.*/watchdogShimmerInxParticipationAutoAdd='$watchdogShimmerInxParticipationAutoAdd'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-Participation" --msgbox "Watchdog auto-add [Shimmer] INX-Participation events $watchdogShimmerInxParticipationAutoAddMenu." 8 65
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                                "5)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/watchdog.cfg
                                        if [ "$watchdogShimmerInxPoiAutoUpdate" = "true" ]; then
                                            watchdogShimmerInxPoiAutoUpdateMenu="Disable"
                                        else
                                            watchdogShimmerInxPoiAutoUpdateMenu="Enable"
                                        fi
                                        if [ "$watchdogShimmerInxPoiServiceStatusCheck" = "true" ]; then
                                            watchdogShimmerInxPoiServiceStatusCheckMenu="Disable"
                                        else
                                            watchdogShimmerInxPoiServiceStatusCheckMenu="Enable"
                                        fi

                                        CHOICE=$(
                                            whiptail --title "Watchdog [SHIMMER] INX-POI" --menu "\nChoose an option" 24 65 0 \
                                            "" "" \
                                            "1)" "$watchdogShimmerInxPoiAutoUpdateMenu AutoUpdater" \
                                            "2)" "$watchdogShimmerInxPoiServiceStatusCheckMenu Service Status Check" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$watchdogShimmerInxPoiAutoUpdate" = "true" ]; then
                                                    watchdogShimmerInxPoiAutoUpdate=false
                                                    watchdogShimmerInxPoiAutoUpdateMenu="disabled"
                                                else
                                                    watchdogShimmerInxPoiAutoUpdate=true
                                                    watchdogShimmerInxPoiAutoUpdateMenu="enabled"
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxPoiAutoUpdate=.*/watchdogShimmerInxPoiAutoUpdate='$watchdogShimmerInxPoiAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-PoI" --msgbox "[Shimmer] INX-POI AutoUpdater $watchdogShimmerInxPoiAutoUpdateMenu!" 8 65
                                            ;;
                                            "2)")
                                                if [ "$watchdogShimmerInxPoiServiceStatusCheck" = "true" ]; then
                                                    watchdogShimmerInxPoiServiceStatusCheck=false
                                                    watchdogShimmerInxPoiServiceStatusCheckMenu="disabled"
                                                else
                                                    watchdogShimmerInxPoiServiceStatusCheck=true
                                                    watchdogShimmerInxPoiServiceStatusCheckMenu="enabled"
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxPoiServiceStatusCheck=.*/watchdogShimmerInxPoiServiceStatusCheck='$watchdogShimmerInxPoiServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-PoI" --msgbox "Watchdog [Shimmer] INX-POI service check $watchdogShimmerInxPoiServiceStatusCheckMenu!" 8 65
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                esac
            done
            exitCode=0
        ;;
        "3)")
            while [ $exitCode -lt 1 ]; do
                source $swarmConfigs/watchdog.cfg
                if [ "$watchdogGoshimmerAutoUpdate" = "true" ]; then
                    watchdogGoshimmerAutoUpdateMenu="Disable"
                else
                    watchdogGoshimmerAutoUpdateMenu="Enable"
                fi
                if [ "$watchdogGoshimmerAllowDbReset" = "true" ]; then
                    watchdogGoshimmerAllowDbResetMenu="Forbid"
                else
                    watchdogGoshimmerAllowDbResetMenu="Allow"
                fi
                if [ "$watchdogGoshimmerServiceStatusCheck" = "true" ]; then
                    watchdogGoshimmerServiceStatusCheckMenu="Disable"
                else
                    watchdogGoshimmerServiceStatusCheckMenu="Enable"
                fi
                if [ "$watchdogGoshimmerDbBackupDownload" = "true" ]; then
                    watchdogGoshimmerDbBackupDownloadMenu="Disable"
                else
                    watchdogGoshimmerDbBackupDownloadMenu="Enable"
                fi
                CHOICE=$(
                    whiptail --title "Watchdog [RESEARCH] GoShimmer" --menu "\nChoose an option" 24 65 0 \
                    "" "" \
                    "1)" "$watchdogGoshimmerAutoUpdateMenu AutoUpdater" \
                    "2)" "$watchdogGoshimmerDbBackupDownloadMenu DB Backup Download" \
                    "3)" "$watchdogGoshimmerAllowDbResetMenu Database Reset" \
                    "4)" "$watchdogGoshimmerServiceStatusCheckMenu Status Check" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        if [ "$watchdogGoshimmerAutoUpdate" = "true" ]; then
                            watchdogGoshimmerAutoUpdate=false
                            watchdogGoshimmerAutoUpdateMenu="disabled"
                        else
                            watchdogGoshimmerAutoUpdate=true
                            watchdogGoshimmerAutoUpdateMenu="enabled"
                        fi
                        sudo sed -i 's/^watchdogGoshimmerAutoUpdate=.*/watchdogGoshimmerAutoUpdate='$watchdogGoshimmerAutoUpdate'/' $swarmConfigs/watchdog.cfg
                        whiptail --title "Watchdog [RESEARCH] GoShimmer" --msgbox "GoShimmer AutoUpdater $watchdogGoshimmerAutoUpdateMenu!" 8 65
                    ;;
                    "2)")
                        if [ "$watchdogGoshimmerDbBackupDownload" = "true" ]; then
                            watchdogGoshimmerDbBackupDownload=false
                            sudo sed -i 's/^watchdogGoshimmerDbBackupDownload=.*/watchdogGoshimmerDbBackupDownload=false/' $swarmConfigs/watchdog.cfg
                            whiptail --title "Watchdog [RESEARCH] GoShimmer" --msgbox "GoShimmer DB backup download disabled." 8 65
                        else
                            watchdogGoshimmerDbBackupDownload=true
                            sudo sed -i 's/^watchdogGoshimmerDbBackupDownload=.*/watchdogGoshimmerDbBackupDownload=true/' $swarmConfigs/watchdog.cfg
                            whiptail --title "Watchdog [RESEARCH] GoShimmer" --msgbox "GoShimmer DB download enabled." 8 65
                        fi
                    ;;
                    "3)")
                        if [ "$watchdogGoshimmerAllowDbReset" = "true" ]; then
                            watchdogGoshimmerAllowDbReset=false
                            watchdogGoshimmerAllowDbResetMenu="disabled"
                        else
                            watchdogGoshimmerAllowDbReset=true
                            watchdogGoshimmerAllowDbResetMenu="enabled"
                        fi
                        sudo sed -i 's/^watchdogGoshimmerAllowDbReset=.*/watchdogGoshimmerAllowDbReset='$watchdogGoshimmerAllowDbReset'/' $swarmConfigs/watchdog.cfg
                        whiptail --title "Watchdog [RESEARCH] GoShimmer" --msgbox "Delete GoShimmer database $watchdogGoshimmerAllowDbResetMenu for Watchdog!" 8 65
                    ;;
                    "4)")
                        if [ "$watchdogGoshimmerServiceStatusCheck" = "true" ]; then
                            watchdogGoshimmerServiceStatusCheck=false
                            watchdogGoshimmerServiceStatusCheckMenu="disabled"
                        else
                            watchdogGoshimmerServiceStatusCheck=true
                            watchdogGoshimmerServiceStatusCheckMenu="enabled"
                        fi
                        sudo sed -i 's/^watchdogGoshimmerServiceStatusCheck=.*/watchdogGoshimmerServiceStatusCheck='$watchdogGoshimmerServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                        whiptail --title "Watchdog [RESEARCH] GoShimmer" --msgbox "GoShimmer status check $watchdogGoshimmerServiceStatusCheckMenu." 8 65
                    ;;
                esac
            done
            exitCode=0
        ;;
        "X)")
            while [ $exitCode -lt 1 ]; do
                CHOICE=$(
                    whiptail --title "Watchdog [-] WASP " --menu "\nChoose an option" 24 65 0 \
                    "" "" \
                    "1)" "[Shimmer] WASP" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        while [ $exitCode -lt 1 ]; do
                            source $swarmConfigs/watchdog.cfg
                            if [ "$watchdogShimmerWaspAutoUpdate" = "true" ]; then
                                watchdogShimmerWaspAutoUpdateMenu="Disable"
                            else
                                watchdogShimmerWaspAutoUpdateMenu="Enable"
                            fi
                            if [ "$watchdogShimmerWaspAllowDbReset" = "true" ]; then
                                watchdogShimmerWaspAllowDbResetMenu="Forbid"
                            else
                                watchdogShimmerWaspAllowDbResetMenu="Allow"
                            fi
                            if [ "$watchdogShimmerWaspServiceStatusCheck" = "true" ]; then
                                watchdogShimmerWaspServiceStatusCheckMenu="disabled"
                            else
                                watchdogShimmerWaspServiceStatusCheckMenu="enabled"
                            fi
                            CHOICE=$(
                                whiptail --title "Watchdog [SHIMMER] WASP" --menu "\nChoose an option" 24 65 0 \
                                "" "" \
                                "1)" "$watchdogShimmerWaspAutoUpdateMenu AutoUpdater" \
                                "2)" "$watchdogShimmerWaspAllowDbResetMenu Database Reset" \
                                "3)" "$watchdogShimmerWaspServiceStatusCheckMenu Status Check" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    if [ "$watchdogShimmerWaspAutoUpdate" = "true" ]; then
                                        watchdogShimmerWaspAutoUpdate=false
                                        watchdogShimmerWaspAutoUpdateMenu="disabled"
                                    else
                                        watchdogShimmerWaspAutoUpdate=true
                                        watchdogShimmerWaspAutoUpdateMenu="enabled"
                                    fi
                                    sudo sed -i 's/^watchdogShimmerWaspAutoUpdate=.*/watchdogShimmerWaspAutoUpdate='$watchdogShimmerWaspAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                    whiptail --title "Watchdog [SHIMMER] WASP" --msgbox "[Shimmer] WASP AutoUpdater $watchdogShimmerWaspAutoUpdateMenu!" 8 65
                                ;;
                                "2)")
                                    if [ "$watchdogShimmerWaspAllowDbReset" = "true" ]; then
                                        watchdogShimmerWaspAllowDbReset=false
                                        watchdogShimmerWaspAllowDbResetMenu="disabled"
                                    else
                                        watchdogShimmerWaspAllowDbReset=true
                                        watchdogShimmerWaspAllowDbResetMenu="enabled"
                                    fi
                                    sudo sed -i 's/^watchdogShimmerWaspAllowDbReset=.*/watchdogShimmerWaspAllowDbReset='$watchdogShimmerWaspAllowDbReset'/' $swarmConfigs/watchdog.cfg
                                    whiptail --title "Watchdog [SHIMMER] WASP" --msgbox "Delete [Shimmer] WASP database $watchdogShimmerWaspAllowDbResetMenu for Watchdog!" 8 65
                                ;;
                                "3)")
                                    if [ "$watchdogShimmerWaspServiceStatusCheck" = "true" ]; then
                                        watchdogShimmerWaspServiceStatusCheck=false
                                        watchdogShimmerWaspServiceStatusCheckMenu="disabled"
                                    else
                                        watchdogShimmerWaspServiceStatusCheck=true
                                        watchdogShimmerWaspServiceStatusCheckMenu="enabled"
                                    fi
                                    sudo sed -i 's/^watchdogShimmerWaspServiceStatusCheck=.*/watchdogShimmerWaspServiceStatusCheck='$watchdogShimmerWaspServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                    whiptail --title "Watchdog [SHIMMER] WASP" --msgbox "[Shimmer] WASP status check $watchdogShimmerWaspServiceStatusCheckMenu." 8 65
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                esac
            done
            exitCode=0
        ;;
        "4)")
            while [ $exitCode -lt 1 ]; do
                source $swarmConfigs/watchdog.cfg
                if [ "$watchdogTelegramNotifications" = "true" ]; then
                    watchdogTelegramNotificationsStatus="Disable"
                else
                    watchdogTelegramNotificationsStatus="Enable"
                fi
                CHOICE=$(
                    whiptail --title "Watchdog [-] Telegram Notifications" --menu "\nChoose an option" 24 65 0 \
                    "" "" \
                    "1)" "$watchdogTelegramNotificationsStatus Telegram Notifications" \
                    "2)" "Set Telegram Bot Token" \
                    "3)" "Set Telegram Channel ID" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        if [ "$watchdogTelegramNotifications" = "true" ]; then
                            telegramText="[$HOSTNAME] Watchdog Telegram notifications via SWARM disabled."
                            source $watchdogModule/watchdogTelegram
                            watchdogTelegramNotifications=false
                            sudo sed -i 's/^watchdogTelegramNotifications=.*/watchdogTelegramNotifications=false/' $swarmConfigs/watchdog.cfg
                            whiptail --title "Watchdog [-] Telegram Notifications" --msgbox "Telegram notification for Watchdog disabled." 8 65
                        else
                            watchdogTelegramNotifications=true
                            sudo sed -i 's/^watchdogTelegramNotifications=.*/watchdogTelegramNotifications=true/' $swarmConfigs/watchdog.cfg
                            telegramText="[$HOSTNAME] Watchdog Telegram notifications via SWARM enabled."
                            source $watchdogModule/watchdogTelegram
                            whiptail --title "Watchdog [-] Telegram Notifications" --msgbox "Telegram notification for Watchdog enabled." 8 65
                        fi
                    ;;
                    "2)")
                        currentTelegramBotToken="$watchdogTelegramBotToken"
                        watchdogTelegramBotToken=$(whiptail --inputbox "\nEnter your Telegram Bot Token" 10 65 $watchdogTelegramBotToken --title "Watchdog [-] Telegram Notifications" 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ "$exitStatus" != "1" ] && [ "$currentTelegramBotToken" != "$watchdogTelegramBotToken" ]; then
                            sudo sed -i 's~^watchdogTelegramBotToken=.*~watchdogTelegramBotToken="'$watchdogTelegramBotToken'"~' $swarmConfigs/watchdog.cfg
                            whiptail --title "Watchdog [-] Telegram Notifications" --msgbox "New Telegram bot token successfully set." 8 65
                        fi
                    ;;
                    "3)")
                        currentTelegramChannelId="$watchdogTelegramChannelId"
                        watchdogTelegramChannelId=$(whiptail --inputbox "\nEnter your Telegram Channel ID" 10 65 $watchdogTelegramChannelId --title "Watchdog [-] Telegram Notifications" 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ "$exitStatus" != "1" ] && [ "$currentTelegramChannelId" != "$watchdogTelegramChannelId" ]; then
                            sudo sed -i 's~^watchdogTelegramChannelId=.*~watchdogTelegramChannelId="'$watchdogTelegramChannelId'"~' $swarmConfigs/watchdog.cfg
                            whiptail --title "Watchdog [-] Telegram Notifications" --msgbox "New Telegram channel ID successfully set." 8 65
                        fi
                    ;;
                esac
            done
            exitCode=0
        ;;
        "5)")
            while [ $exitCode -lt 1 ]; do
                source $swarmConfigs/watchdog.cfg
                if [ "$watchdogSwarmAutoUpdate" = "true" ]; then
                    watchdogSwarmAutoUpdateStatus="Disable"
                else
                    watchdogSwarmAutoUpdateStatus="Enable"
                fi
                CHOICE=$(
                    whiptail --title "Watchdog [SWARM] Auto-Update" --menu "\nChoose an option" 24 65 0 \
                    "" "" \
                    "1)" "$watchdogSwarmAutoUpdateStatus SWARM Auto-Update" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        if [ "$watchdogSwarmAutoUpdate" = "true" ]; then
                            watchdogSwarmAutoUpdate=false
                            sudo sed -i 's/^watchdogSwarmAutoUpdate=.*/watchdogSwarmAutoUpdate=false/' $swarmConfigs/watchdog.cfg
                            whiptail --title "Watchdog [SWARM] Auto-Update" --msgbox "SWARM auto-update by Watchdog disabled." 8 65
                        else
                            watchdogSwarmAutoUpdate=true
                            sudo sed -i 's/^watchdogSwarmAutoUpdate=.*/watchdogSwarmAutoUpdate=true/' $swarmConfigs/watchdog.cfg
                            whiptail --title "Watchdog [SWARM] Auto-Update" --msgbox "SWARM auto-update by Watchdog enabled." 8 65
                        fi
                    ;;
                esac
            done
            exitCode=0
        ;;
        "6)")
            while [ $exitCode -lt 1 ]; do
                if [ "$watchdogMemoryCheck" = "true" ]; then
                    watchdogMemoryCheckStatus="disable"
                else
                    watchdogMemoryCheckStatus="enable"
                fi
                CHOICE=$(
                    whiptail --title "Watchdog [-] System" --menu "\nChoose an option" 24 65 0 \
                    "" "" \
                    "1)" "${watchdogMemoryCheckStatus^} Memory Check" \
                    "2)" "Set Memory Limit" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        if (whiptail --title "Watchdog [-] System" --yesno --defaultno "Do you really want to $watchdogMemoryCheckStatus memory check?" 8 65); then
                            if [ "$watchdogMemoryCheck" = "true" ]; then
                                watchdogMemoryCheck=false
                                watchdogMemoryCheckStatus="disabled"
                            else
                                watchdogMemoryCheck=true
                                watchdogMemoryCheckStatus="enabled"
                            fi
                            sudo sed -i 's/^watchdogMemoryCheck=.*/watchdogMemoryCheck='$watchdogMemoryCheck'/' $swarmConfigs/watchdog.cfg
                            whiptail --title "Watchdog [-] System" --msgbox "Memory check by Watchdog $watchdogMemoryCheckStatus." 8 65
                        fi
                    ;;
                    "2)")
                        watchdogMemoryLimitTmp=$(whiptail --inputbox "Set the memory limit (MB) before restarting all services:" 10 65 "$watchdogMemoryLimit" --title "Watchdog [-] System" 3>&1 1>&2 2>&3)
                        exitstatus=$?
                        if [ "$exitstatus" != "1" ]; then
                            if [ $watchdogMemoryLimitTmp -eq $watchdogMemoryLimitTmp ] && [ $watchdogMemoryLimitTmp -ne $watchdogMemoryLimit ] > /dev/null 2>&1; then
                                watchdogMemoryLimit=$watchdogMemoryLimitTmp
                                sudo sed -i 's/^watchdogMemoryLimit=.*/watchdogMemoryLimit='$watchdogMemoryLimit'/' $swarmConfigs/watchdog.cfg
                                whiptail --title "Watchdog [-] System" --msgbox "Memory limit set to \"$watchdogMemoryLimit\"." 8 65
                            fi
                        fi
                        unset watchdogMemoryLimitTmp
                    ;;
                esac
            done
            unset watchdogMemoryCheckStatus
            exitCode=0
        ;;
    esac
done
exitCode=0