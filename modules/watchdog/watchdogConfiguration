#!/bin/bash

while [ $exitCode -lt 1 ]; do
    CHOICE=$(
        whiptail --title "Watchdog [-] Configuration" --menu "\nChoose an option" 24 70 0 \
        "" "" \
        "1)" "Hornet" \
        "2)" "INX" \
        "3)" "Proxy" \
        "4)" "Telegram Notifications" \
        "5)" "SWARM" \
        "6)" "System" 3>&2 2>&1 1>&3
    )
    exitStatus=$?
    if [ "$exitStatus" = "1" ]; then
        exitCode=1
    fi
    case $CHOICE in
        "1)")
            while [ $exitCode -lt 1 ]; do
                CHOICE=$(
                    whiptail --title "Watchdog [-] Hornet" --menu "\nChoose an option" 24 70 0 \
                    "" "" \
                    "1)" "[IOTA] Hornet" \
                    "2)" "[SHIMMER] Hornet" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        while [ $exitCode -lt 1 ]; do
                            source $swarmConfigs/watchdog.cfg
                            if [ "$watchdogIotaHornetAutoUpdate" = "true" ]; then
                                watchdogIotaHornetAutoUpdateMenu="disable"
                            else
                                watchdogIotaHornetAutoUpdateMenu="enable"
                            fi
                            if [ "$watchdogIotaHornetAllowDbReset" = "true" ]; then
                                watchdogIotaHornetAllowDbResetMenu="disable"
                            else
                                watchdogIotaHornetAllowDbResetMenu="enable"
                            fi
                            if [ "$watchdogIotaHornetServiceStatusCheck" = "true" ]; then
                                watchdogIotaHornetServiceStatusCheckMenu="disable"
                            else
                                watchdogIotaHornetServiceStatusCheckMenu="enable"
                            fi
                            if [ "$watchdogIotaInxParticipationAutoAdd" = "true" ]; then
                                watchdogIotaInxParticipationAutoAddMenu="disable"
                            else
                                watchdogIotaInxParticipationAutoAddMenu="enable"
                            fi
                            if [ "$watchdogIotaInxParticipationThirdParty" = "true" ]; then
                                watchdogIotaInxParticipationThirdPartyMenu="disable"
                            else
                                watchdogIotaInxParticipationThirdPartyMenu="enable"
                            fi

                            CHOICE=$(
                                whiptail --title "Watchdog [IOTA] Hornet" --menu "\nChoose an option" 24 70 0 \
                                "" "" \
                                "1)" "[${watchdogIotaHornetAutoUpdateMenu^}] [IOTA] Hornet AutoUpdater" \
                                "2)" "[${watchdogIotaHornetAllowDbResetMenu^}] [IOTA] Hornet database reset" \
                                "3)" "[${watchdogIotaHornetServiceStatusCheckMenu^}] [IOTA] Hornet service status check" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    if [ "$watchdogIotaHornetAutoUpdate" = "true" ]; then
                                        watchdogIotaHornetAutoUpdate=false
                                    else
                                        watchdogIotaHornetAutoUpdate=true
                                    fi
                                    sudo sed -i 's/^watchdogIotaHornetAutoUpdate=.*/watchdogIotaHornetAutoUpdate='$watchdogIotaHornetAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                    whiptail --title "Watchdog [IOTA] Hornet" --msgbox "[IOTA] Hornet AutoUpdater ${watchdogIotaHornetAutoUpdateMenu}d." 8 70
                                ;;
                                "2)")
                                    if [ "$watchdogIotaHornetAllowDbReset" = "true" ]; then
                                        watchdogIotaHornetAllowDbReset=false
                                    else
                                        watchdogIotaHornetAllowDbReset=true
                                    fi
                                    sudo sed -i 's/^watchdogIotaHornetAllowDbReset=.*/watchdogIotaHornetAllowDbReset='$watchdogIotaHornetAllowDbReset'/' $swarmConfigs/watchdog.cfg
                                    whiptail --title "Watchdog [IOTA] Hornet" --msgbox "Delete [IOTA] Hornet database ${watchdogIotaHornetAllowDbResetMenu}d for Watchdog." 8 70
                                ;;
                                "3)")
                                    if [ "$watchdogIotaHornetServiceStatusCheck" = "true" ]; then
                                        watchdogIotaHornetServiceStatusCheck=false
                                    else
                                        watchdogIotaHornetServiceStatusCheck=true
                                    fi
                                    sudo sed -i 's/^watchdogIotaHornetServiceStatusCheck=.*/watchdogIotaHornetServiceStatusCheck='$watchdogIotaHornetServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                    whiptail --title "Watchdog [IOTA] Hornet" --msgbox "Watchdog [IOTA] Hornet service check ${watchdogIotaHornetServiceStatusCheckMenu}d." 8 70
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                    "2)")
                        while [ $exitCode -lt 1 ]; do
                            source $swarmConfigs/watchdog.cfg
                            if [ "$watchdogShimmerHornetAutoUpdate" = "true" ]; then
                                watchdogShimmerHornetAutoUpdateMenu="disable"
                            else
                                watchdogShimmerHornetAutoUpdateMenu="enable"
                            fi
                            if [ "$watchdogShimmerHornetAllowDbReset" = "true" ]; then
                                watchdogShimmerHornetAllowDbResetMenu="disable"
                            else
                                watchdogShimmerHornetAllowDbResetMenu="enable"
                            fi
                            if [ "$watchdogShimmerHornetServiceStatusCheck" = "true" ]; then
                                watchdogShimmerHornetServiceStatusCheckMenu="disable"
                            else
                                watchdogShimmerHornetServiceStatusCheckMenu="enable"
                            fi

                            CHOICE=$(
                                whiptail --title "Watchdog [SHIMMER] Hornet" --menu "\nChoose an option" 24 70 0 \
                                "" "" \
                                "1)" "[${watchdogShimmerHornetAutoUpdateMenu^}] [Shimmer] Hornet AutoUpdater" \
                                "2)" "[${watchdogShimmerHornetAllowDbResetMenu^}] [Shimmer] Hornet database reset" \
                                "3)" "[${watchdogShimmerHornetServiceStatusCheckMenu^}] [Shimmer] Hornet service status check" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    if [ "$watchdogShimmerHornetAutoUpdate" = "true" ]; then
                                        watchdogShimmerHornetAutoUpdate=false
                                    else
                                        watchdogShimmerHornetAutoUpdate=true
                                    fi
                                    sudo sed -i 's/^watchdogShimmerHornetAutoUpdate=.*/watchdogShimmerHornetAutoUpdate='$watchdogShimmerHornetAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                    whiptail --title "Watchdog [SHIMMER] Hornet" --msgbox "[Shimmer] Hornet AutoUpdater ${watchdogShimmerHornetAutoUpdateMenu}d." 8 70
                                ;;
                                "2)")
                                    if [ "$watchdogShimmerHornetAllowDbReset" = "true" ]; then
                                        watchdogShimmerHornetAllowDbReset=false
                                    else
                                        watchdogShimmerHornetAllowDbReset=true
                                    fi
                                    sudo sed -i 's/^watchdogShimmerHornetAllowDbReset=.*/watchdogShimmerHornetAllowDbReset='$watchdogShimmerHornetAllowDbReset'/' $swarmConfigs/watchdog.cfg
                                    whiptail --title "Watchdog [SHIMMER] Hornet" --msgbox "Delete [Shimmer] Hornet database ${watchdogShimmerHornetAllowDbResetMenu}d for Watchdog." 8 70
                                ;;
                                "3)")
                                    if [ "$watchdogShimmerHornetServiceStatusCheck" = "true" ]; then
                                        watchdogShimmerHornetServiceStatusCheck=false
                                    else
                                        watchdogShimmerHornetServiceStatusCheck=true
                                    fi
                                    sudo sed -i 's/^watchdogShimmerHornetServiceStatusCheck=.*/watchdogShimmerHornetServiceStatusCheck='$watchdogShimmerHornetServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                    whiptail --title "Watchdog [SHIMMER] Hornet" --msgbox "Watchdog [Shimmer] Hornet service check ${watchdogShimmerHornetServiceStatusCheckMenu}d." 8 70
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                esac
            done
            exitCode=0
        ;;
        "2)")
            while [ $exitCode -lt 1 ]; do
                CHOICE=$(
                    whiptail --title "Watchdog [-] INX" --menu "\nChoose an option" 24 70 0 \
                    "" "" \
                    "1)" "[IOTA] INX" \
                    "2)" "[SHIMMER] INX" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        while [ $exitCode -lt 1 ]; do
                            CHOICE=$(
                                whiptail --title "Watchdog [IOTA] INX" --menu "\nChoose an option" 24 70 0 \
                                "" "" \
                                "1)" "[IOTA] INX-Dashboard" \
                                "2)" "[IOTA] INX-Indexer" \
                                "3)" "[IOTA] INX-MQTT" \
                                "4)" "[IOTA] INX-Participation" \
                                "5)" "[IOTA] INX-POI" \
                                "6)" "[IOTA] INX-IRC-Metadata" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/watchdog.cfg
                                        if [ "$watchdogIotaInxDashboardAutoUpdate" = "true" ]; then
                                            watchdogIotaInxDashboardAutoUpdateMenu="disable"
                                        else
                                            watchdogIotaInxDashboardAutoUpdateMenu="enable"
                                        fi
                                        if [ "$watchdogIotaInxDashboardServiceStatusCheck" = "true" ]; then
                                            watchdogIotaInxDashboardServiceStatusCheckMenu="disable"
                                        else
                                            watchdogIotaInxDashboardServiceStatusCheckMenu="enable"
                                        fi

                                        CHOICE=$(
                                            whiptail --title "Watchdog [IOTA] INX-Dashboard" --menu "\nChoose an option" 24 70 0 \
                                            "1)" "[${watchdogIotaInxDashboardAutoUpdateMenu^}] AutoUpdater" \
                                            "2)" "[${watchdogIotaInxDashboardServiceStatusCheckMenu^}] Service Status Check" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$watchdogIotaInxDashboardAutoUpdate" = "true" ]; then
                                                    watchdogIotaInxDashboardAutoUpdate=false
                                                    watchdogIotaInxDashboardAutoUpdateMenu="disabled"
                                                else
                                                    watchdogIotaInxDashboardAutoUpdate=true
                                                    watchdogIotaInxDashboardAutoUpdateMenu="enabled"
                                                fi
                                                sudo sed -i 's/^watchdogIotaInxDashboardAutoUpdate=.*/watchdogIotaInxDashboardAutoUpdate='$watchdogIotaInxDashboardAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [IOTA] INX-Dashboard" --msgbox "[IOTA] INX-Dashboard AutoUpdater ${watchdogIotaInxDashboardAutoUpdateMenu}d." 8 70
                                            ;;
                                            "2)")
                                                if [ "$watchdogIotaInxDashboardServiceStatusCheck" = "true" ]; then
                                                    watchdogIotaInxDashboardServiceStatusCheck=false
                                                else
                                                    watchdogIotaInxDashboardServiceStatusCheck=true
                                                fi
                                                sudo sed -i 's/^watchdogIotaInxDashboardServiceStatusCheck=.*/watchdogIotaInxDashboardServiceStatusCheck='$watchdogIotaInxDashboardServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [IOTA] INX-Dashboard" --msgbox "Watchdog [IOTA] INX-Dashboard service check ${shimmerInxDashboardServiceStatusCheckMenu}d." 8 70
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                                "2)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/watchdog.cfg
                                        if [ "$watchdogIotaInxIndexerAutoUpdate" = "true" ]; then
                                            watchdogIotaInxIndexerAutoUpdateMenu="disable"
                                        else
                                            watchdogIotaInxIndexerAutoUpdateMenu="enable"
                                        fi
                                        if [ "$watchdogIotaInxIndexerAllowDbReset" = "true" ]; then
                                            watchdogIotaInxIndexerAllowDbResetMenu="disable"
                                        else
                                            watchdogIotaInxIndexerAllowDbResetMenu="enable"
                                        fi
                                        if [ "$watchdogIotaInxIndexerServiceStatusCheck" = "true" ]; then
                                            watchdogIotaInxIndexerServiceStatusCheckMenu="disable"
                                        else
                                            watchdogIotaInxIndexerServiceStatusCheckMenu="enable"
                                        fi

                                        CHOICE=$(
                                            whiptail --title "Watchdog [IOTA] INX-Indexer" --menu "\nChoose an option" 24 70 0 \
                                            "" "" \
                                            "1)" "[${watchdogIotaInxIndexerAutoUpdateMenu^}] AutoUpdater" \
                                            "2)" "[${watchdogIotaInxIndexerAllowDbResetMenu^}] Database Reset" \
                                            "3)" "[${watchdogIotaInxIndexerServiceStatusCheckMenu^}] Service Status Check" \
                                            "4)" "INX-Indexer API Check" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$watchdogIotaInxIndexerAutoUpdate" = "true" ]; then
                                                    watchdogIotaInxIndexerAutoUpdate=false
                                                else
                                                    watchdogIotaInxIndexerAutoUpdate=true
                                                fi
                                                sudo sed -i 's/^watchdogIotaInxIndexerAutoUpdate=.*/watchdogIotaInxIndexerAutoUpdate='$watchdogIotaInxIndexerAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [IOTA] INX-Indexer" --msgbox "[IOTA] INX-Indexer AutoUpdater ${watchdogIotaInxIndexerAutoUpdateMenu}d." 8 70
                                            ;;
                                            "2)")
                                                if [ "$watchdogIotaInxIndexerAllowDbReset" = "true" ]; then
                                                    watchdogIotaInxIndexerAllowDbReset=false
                                                else
                                                    watchdogIotaInxIndexerAllowDbReset=true
                                                fi
                                                sudo sed -i 's/^watchdogIotaInxIndexerAllowDbReset=.*/watchdogIotaInxIndexerAllowDbReset='$watchdogIotaInxIndexerAllowDbReset'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [IOTA] INX-Indexer" --msgbox "Delete [IOTA] INX-Indexer database ${watchdogIotaInxIndexerAllowDbResetMenu}d for Watchdog." 8 70
                                            ;;
                                            "3)")
                                                if [ "$watchdogIotaInxIndexerServiceStatusCheck" = "true" ]; then
                                                    watchdogIotaInxIndexerServiceStatusCheck=false
                                                else
                                                    watchdogIotaInxIndexerServiceStatusCheck=true
                                                fi
                                                sudo sed -i 's/^watchdogIotaInxIndexerServiceStatusCheck=.*/watchdogIotaInxIndexerServiceStatusCheck='$watchdogIotaInxIndexerServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [IOTA] INX-Indexer" --msgbox "Watchdog [IOTA] INX-Indexer service check ${watchdogIotaInxIndexerServiceStatusCheckMenu}d." 8 70
                                            ;;
                                            "4)")
                                                while [ $exitCode -lt 1 ]; do
                                                    source $swarmConfigs/watchdog.cfg
                                                    if [ "$watchdogIotaInxIndexerApiCheck" = "true" ]; then
                                                        watchdogIotaInxIndexerApiCheckMenu="disable"
                                                    else
                                                        watchdogIotaInxIndexerApiCheckMenu="enable"
                                                    fi
                                                    CHOICE=$(
                                                        whiptail --title "Watchdog [IOTA] INX-Indexer" --menu "\nChoose an option" 24 70 0 \
                                                        "" "" \
                                                        "1)" "[${watchdogIotaInxIndexerApiCheckMenu^}] INX-Indexer API Check" \
                                                        "2)" "Set output ID to check" 3>&2 2>&1 1>&3
                                                    )
                                                    if [ "$exitStatus" = "1" ]; then
                                                        exitCode=1
                                                    fi
                                                    case $CHOICE in
                                                        "1)")
                                                            if [ "$watchdogIotaInxIndexerApiCheck" = "true" ]; then
                                                                watchdogIotaInxIndexerApiCheck=false
                                                            else
                                                                watchdogIotaInxIndexerApiCheck=true
                                                            fi
                                                            sudo sed -i 's/^watchdogIotaInxIndexerApiCheck=.*/watchdogIotaInxIndexerApiCheck='$watchdogIotaInxIndexerApiCheck'/' $swarmConfigs/watchdog.cfg
                                                            whiptail --title "Watchdog [IOTA] INX-Indexer" --msgbox "Check for [IOTA] INX-Indexer API ${watchdogIotaInxIndexerApiCheckMenu}d." 8 70
                                                        ;;
                                                        "2)")
                                                            currentWatchdogIotaInxIndexerApiCheckOutput="$watchdogIotaInxIndexerApiCheckOutput"
                                                            watchdogIotaInxIndexerApiCheckOutput=$(whiptail --inputbox "\nEnter the output ID to check" 10 65 --title "Watchdog [IOTA] INX-Indexer" 3>&1 1>&2 2>&3)
                                                            exitStatus=$?
                                                            if [ "$exitStatus" != "1" ] && [ "$currentWatchdogIotaInxIndexerApiCheckOutput" != "$watchdogIotaInxIndexerApiCheckOutput" ]; then
                                                                sudo sed -i 's~^watchdogIotaInxIndexerApiCheckOutput=.*~watchdogIotaInxIndexerApiCheckOutput="'$watchdogIotaInxIndexerApiCheckOutput'"~' $swarmConfigs/watchdog.cfg
                                                                whiptail --title "Watchdog [IOTA] INX-Indexer" --msgbox "New output ID for [IOTA] INX-Indexer API check successfully set." 8 70
                                                            fi
                                                        ;;
                                                    esac
                                                done
                                                exitCode=0
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                                "3)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/watchdog.cfg
                                        if [ "$watchdogIotaInxMqttAutoUpdate" = "true" ]; then
                                            watchdogIotaInxMqttAutoUpdateMenu="disable"
                                        else
                                            watchdogIotaInxMqttAutoUpdateMenu="enable"
                                        fi
                                        if [ "$watchdogIotaInxMqttServiceStatusCheck" = "true" ]; then
                                            watchdogIotaInxMqttServiceStatusCheckMenu="disable"
                                        else
                                            watchdogIotaInxMqttServiceStatusCheckMenu="enable"
                                        fi

                                        CHOICE=$(
                                            whiptail --title "Watchdog [IOTA] INX-MQTT" --menu "\nChoose an option" 24 70 0 \
                                            "" "" \
                                            "1)" "[${watchdogIotaInxMqttAutoUpdateMenu^}] AutoUpdater" \
                                            "2)" "[${watchdogIotaInxMqttServiceStatusCheckMenu^}] Service Status Check" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$watchdogIotaInxMqttAutoUpdate" = "true" ]; then
                                                    watchdogIotaInxMqttAutoUpdate=false
                                                else
                                                    watchdogIotaInxMqttAutoUpdate=true
                                                fi
                                                sudo sed -i 's/^watchdogIotaInxMqttAutoUpdate=.*/watchdogIotaInxMqttAutoUpdate='$watchdogIotaInxMqttAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [IOTA] INX-MQTT" --msgbox "[IOTA] INX-MQTT AutoUpdater ${watchdogIotaInxMqttAutoUpdateMenu}d." 8 70
                                            ;;
                                            "2)")
                                                if [ "$watchdogIotaInxMqttServiceStatusCheck" = "true" ]; then
                                                    watchdogIotaInxMqttServiceStatusCheck=false
                                                else
                                                    watchdogIotaInxMqttServiceStatusCheck=true
                                                fi
                                                sudo sed -i 's/^watchdogIotaInxMqttServiceStatusCheck=.*/watchdogIotaInxMqttServiceStatusCheck='$watchdogIotaInxMqttServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [IOTA] INX-MQTT" --msgbox "Watchdog [IOTA] INX-MQTT service check ${watchdogIotaInxMqttServiceStatusCheckMenu}d." 8 70
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                                "4)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/watchdog.cfg
                                        if [ "$watchdogIotaInxParticipationAutoUpdate" = "true" ]; then
                                            watchdogIotaInxParticipationAutoUpdateMenu="disable"
                                        else
                                            watchdogIotaInxParticipationAutoUpdateMenu="enable"
                                        fi
                                        if [ "$watchdogIotaInxParticipationAllowDbReset" = "true" ]; then
                                            watchdogIotaInxParticipationAllowDbResetMenu="disable"
                                        else
                                            watchdogIotaInxParticipationAllowDbResetMenu="enable"
                                        fi
                                        if [ "$watchdogIotaInxParticipationServiceStatusCheck" = "true" ]; then
                                            watchdogIotaInxParticipationServiceStatusCheckMenu="disable"
                                        else
                                            watchdogIotaInxParticipationServiceStatusCheckMenu="enable"
                                        fi
                                        if [ "$watchdogIotaInxParticipationAutoAdd" = "true" ]; then
                                            watchdogIotaInxParticipationAutoAddMenu="disable"
                                        else
                                            watchdogIotaInxParticipationAutoAddMenu="enable"
                                        fi
                                        if [ "$watchdogIotaInxParticipationThirdParty" = "true" ]; then
                                            watchdogIotaInxParticipationThirdPartyMenu="disable"
                                        else
                                            watchdogIotaInxParticipationThirdPartyMenu="enable"
                                        fi

                                        CHOICE=$(
                                            whiptail --title "Watchdog [IOTA] INX-Participation" --menu "\nChoose an option" 24 70 0 \
                                            "" "" \
                                            "1)" "[${watchdogIotaInxParticipationAutoUpdateMenu^}] AutoUpdater" \
                                            "2)" "[${watchdogIotaInxParticipationAllowDbResetMenu^}] Database Reset" \
                                            "3)" "[${watchdogIotaInxParticipationServiceStatusCheckMenu^}] Service Status Check" \
                                            "4)" "[${watchdogIotaInxParticipationAutoAddMenu^}] Auto-Add Participation Events" \
                                            "5)" "[${watchdogIotaInxParticipationThirdPartyMenu^}] Third-party Participation Events" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$watchdogIotaInxParticipationAutoUpdate" = "true" ]; then
                                                    watchdogIotaInxParticipationAutoUpdate=false
                                                else
                                                    watchdogIotaInxParticipationAutoUpdate=true
                                                fi
                                                sudo sed -i 's/^watchdogIotaInxParticipationAutoUpdate=.*/watchdogIotaInxParticipationAutoUpdate='$watchdogIotaInxParticipationAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [IOTA] INX-Participation" --msgbox "[IOTA] INX-Participation AutoUpdater ${watchdogIotaInxParticipationAutoUpdateMenu}d." 8 70
                                            ;;
                                            "2)")
                                                if [ "$watchdogIotaInxParticipationAllowDbReset" = "true" ]; then
                                                    watchdogIotaInxParticipationAllowDbReset=false
                                                else
                                                    watchdogIotaInxParticipationAllowDbReset=true
                                                fi
                                                sudo sed -i 's/^watchdogIotaInxParticipationAllowDbReset=.*/watchdogIotaInxParticipationAllowDbReset='$watchdogIotaInxParticipationAllowDbReset'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [IOTA] INX-Participation" --msgbox "Delete [IOTA] INX-Participation database ${watchdogIotaInxParticipationAllowDbResetMenu}d for Watchdog." 8 70
                                            ;;
                                            "3)")
                                                if [ "$watchdogIotaInxParticipationServiceStatusCheck" = "true" ]; then
                                                    watchdogIotaInxParticipationServiceStatusCheck=false
                                                else
                                                    watchdogIotaInxParticipationServiceStatusCheck=true
                                                fi
                                                sudo sed -i 's/^watchdogIotaInxParticipationServiceStatusCheck=.*/watchdogIotaInxParticipationServiceStatusCheck='$watchdogIotaInxParticipationServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [IOTA] INX-Participation" --msgbox "Watchdog [IOTA] INX-Participation service check ${watchdogIotaInxParticipationServiceStatusCheckMenu}d." 8 70
                                            ;;
                                            "4)")
                                                if [ "$watchdogIotaInxParticipationAutoAdd" = "true" ]; then
                                                    watchdogIotaInxParticipationAutoAdd=false
                                                else
                                                    watchdogIotaInxParticipationAutoAdd=true
                                                fi
                                                sudo sed -i 's/^watchdogIotaInxParticipationAutoAdd=.*/watchdogIotaInxParticipationAutoAdd='$watchdogIotaInxParticipationAutoAdd'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [IOTA] INX-Participation" --msgbox "Watchdog auto-add [IOTA] INX-Participation events ${watchdogIotaInxParticipationAutoAddMenu}d." 8 70
                                            ;;
                                            "5)")
                                                if [ "$watchdogIotaInxParticipationThirdParty" = "true" ]; then
                                                    watchdogIotaInxParticipationThirdParty=false
                                                else
                                                    watchdogIotaInxParticipationThirdParty=true
                                                fi
                                                sudo sed -i 's/^watchdogIotaInxParticipationThirdParty=.*/watchdogIotaInxParticipationThirdParty='$watchdogIotaInxParticipationThirdParty'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [IOTA] INX-Participation" --msgbox "Watchdog [IOTA] INX-Participation third-party events ${watchdogIotaInxParticipationThirdPartyMenu}d." 8 70
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                                "5)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/watchdog.cfg
                                        if [ "$watchdogIotaInxPoiAutoUpdate" = "true" ]; then
                                            watchdogIotaInxPoiAutoUpdateMenu="disable"
                                        else
                                            watchdogIotaInxPoiAutoUpdateMenu="enable"
                                        fi
                                        if [ "$watchdogIotaInxPoiServiceStatusCheck" = "true" ]; then
                                            watchdogIotaInxPoiServiceStatusCheckMenu="disable"
                                        else
                                            watchdogIotaInxPoiServiceStatusCheckMenu="enable"
                                        fi

                                        CHOICE=$(
                                            whiptail --title "Watchdog [IOTA] INX-POI" --menu "\nChoose an option" 24 70 0 \
                                            "" "" \
                                            "1)" "[${watchdogIotaInxPoiAutoUpdateMenu^}] AutoUpdater" \
                                            "2)" "[${watchdogIotaInxPoiServiceStatusCheckMenu^}] Service Status Check" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$watchdogIotaInxPoiAutoUpdate" = "true" ]; then
                                                    watchdogIotaInxPoiAutoUpdate=false
                                                else
                                                    watchdogIotaInxPoiAutoUpdate=true
                                                fi
                                                sudo sed -i 's/^watchdogIotaInxPoiAutoUpdate=.*/watchdogIotaInxPoiAutoUpdate='$watchdogIotaInxPoiAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [IOTA] INX-POI" --msgbox "[IOTA] INX-POI AutoUpdater ${watchdogIotaInxPoiAutoUpdateMenu}d." 8 70
                                            ;;
                                            "2)")
                                                if [ "$watchdogIotaInxPoiServiceStatusCheck" = "true" ]; then
                                                    watchdogIotaInxPoiServiceStatusCheck=false
                                                else
                                                    watchdogIotaInxPoiServiceStatusCheck=true
                                                fi
                                                sudo sed -i 's/^watchdogIotaInxPoiServiceStatusCheck=.*/watchdogIotaInxPoiServiceStatusCheck='$watchdogIotaInxPoiServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [IOTA] INX-PoI" --msgbox "Watchdog [IOTA] INX-POI service check ${watchdogIotaInxPoiServiceStatusCheckMenu}d." 8 70
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                                "6)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/watchdog.cfg
                                        if [ "$watchdogIotaInxIrcMetadataAutoUpdate" = "true" ]; then
                                            watchdogIotaInxIrcMetadataAutoUpdateMenu="disable"
                                        else
                                            watchdogIotaInxIrcMetadataAutoUpdateMenu="enable"
                                        fi
                                        if [ "$watchdogIotaInxIrcMetadataServiceStatusCheck" = "true" ]; then
                                            watchdogIotaInxIrcMetadataServiceStatusCheckMenu="disable"
                                        else
                                            watchdogIotaInxIrcMetadataServiceStatusCheckMenu="enable"
                                        fi

                                        CHOICE=$(
                                            whiptail --title "Watchdog [IOTA] INX-IRC-Metadata" --menu "\nChoose an option" 24 70 0 \
                                            "" "" \
                                            "1)" "[${watchdogIotaInxIrcMetadataAutoUpdateMenu^}] AutoUpdater" \
                                            "2)" "[${watchdogIotaInxIrcMetadataServiceStatusCheckMenu^}] Service Status Check" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$watchdogIotaInxIrcMetadataAutoUpdate" = "true" ]; then
                                                    watchdogIotaInxIrcMetadataAutoUpdate=false
                                                else
                                                    watchdogIotaInxIrcMetadataAutoUpdate=true
                                                fi
                                                sudo sed -i 's/^watchdogIotaInxIrcMetadataAutoUpdate=.*/watchdogIotaInxIrcMetadataAutoUpdate='$watchdogIotaInxIrcMetadataAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [IOTA] INX-IRC-Metadata" --msgbox "[IOTA] INX-IRC-Metadata AutoUpdater ${watchdogIotaInxIrcMetadataAutoUpdateMenu}d." 8 70
                                            ;;
                                            "2)")
                                                if [ "$watchdogIotaInxIrcMetadataServiceStatusCheck" = "true" ]; then
                                                    watchdogIotaInxIrcMetadataServiceStatusCheck=false
                                                else
                                                    watchdogIotaInxIrcMetadataServiceStatusCheck=true
                                                fi
                                                sudo sed -i 's/^watchdogIotaInxIrcMetadataServiceStatusCheck=.*/watchdogIotaInxIrcMetadataServiceStatusCheck='$watchdogIotaInxIrcMetadataServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [IOTA] INX-IRC-Metadata" --msgbox "Watchdog [IOTA] INX-IRC-Metadata service check ${watchdogIotaInxIrcMetadataServiceStatusCheckMenu}d." 8 70
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                    "2)")
                        while [ $exitCode -lt 1 ]; do
                            CHOICE=$(
                                whiptail --title "Watchdog [SHIMMER] INX" --menu "\nChoose an option" 24 70 0 \
                                "" "" \
                                "1)" "[Shimmer] INX-Dashboard" \
                                "2)" "[Shimmer] INX-Indexer" \
                                "3)" "[Shimmer] INX-MQTT" \
                                "4)" "[Shimmer] INX-Participation" \
                                "5)" "[Shimmer] INX-POI" \
                                "6)" "[Shimmer] INX-IRC-Metadata" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/watchdog.cfg
                                        if [ "$watchdogShimmerInxDashboardAutoUpdate" = "true" ]; then
                                            watchdogShimmerInxDashboardAutoUpdateMenu="disable"
                                        else
                                            watchdogShimmerInxDashboardAutoUpdateMenu="enable"
                                        fi
                                        if [ "$watchdogShimmerInxDashboardServiceStatusCheck" = "true" ]; then
                                            watchdogShimmerInxDashboardServiceStatusCheckMenu="disable"
                                        else
                                            watchdogShimmerInxDashboardServiceStatusCheckMenu="enable"
                                        fi

                                        CHOICE=$(
                                            whiptail --title "Watchdog [SHIMMER] INX-Dashboard" --menu "\nChoose an option" 24 70 0 \
                                            "1)" "[${watchdogShimmerInxDashboardAutoUpdateMenu^}] AutoUpdater" \
                                            "2)" "[${watchdogShimmerInxDashboardServiceStatusCheckMenu^}] Service Status Check" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$watchdogShimmerInxDashboardAutoUpdate" = "true" ]; then
                                                    watchdogShimmerInxDashboardAutoUpdate=false
                                                else
                                                    watchdogShimmerInxDashboardAutoUpdate=true
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxDashboardAutoUpdate=.*/watchdogShimmerInxDashboardAutoUpdate='$watchdogShimmerInxDashboardAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-Dashboard" --msgbox "[Shimmer] INX-Dashboard AutoUpdater ${watchdogShimmerInxDashboardAutoUpdateMenu}d." 8 70
                                            ;;
                                            "2)")
                                                if [ "$watchdogShimmerInxDashboardServiceStatusCheck" = "true" ]; then
                                                    watchdogShimmerInxDashboardServiceStatusCheck=false
                                                else
                                                    watchdogShimmerInxDashboardServiceStatusCheck=true
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxDashboardServiceStatusCheck=.*/watchdogShimmerInxDashboardServiceStatusCheck='$watchdogShimmerInxDashboardServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-Dashboard" --msgbox "Watchdog [Shimmer] INX-Dashboard service check ${shimmerInxDashboardServiceStatusCheckMenu}d." 8 70
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                                "2)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/watchdog.cfg
                                        if [ "$watchdogShimmerInxIndexerAutoUpdate" = "true" ]; then
                                            watchdogShimmerInxIndexerAutoUpdateMenu="disable"
                                        else
                                            watchdogShimmerInxIndexerAutoUpdateMenu="enable"
                                        fi
                                        if [ "$watchdogShimmerInxIndexerAllowDbReset" = "true" ]; then
                                            watchdogShimmerInxIndexerAllowDbResetMenu="disable"
                                        else
                                            watchdogShimmerInxIndexerAllowDbResetMenu="enable"
                                        fi
                                        if [ "$watchdogShimmerInxIndexerServiceStatusCheck" = "true" ]; then
                                            watchdogShimmerInxIndexerServiceStatusCheckMenu="disable"
                                        else
                                            watchdogShimmerInxIndexerServiceStatusCheckMenu="enable"
                                        fi

                                        CHOICE=$(
                                            whiptail --title "Watchdog [SHIMMER] INX-Indexer" --menu "\nChoose an option" 24 70 0 \
                                            "" "" \
                                            "1)" "[${watchdogShimmerInxIndexerAutoUpdateMenu^}] AutoUpdater" \
                                            "2)" "[${watchdogShimmerInxIndexerAllowDbResetMenu^}] Database Reset" \
                                            "3)" "[${watchdogShimmerInxIndexerServiceStatusCheckMenu^}] Service Status Check" \
                                            "4)" "INX-Indexer API Check" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$watchdogShimmerInxIndexerAutoUpdate" = "true" ]; then
                                                    watchdogShimmerInxIndexerAutoUpdate=false
                                                else
                                                    watchdogShimmerInxIndexerAutoUpdate=true
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxIndexerAutoUpdate=.*/watchdogShimmerInxIndexerAutoUpdate='$watchdogShimmerInxIndexerAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-Indexer" --msgbox "[Shimmer] INX-Indexer AutoUpdater ${watchdogShimmerInxIndexerAutoUpdateMenu}d." 8 70
                                            ;;
                                            "2)")
                                                if [ "$watchdogShimmerInxIndexerAllowDbReset" = "true" ]; then
                                                    watchdogShimmerInxIndexerAllowDbReset=false
                                                else
                                                    watchdogShimmerInxIndexerAllowDbReset=true
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxIndexerAllowDbReset=.*/watchdogShimmerInxIndexerAllowDbReset='$watchdogShimmerInxIndexerAllowDbReset'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-Indexer" --msgbox "Delete [Shimmer] INX-Indexer database ${watchdogShimmerInxIndexerAllowDbResetMenu}d for Watchdog." 8 70
                                            ;;
                                            "3)")
                                                if [ "$watchdogShimmerInxIndexerServiceStatusCheck" = "true" ]; then
                                                    watchdogShimmerInxIndexerServiceStatusCheck=false
                                                else
                                                    watchdogShimmerInxIndexerServiceStatusCheck=true
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxIndexerServiceStatusCheck=.*/watchdogShimmerInxIndexerServiceStatusCheck='$watchdogShimmerInxIndexerServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-Indexer" --msgbox "Watchdog [Shimmer] INX-Indexer service check ${watchdogShimmerInxIndexerServiceStatusCheckMenu}d." 8 70
                                            ;;
                                            "4)")
                                                while [ $exitCode -lt 1 ]; do
                                                    source $swarmConfigs/watchdog.cfg
                                                    if [ "$watchdogShimmerInxIndexerApiCheck" = "true" ]; then
                                                        watchdogShimmerInxIndexerApiCheckMenu="disable"
                                                    else
                                                        watchdogShimmerInxIndexerApiCheckMenu="enable"
                                                    fi
                                                    CHOICE=$(
                                                        whiptail --title "Watchdog [SHIMMER] INX-Indexer" --menu "\nChoose an option" 24 70 0 \
                                                        "" "" \
                                                        "1)" "[${watchdogShimmerInxIndexerApiCheckMenu^}] INX-Indexer API Check" \
                                                        "2)" "Set output ID to check" 3>&2 2>&1 1>&3
                                                    )
                                                    if [ "$exitStatus" = "1" ]; then
                                                        exitCode=1
                                                    fi
                                                    case $CHOICE in
                                                        "1)")
                                                            if [ "$watchdogShimmerInxIndexerApiCheck" = "true" ]; then
                                                                watchdogShimmerInxIndexerApiCheck=false
                                                            else
                                                                watchdogShimmerInxIndexerApiCheck=true
                                                            fi
                                                            sudo sed -i 's/^watchdogShimmerInxIndexerApiCheck=.*/watchdogShimmerInxIndexerApiCheck='$watchdogShimmerInxIndexerApiCheck'/' $swarmConfigs/watchdog.cfg
                                                            whiptail --title "Watchdog [SHIMMER] INX-Indexer" --msgbox "Check for [SHIMMER] INX-Indexer API ${watchdogShimmerInxIndexerApiCheckMenu}d." 8 70
                                                        ;;
                                                        "2)")
                                                            currentWatchdogShimmerInxIndexerApiCheckOutput="$watchdogShimmerInxIndexerApiCheckOutput"
                                                            watchdogShimmerInxIndexerApiCheckOutput=$(whiptail --inputbox "\nEnter the output ID to check" 10 65 --title "Watchdog [IOTA] INX-Indexer" 3>&1 1>&2 2>&3)
                                                            exitStatus=$?
                                                            if [ "$exitStatus" != "1" ] && [ "$currentWatchdogShimmerInxIndexerApiCheckOutput" != "$watchdogShimmerInxIndexerApiCheckOutput" ]; then
                                                                sudo sed -i 's~^watchdogShimmerInxIndexerApiCheckOutput=.*~watchdogShimmerInxIndexerApiCheckOutput="'$watchdogShimmerInxIndexerApiCheckOutput'"~' $swarmConfigs/watchdog.cfg
                                                                whiptail --title "Watchdog [SHIMMER] INX-Indexer" --msgbox "New output ID for [SHIMMER] INX-Indexer API check successfully set." 8 70
                                                            fi
                                                        ;;
                                                    esac
                                                done
                                                exitCode=0
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                                "3)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/watchdog.cfg
                                        if [ "$watchdogShimmerInxMqttAutoUpdate" = "true" ]; then
                                            watchdogShimmerInxMqttAutoUpdateMenu="disable"
                                        else
                                            watchdogShimmerInxMqttAutoUpdateMenu="enable"
                                        fi
                                        if [ "$watchdogShimmerInxMqttServiceStatusCheck" = "true" ]; then
                                            watchdogShimmerInxMqttServiceStatusCheckMenu="disable"
                                        else
                                            watchdogShimmerInxMqttServiceStatusCheckMenu="enable"
                                        fi

                                        CHOICE=$(
                                            whiptail --title "Watchdog [SHIMMER] INX-MQTT" --menu "\nChoose an option" 24 70 0 \
                                            "" "" \
                                            "1)" "[${watchdogShimmerInxMqttAutoUpdateMenu^}] AutoUpdater" \
                                            "2)" "[${watchdogShimmerInxMqttServiceStatusCheckMenu^}] Service Status Check" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$watchdogShimmerInxMqttAutoUpdate" = "true" ]; then
                                                    watchdogShimmerInxMqttAutoUpdate=false
                                                else
                                                    watchdogShimmerInxMqttAutoUpdate=true
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxMqttAutoUpdate=.*/watchdogShimmerInxMqttAutoUpdate='$watchdogShimmerInxMqttAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-MQTT" --msgbox "[Shimmer] INX-MQTT AutoUpdater ${watchdogShimmerInxMqttAutoUpdateMenu}d." 8 70
                                            ;;
                                            "2)")
                                                if [ "$watchdogShimmerInxMqttServiceStatusCheck" = "true" ]; then
                                                    watchdogShimmerInxMqttServiceStatusCheck=false
                                                else
                                                    watchdogShimmerInxMqttServiceStatusCheck=true
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxMqttServiceStatusCheck=.*/watchdogShimmerInxMqttServiceStatusCheck='$watchdogShimmerInxMqttServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-MQTT" --msgbox "Watchdog [Shimmer] INX-MQTT service check ${watchdogShimmerInxMqttServiceStatusCheckMenu}d." 8 70
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                                "4)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/watchdog.cfg
                                        if [ "$watchdogShimmerInxParticipationAutoUpdate" = "true" ]; then
                                            watchdogShimmerInxParticipationAutoUpdateMenu="disable"
                                        else
                                            watchdogShimmerInxParticipationAutoUpdateMenu="enable"
                                        fi
                                        if [ "$watchdogShimmerInxParticipationAllowDbReset" = "true" ]; then
                                            watchdogShimmerInxParticipationAllowDbResetMenu="disable"
                                        else
                                            watchdogShimmerInxParticipationAllowDbResetMenu="enable"
                                        fi
                                        if [ "$watchdogShimmerInxParticipationServiceStatusCheck" = "true" ]; then
                                            watchdogShimmerInxParticipationServiceStatusCheckMenu="disable"
                                        else
                                            watchdogShimmerInxParticipationServiceStatusCheckMenu="enable"
                                        fi
                                        if [ "$watchdogShimmerInxParticipationAutoAdd" = "true" ]; then
                                            watchdogShimmerInxParticipationAutoAddMenu="disable"
                                        else
                                            watchdogShimmerInxParticipationAutoAddMenu="enable"
                                        fi
                                        if [ "$watchdogShimmerInxParticipationThirdParty" = "true" ]; then
                                            watchdogShimmerInxParticipationThirdPartyMenu="disable"
                                        else
                                            watchdogShimmerInxParticipationThirdPartyMenu="enable"
                                        fi

                                        CHOICE=$(
                                            whiptail --title "Watchdog [SHIMMER] INX-Participation" --menu "\nChoose an option" 24 70 0 \
                                            "" "" \
                                            "1)" "[${watchdogShimmerInxParticipationAutoUpdateMenu^}] AutoUpdater" \
                                            "2)" "[${watchdogShimmerInxParticipationAllowDbResetMenu^}] Database Reset" \
                                            "3)" "[${watchdogShimmerInxParticipationServiceStatusCheckMenu^}] Service Status Check" \
                                            "4)" "[${watchdogShimmerInxParticipationAutoAddMenu^}] Auto-Add Events" \
                                            "5)" "[${watchdogShimmerInxParticipationThirdPartyMenu^}] Third-party Events" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$watchdogShimmerInxParticipationAutoUpdate" = "true" ]; then
                                                    watchdogShimmerInxParticipationAutoUpdate=false
                                                else
                                                    watchdogShimmerInxParticipationAutoUpdate=true
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxParticipationAutoUpdate=.*/watchdogShimmerInxParticipationAutoUpdate='$watchdogShimmerInxParticipationAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-Participation" --msgbox "[Shimmer] INX-Participation AutoUpdater ${watchdogShimmerInxParticipationAutoUpdateMenu}d." 8 70
                                            ;;
                                            "2)")
                                                if [ "$watchdogShimmerInxParticipationAllowDbReset" = "true" ]; then
                                                    watchdogShimmerInxParticipationAllowDbReset=false
                                                else
                                                    watchdogShimmerInxParticipationAllowDbReset=true
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxParticipationAllowDbReset=.*/watchdogShimmerInxParticipationAllowDbReset='$watchdogShimmerInxParticipationAllowDbReset'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-Participation" --msgbox "Delete [Shimmer] INX-Participation database ${watchdogShimmerInxParticipationAllowDbResetMenu}d for Watchdog." 8 70
                                            ;;
                                            "3)")
                                                if [ "$watchdogShimmerInxParticipationServiceStatusCheck" = "true" ]; then
                                                    watchdogShimmerInxParticipationServiceStatusCheck=false
                                                else
                                                    watchdogShimmerInxParticipationServiceStatusCheck=true
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxParticipationServiceStatusCheck=.*/watchdogShimmerInxParticipationServiceStatusCheck='$watchdogShimmerInxParticipationServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-Participation" --msgbox "Watchdog [Shimmer] INX-Participation service check ${watchdogShimmerInxParticipationServiceStatusCheckMenu}d." 8 70
                                            ;;
                                            "4)")
                                                if [ "$watchdogShimmerInxParticipationAutoAdd" = "true" ]; then
                                                    watchdogShimmerInxParticipationAutoAdd=false
                                                else
                                                    watchdogShimmerInxParticipationAutoAdd=true
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxParticipationAutoAdd=.*/watchdogShimmerInxParticipationAutoAdd='$watchdogShimmerInxParticipationAutoAdd'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-Participation" --msgbox "Watchdog auto-add [Shimmer] INX-Participation events ${watchdogShimmerInxParticipationAutoAddMenu}d." 8 70
                                            ;;
                                            "5)")
                                                if [ "$watchdogShimmerInxParticipationThirdParty" = "true" ]; then
                                                    watchdogShimmerInxParticipationThirdParty=false
                                                else
                                                    watchdogShimmerInxParticipationThirdParty=true
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxParticipationThirdParty=.*/watchdogShimmerInxParticipationThirdParty='$watchdogShimmerInxParticipationThirdParty'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-Participation" --msgbox "Watchdog [Shimmer] INX-Participation third-party events ${watchdogShimmerInxParticipationThirdPartyMenu}d." 8 70
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                                "5)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/watchdog.cfg
                                        if [ "$watchdogShimmerInxPoiAutoUpdate" = "true" ]; then
                                            watchdogShimmerInxPoiAutoUpdateMenu="disable"
                                        else
                                            watchdogShimmerInxPoiAutoUpdateMenu="enable"
                                        fi
                                        if [ "$watchdogShimmerInxPoiServiceStatusCheck" = "true" ]; then
                                            watchdogShimmerInxPoiServiceStatusCheckMenu="disable"
                                        else
                                            watchdogShimmerInxPoiServiceStatusCheckMenu="enable"
                                        fi

                                        CHOICE=$(
                                            whiptail --title "Watchdog [SHIMMER] INX-POI" --menu "\nChoose an option" 24 70 0 \
                                            "" "" \
                                            "1)" "[${watchdogShimmerInxPoiAutoUpdateMenu^}] AutoUpdater" \
                                            "2)" "[${watchdogShimmerInxPoiServiceStatusCheckMenu^}] Service Status Check" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$watchdogShimmerInxPoiAutoUpdate" = "true" ]; then
                                                    watchdogShimmerInxPoiAutoUpdate=false
                                                else
                                                    watchdogShimmerInxPoiAutoUpdate=true
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxPoiAutoUpdate=.*/watchdogShimmerInxPoiAutoUpdate='$watchdogShimmerInxPoiAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-PoI" --msgbox "[Shimmer] INX-POI AutoUpdater ${watchdogShimmerInxPoiAutoUpdateMenu}d." 8 70
                                            ;;
                                            "2)")
                                                if [ "$watchdogShimmerInxPoiServiceStatusCheck" = "true" ]; then
                                                    watchdogShimmerInxPoiServiceStatusCheck=false
                                                else
                                                    watchdogShimmerInxPoiServiceStatusCheck=true
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxPoiServiceStatusCheck=.*/watchdogShimmerInxPoiServiceStatusCheck='$watchdogShimmerInxPoiServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-PoI" --msgbox "Watchdog [Shimmer] INX-POI service check ${watchdogShimmerInxPoiServiceStatusCheckMenu}d." 8 70
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                                "6)")
                                    while [ $exitCode -lt 1 ]; do
                                        source $swarmConfigs/watchdog.cfg
                                        if [ "$watchdogShimmerInxIrcMetadataAutoUpdate" = "true" ]; then
                                            watchdogShimmerInxIrcMetadataAutoUpdateMenu="disable"
                                        else
                                            watchdogShimmerInxIrcMetadataAutoUpdateMenu="enable"
                                        fi
                                        if [ "$watchdogShimmerInxIrcMetadataServiceStatusCheck" = "true" ]; then
                                            watchdogShimmerInxIrcMetadataServiceStatusCheckMenu="disable"
                                        else
                                            watchdogShimmerInxIrcMetadataServiceStatusCheckMenu="enable"
                                        fi

                                        CHOICE=$(
                                            whiptail --title "Watchdog [SHIMMER] INX-IRC-Metadata" --menu "\nChoose an option" 24 70 0 \
                                            "" "" \
                                            "1)" "[${watchdogShimmerInxIrcMetadataAutoUpdateMenu^}] AutoUpdater" \
                                            "2)" "[${watchdogShimmerInxIrcMetadataServiceStatusCheckMenu^}] Service Status Check" 3>&2 2>&1 1>&3
                                        )
                                        exitStatus=$?
                                        if [ "$exitStatus" = "1" ]; then
                                            exitCode=1
                                        fi
                                        case $CHOICE in
                                            "1)")
                                                if [ "$watchdogShimmerInxIrcMetadataAutoUpdate" = "true" ]; then
                                                    watchdogShimmerInxIrcMetadataAutoUpdate=false
                                                else
                                                    watchdogShimmerInxIrcMetadataAutoUpdate=true
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxIrcMetadataAutoUpdate=.*/watchdogShimmerInxIrcMetadataAutoUpdate='$watchdogShimmerInxIrcMetadataAutoUpdate'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-IRC-Metdata" --msgbox "[Shimmer] INX-IRC-Metadata AutoUpdater ${watchdogShimmerInxIrcMetadataAutoUpdateMenu}d." 8 70
                                            ;;
                                            "2)")
                                                if [ "$watchdogShimmerInxIrcMetadataServiceStatusCheck" = "true" ]; then
                                                    watchdogShimmerInxIrcMetadataServiceStatusCheck=false
                                                else
                                                    watchdogShimmerInxIrcMetadataServiceStatusCheck=true
                                                fi
                                                sudo sed -i 's/^watchdogShimmerInxIrcMetadataServiceStatusCheck=.*/watchdogShimmerInxIrcMetadataServiceStatusCheck='$watchdogShimmerInxIrcMetadataServiceStatusCheck'/' $swarmConfigs/watchdog.cfg
                                                whiptail --title "Watchdog [SHIMMER] INX-IRC-Metadata" --msgbox "Watchdog [Shimmer] INX-IRC-Metadata service check ${watchdogShimmerInxIrcMetadataServiceStatusCheckMenu}d." 8 70
                                            ;;
                                        esac
                                    done
                                    exitCode=0
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                esac
            done
            exitCode=0
        ;;
        "3)")
            while [ $exitCode -lt 1 ]; do
                source $swarmConfigs/watchdog.cfg
                if [ "$watchdogProxyHttpCheck" = "true" ]; then
                    watchdogProxyHttpCheckStatus="disable"
                else
                    watchdogProxyHttpCheckStatus="enable"
                fi
                CHOICE=$(
                    whiptail --title "Watchdog [-] Proxy" --menu "\nChoose an option" 24 70 0 \
                    "" "" \
                    "1)" "[${watchdogProxyHttpCheckStatus^}] Proxy HTTP Check" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        if [ "$watchdogProxyHttpCheck" = "true" ]; then
                            watchdogProxyHttpCheck=false
                        else
                            watchdogProxyHttpCheck=true
                        fi
                        sudo sed -i 's/^watchdogProxyHttpCheck=.*/watchdogProxyHttpCheck='$watchdogProxyHttpCheck'/' $swarmConfigs/watchdog.cfg
                        whiptail --title "Watchdog [-] Proxy" --msgbox "Watchdog proxy HTTP check ${watchdogProxyHttpCheckStatus}d." 8 70
                    ;;
                esac
            done
            exitCode=0
        ;;
        "4)")
            while [ $exitCode -lt 1 ]; do
                source $swarmConfigs/watchdog.cfg
                if [ "$watchdogTelegramNotifications" = "true" ]; then
                    watchdogTelegramNotificationsStatus="disable"
                else
                    watchdogTelegramNotificationsStatus="enable"
                fi
                CHOICE=$(
                    whiptail --title "Watchdog [-] Telegram Notifications" --menu "\nChoose an option" 24 70 0 \
                    "" "" \
                    "1)" "[${watchdogTelegramNotificationsStatus^}] Telegram Notifications" \
                    "2)" "Set Telegram Bot Token" \
                    "3)" "Set Telegram Channel ID" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        if [ "$watchdogTelegramNotifications" = "true" ]; then
                            watchdogTelegramNotifications=false
                        else
                            watchdogTelegramNotifications=true
                        fi
                        sudo sed -i 's/^watchdogTelegramNotifications=.*/watchdogTelegramNotifications='$watchdogTelegramNotifications'/' $swarmConfigs/watchdog.cfg
                        telegramText="[$HOSTNAME] Watchdog Telegram notifications via SWARM ${watchdogTelegramNotificationsStatus}d."
                        source $watchdogModule/watchdogTelegram
                        whiptail --title "Watchdog [-] Telegram Notifications" --msgbox "Telegram notification for Watchdog ${watchdogTelegramNotificationsStatus}d." 8 70
                    ;;
                    "2)")
                        currentTelegramBotToken="$watchdogTelegramBotToken"
                        watchdogTelegramBotToken=$(whiptail --inputbox "\nEnter your Telegram Bot Token" 10 65 "$watchdogTelegramBotToken" --title "Watchdog [-] Telegram Notifications" 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ "$exitStatus" != "1" ] && [ "$currentTelegramBotToken" != "$watchdogTelegramBotToken" ]; then
                            sudo sed -i 's~^watchdogTelegramBotToken=.*~watchdogTelegramBotToken="'$watchdogTelegramBotToken'"~' $swarmConfigs/watchdog.cfg
                            whiptail --title "Watchdog [-] Telegram Notifications" --msgbox "New Telegram bot token successfully set." 8 70
                        fi
                    ;;
                    "3)")
                        currentTelegramChannelId="$watchdogTelegramChannelId"
                        watchdogTelegramChannelId=$(whiptail --inputbox "\nEnter your Telegram Channel ID" 10 65 "$watchdogTelegramChannelId" --title "Watchdog [-] Telegram Notifications" 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ "$exitStatus" != "1" ] && [ "$currentTelegramChannelId" != "$watchdogTelegramChannelId" ]; then
                            sudo sed -i 's~^watchdogTelegramChannelId=.*~watchdogTelegramChannelId="'$watchdogTelegramChannelId'"~' $swarmConfigs/watchdog.cfg
                            whiptail --title "Watchdog [-] Telegram Notifications" --msgbox "New Telegram channel ID successfully set." 8 70
                        fi
                    ;;
                esac
            done
            exitCode=0
        ;;
        "5)")
            while [ $exitCode -lt 1 ]; do
                source $swarmConfigs/watchdog.cfg
                if [ "$watchdogSwarmAutoUpdate" = "true" ]; then
                    watchdogSwarmAutoUpdateStatus="disable"
                else
                    watchdogSwarmAutoUpdateStatus="enable"
                fi
                CHOICE=$(
                    whiptail --title "Watchdog [SWARM] Auto-Update" --menu "\nChoose an option" 24 70 0 \
                    "" "" \
                    "1)" "[${watchdogSwarmAutoUpdateStatus^}] SWARM Auto-Update" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        if [ "$watchdogSwarmAutoUpdate" = "true" ]; then
                            watchdogSwarmAutoUpdate=false
                        else
                            watchdogSwarmAutoUpdate=true
                        fi
                        sudo sed -i 's/^watchdogSwarmAutoUpdate=.*/watchdogSwarmAutoUpdate='$watchdogSwarmAutoUpdate'/' $swarmConfigs/watchdog.cfg
                        whiptail --title "Watchdog [SWARM] Auto-Update" --msgbox "SWARM auto-update by Watchdog ${watchdogSwarmAutoUpdateStatus}d." 8 70
                    ;;
                esac
            done
            exitCode=0
        ;;
        "6)")
            while [ $exitCode -lt 1 ]; do
                if [ "$watchdogMemoryCheck" = "true" ]; then
                    watchdogMemoryCheckStatus="disable"
                else
                    watchdogMemoryCheckStatus="enable"
                fi
                CHOICE=$(
                    whiptail --title "Watchdog [-] System" --menu "\nChoose an option" 24 70 0 \
                    "" "" \
                    "1)" "[${watchdogMemoryCheckStatus^}] Memory Check" \
                    "2)" "Set Memory Limit" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        if (whiptail --title "Watchdog [-] System" --yesno --defaultno "Do you really want to $watchdogMemoryCheckStatus memory check?" 8 70); then
                            if [ "$watchdogMemoryCheck" = "true" ]; then
                                watchdogMemoryCheck=false
                            else
                                watchdogMemoryCheck=true
                            fi
                            sudo sed -i 's/^watchdogMemoryCheck=.*/watchdogMemoryCheck='$watchdogMemoryCheck'/' $swarmConfigs/watchdog.cfg
                            whiptail --title "Watchdog [-] System" --msgbox "Memory check by Watchdog ${watchdogMemoryCheckStatus}d." 8 70
                        fi
                    ;;
                    "2)")
                        watchdogMemoryLimitTmp=$(whiptail --inputbox "Set the memory limit (MB) before restarting all services:" 10 65 "$watchdogMemoryLimit" --title "Watchdog [-] System" 3>&1 1>&2 2>&3)
                        exitstatus=$?
                        if [ "$exitstatus" != "1" ]; then
                            if [ $watchdogMemoryLimitTmp -eq $watchdogMemoryLimitTmp ] && [ $watchdogMemoryLimitTmp -ne $watchdogMemoryLimit ] > /dev/null 2>&1; then
                                watchdogMemoryLimit=$watchdogMemoryLimitTmp
                                sudo sed -i 's/^watchdogMemoryLimit=.*/watchdogMemoryLimit='$watchdogMemoryLimit'/' $swarmConfigs/watchdog.cfg
                                whiptail --title "Watchdog [-] System" --msgbox "Memory limit set to \"$watchdogMemoryLimit\"." 8 70
                            fi
                        fi
                        unset watchdogMemoryLimitTmp
                    ;;
                esac
            done
            unset watchdogMemoryCheckStatus
            exitCode=0
        ;;
    esac
done
exitCode=0