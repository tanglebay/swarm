#!/bin/bash

if [ "$timeFrame" = "$watchdogUpdateNumber" ] || [ "$timeFrame" = "$watchdogUpdateNumber2" ]; then
    if [ -f "/usr/bin/iota-hornet" ]; then
        iotaHornetVersion=$(/usr/bin/iota-hornet -v | awk '{ print $2 }' | tr -d 'v')
    fi
    if [ ! -z "$iotaHornetVersion" ] && [[ $iotaHornetVersion =~ ^2.* ]]; then
        if [ "$watchdogIotaInxParticipationAutoAdd" = "true" ] && [ -f "/usr/bin/iota-hornet" ] && [ -f "/usr/bin/iota-inx-participation" ] && [ "$iotaHornetApiEnabled" = "true" ] && [ "$iotaHornetNetwork" = "mainnet" ]; then
            source $swarmModule/swarmAuth
            if [ "$swarmAuth" = "200" ]; then
                latestIotaParticipationEvents=$(curl -s -H "Content-Type: application/json" https://$cdnUrl/participation/event-list.json |jq '.official.eventIds' | tr -d '[]",')
                latestIotaParticipationEvents=$(echo $latestIotaParticipationEvents)
                if [ "$watchdogIotaInxParticipationThirdParty" = "true" ]; then
                    latestIotaParticipationThirdPartyEvents=$(curl -s -H "Content-Type: application/json" https://$cdnUrl/participation/iota-mainnet/event-list.json |jq '.thirdParty.eventIds' | tr -d '[]",')
                    latestIotaParticipationThirdPartyEvents=$(echo $latestIotaParticipationThirdPartyEvents)
                    if [ ! -z "$latestIotaParticipationThirdPartyEvents" ]; then
                        latestIotaParticipationEvents=$(echo $latestIotaParticipationEvents $latestIotaParticipationThirdPartyEvents)
                        unset latestIotaParticipationThirdPartyEvents
                    fi
                fi
                if [ "$watchdogIotaInxParticipationTangleBay" = "true" ]; then
                    latestIotaParticipationTangleBayEvents=$(curl -s -H "Content-Type: application/json" https://$cdnUrl/participation/iota-mainnet/event-list.json |jq '.tanglebay.eventIds' | tr -d '[]",')
                    latestIotaParticipationTangleBayEvents=$(echo $latestIotaParticipationTangleBayEvents)
                    if [ ! -z "$latestIotaParticipationTangleBayEvents" ]; then
                        latestIotaParticipationEvents=$(echo $latestIotaParticipationEvents $latestIotaParticipationTangleBayEvents)
                        unset latestIotaParticipationTangleBayEvents
                    fi
                fi
                iotaInxParticipationList=$(curl -s localhost:14265/api/participation/v1/events -H "Content-Type: application/json" -H "Authorization: Bearer ${iotaHornetApiJwtToken}" |jq '.data.eventIds' | tr -d '[]",')
                iotaInxParticipationList=$(echo $iotaHornetParticipationList)
                if [ ! -z "$latestIotaParticipationEvents" ]; then
                    for latestIotaParticipationEvent in ${latestIotaParticipationEvents[@]}
                    do
                        iotaInxParticipationEvent=$(echo $iotaInxParticipationList | grep -o "$latestIotaParticipationEvent")
                        if [ -z "$iotaInxParticipationEvent" ] && [ "$iotaInxParticipationEvent" != "$latestIotaParticipationEvent" ]; then
                            iotaHornetPruningIndex=$(curl -s localhost:14265/api/core/v2/info -H "Content-Type: application/json" -H "Authorization: Bearer ${iotaHornetApiJwtToken}" | jq '.status.pruningIndex')
                            latestIotaParticipationEventDetails=$(curl -s -H "Content-Type: application/json" https://$cdnUrl/participation/iota-mainnet/templates/$latestIotaParticipationEvent.json)
                            latestIotaParticipationEventCommencingIndex=$(echo $latestIotaParticipationEventDetails | jq '.milestoneIndexCommence')
                            if [ ! -z "$iotaHornetPruningIndex" ] && [ ! -z "$latestIotaParticipationEventDetails" ] && [ ! -z "$latestIotaParticipationEventCommencingIndex" ] && [ $iotaHornetPruningIndex -le $latestIotaParticipationEventCommencingIndex ] 2>/dev/null; then
                                iotaInxParticipationAddResponse=$(curl http://localhost:14265/api/participation/v1/admin/events -s --http1.1 -X POST -H "Content-Type: application/json" -H "Authorization: Bearer ${iotaHornetApiJwtToken}" -d "${latestIotaParticipationEventDetails}")
                                if [[ $iotaInxParticipationAddResponse = *code\=400* ]] || [[ $iotaInxParticipationAddResponse = *code\=401* ]]; then
                                    iotaHornetApiJwtToken=$( cd $iotaHornetHome/$iotaHornetNetwork ; /usr/bin/iota-hornet tools jwt-api --salt $iotaHornetApiJwtSalt | awk '{ print $5 }')
                                    if [ ! -z "$iotaHornetApiJwtToken" ]; then
                                        sudo sed -i 's~^iotaHornetApiJwtToken=.*~iotaHornetApiJwtToken="'$iotaHornetApiJwtToken'"~' $swarmConfigs/iota-hornet.cfg
                                        echo $iotaHornetApiJwtToken >> $swarmLogs/iotaHornetJwtToken.log
                                    fi
                                fi
                                if [[ $iotaInxParticipationAddResponse = *$latestIotaParticipationEvent* ]]; then
                                    sysDate=`date '+%d-%m-%Y %H-%M-%S'`
                                    latestIotaParticipationEventName=$(echo $latestIotaParticipationEventDetails | jq '.name')
                                    echo "$sysDate [WACHTDOG] INX-Participation (IOTA) - Event \"$latestIotaParticipationEventName\" added." >> $swarmLogs/swarm.log
                                    telegramText="Host: $HOSTNAME%0AApp: INX-Participation (IOTA)%0A%0AAction: Event $latestIotaParticipationEventName added automatically."
                                    source $watchdogModule/watchdogTelegram
                                    unset latestIotaParticipationEventName
                                fi
                                unset iotaInxParticipationAddResponse
                            fi
                            unset iotaHornetPruningIndex latestIotaParticipationEventDetails latestIotaParticipationEventCommencingIndex
                        fi
                        unset iotaInxParticipationEvent
                    done
                fi
                unset latestIotaParticipationEvents iotaInxParticipationList
            fi
        fi
    else
        if [ "$watchdogIotaInxParticipationAutoAdd" = "true" ] && [ -f "/usr/bin/iota-hornet" ] && [ "$iotaHornetNetwork" = "mainnet" ]; then
            source $swarmModule/swarmAuth
            if [ "$swarmAuth" = "200" ]; then
                latestIotaParticipationEvents=$(curl -s -H "Content-Type: application/json" https://$cdnUrl/participation/iota-mainnet/event-list.json |jq '.official.eventIds' | tr -d '[]",')
                latestIotaParticipationEvents=$(echo $latestIotaParticipationEvents)
                if [ "$watchdogIotaInxParticipationThirdParty" = "true" ]; then
                    latestIotaParticipationThirdPartyEvents=$(curl -s -H "Content-Type: application/json" https://$cdnUrl/participation/iota-mainnet/event-list.json |jq '.thirdParty.eventIds' | tr -d '[]",')
                    latestIotaParticipationThirdPartyEvents=$(echo $latestIotaParticipationThirdPartyEvents)
                    if [ ! -z "$latestIotaParticipationThirdPartyEvents" ]; then
                        latestIotaParticipationEvents=$(echo $latestIotaParticipationEvents $latestIotaParticipationThirdPartyEvents)
                        unset latestIotaParticipationThirdPartyEvents
                    fi
                fi
                if [ "$watchdogIotaInxParticipationTangleBay" = "true" ]; then
                    latestIotaParticipationTangleBayEvents=$(curl -s -H "Content-Type: application/json" https://$cdnUrl/participation/iota-mainnet/event-list.json |jq '.tanglebay.eventIds' | tr -d '[]",')
                    latestIotaParticipationTangleBayEvents=$(echo $latestIotaParticipationTangleBayEvents)
                    if [ ! -z "$latestIotaParticipationTangleBayEvents" ]; then
                        latestIotaParticipationEvents=$(echo $latestIotaParticipationEvents $latestIotaParticipationTangleBayEvents)
                        unset latestIotaParticipationTangleBayEvents
                    fi
                fi
                iotaHornetParticipationList=$(curl -s localhost:14265/api/plugins/participation/events -H "Content-Type: application/json" -H "Authorization: Bearer ${iotaHornetApiJwtToken}" | jq '.data.eventIds' | tr -d '[]",')
                iotaHornetParticipationList=$(echo $iotaHornetParticipationList)
                if [ ! -z "$latestIotaParticipationEvents" ]; then
                    for latestIotaParticipationEvent in ${latestIotaParticipationEvents[@]}
                    do
                        iotaHornetParticipationEvent=$(echo $iotaHornetParticipationList | grep -o "$latestIotaParticipationEvent")
                        if [ -z "$iotaHornetParticipationEvent" ] && [ "$iotaHornetParticipationEvent" != "$latestIotaParticipationEvent" ]; then
                            iotaHornetPruningIndex=$(curl -s localhost:14265/api/v1/info | jq '.data.pruningIndex')
                            latestIotaParticipationEventDetails=$(curl -s -H "Content-Type: application/json" https://$cdnUrl/participation/iota-mainnet/templates/$latestIotaParticipationEvent.json)
                            latestIotaParticipationEventCommencingIndex=$(echo $latestIotaParticipationEventDetails | jq '.milestoneIndexCommence')
                            if [ ! -z "$iotaHornetPruningIndex" ] && [ ! -z "$latestIotaParticipationEventCommencingIndex" ] && [ $iotaHornetPruningIndex -le $latestIotaParticipationEventCommencingIndex ] 2>/dev/null; then
                                iotaHornetParticipationAddResponse=$(curl http://localhost:14265/api/plugins/participation/admin/events -s --http1.1 -X POST -H "Content-Type: application/json" -H "Authorization: Bearer ${iotaHornetApiJwtToken}" -d "${latestIotaParticipationEventDetails}")
                                if [[ $iotaHornetParticipationAddResponse = *code\=400* ]] || [[ $iotaHornetParticipationAddResponse = *code\=401* ]]; then
                                    iotaHornetApiJwtToken=$( cd $iotaHornetHome ; /usr/bin/iota-hornet tools jwt-api --salt $iotaHornetApiJwtSalt | awk '{ print $5 }')
                                    if [ ! -z "$iotaHornetApiJwtToken" ]; then
                                        sudo sed -i 's~^iotaHornetApiJwtToken=.*~iotaHornetApiJwtToken="'$iotaHornetApiJwtToken'"~' $swarmConfigs/iota-hornet.cfg
                                        echo $iotaHornetApiJwtToken >> $swarmLogs/iotaHornetJwtToken.log
                                    fi
                                fi
                                if [[ $iotaHornetParticipationAddResponse = *$latestIotaParticipationEvent* ]]; then
                                    sysDate=`date '+%d-%m-%Y %H-%M-%S'`
                                    latestIotaParticipationEventName=$(echo $latestIotaParticipationEventDetails | jq '.name')
                                    echo "$sysDate [WACHTDOG] Hornet (IOTA) - Event \"$latestIotaParticipationEventName\" added." >> $swarmLogs/swarm.log
                                    telegramText="Host: $HOSTNAME%0AApp: Hornet (IOTA)%0A%0AAction: Event $latestIotaParticipationEventName added automatically."
                                    source $watchdogModule/watchdogTelegram
                                    unset latestIotaParticipationEventName
                                fi
                                unset iotaHornetParticipationAddResponse
                            fi
                            unset iotaHornetPruningIndex latestIotaParticipationEventDetails latestIotaParticipationEventCommencingIndex
                        fi
                        unset iotaHornetParticipationEvent
                    done
                fi
                unset latestIotaParticipationEvents iotaHornetParticipationList
            fi
        fi
    fi
    if [ "$watchdogShimmerInxParticipationAutoAdd" = "true" ] && [ -f "/usr/bin/shimmer-hornet" ] && [ -f "/usr/bin/shimmer-inx-participation" ] && [ "$shimmerHornetApiEnabled" = "true" ] && [ "$shimmerHornetNetwork" = "mainnet" ]; then
        source $swarmModule/swarmAuth
        if [ "$swarmAuth" = "200" ]; then
            latestShimmerParticipationEvents=$(curl -s -H "Content-Type: application/json" https://$cdnUrl/participation/shimmer-mainnet/event-list.json |jq '.official.eventIds' | tr -d '[]",')
            latestShimmerParticipationEvents=$(echo $latestShimmerParticipationEvents)
            if [ "$watchdogShimmerInxParticipationThirdParty" = "true" ]; then
                latestShimmerParticipationThirdPartyEvents=$(curl -s -H "Content-Type: application/json" https://$cdnUrl/participation/shimmer-mainnet/event-list.json |jq '.thirdParty.eventIds' | tr -d '[]",')
                latestShimmerParticipationThirdPartyEvents=$(echo $latestShimmerParticipationThirdPartyEvents)
                if [ ! -z "$latestShimmerParticipationThirdPartyEvents" ]; then
                    latestShimmerParticipationEvents=$(echo $latestShimmerParticipationEvents $latestShimmerParticipationThirdPartyEvents)
                    unset latestShimmerParticipationThirdPartyEvents
                fi
            fi
            if [ "$watchdogShimmerInxParticipationTangleBay" = "true" ]; then
                latestShimmerParticipationTangleBayEvents=$(curl -s -H "Content-Type: application/json" https://$cdnUrl/participation/shimmer-mainnet/event-list.json |jq '.tanglebay.eventIds' | tr -d '[]",')
                latestShimmerParticipationTangleBayEvents=$(echo $latestShimmerParticipationTangleBayEvents)
                if [ ! -z "$latestShimmerParticipationTangleBayEvents" ]; then
                    latestShimmerParticipationEvents=$(echo $latestShimmerParticipationEvents $latestShimmerParticipationTangleBayEvents)
                    unset latestShimmerParticipationTangleBayEvents
                fi
            fi
            shimmerInxParticipationList=$(curl -s localhost:14266/api/participation/v1/events -H "Content-Type: application/json" -H "Authorization: Bearer ${shimmerHornetApiJwtToken}" |jq '.data.eventIds' | tr -d '[]",')
            shimmerInxParticipationList=$(echo $iotaHornetParticipationList)
            if [ ! -z "$latestShimmerParticipationEvents" ]; then
                for latestShimmerParticipationEvent in ${latestShimmerParticipationEvents[@]}
                do
                    shimmerInxParticipationEvent=$(echo $shimmerInxParticipationList | grep -o "$latestShimmerParticipationEvent")
                    if [ -z "$shimmerInxParticipationEvent" ] && [ "$shimmerInxParticipationEvent" != "$latestShimmerParticipationEvent" ]; then
                        shimmerHornetPruningIndex=$(curl -s localhost:14266/api/core/v2/info -H "Content-Type: application/json" -H "Authorization: Bearer ${shimmerHornetApiJwtToken}" | jq '.status.pruningIndex')
                        latestShimmerParticipationEventDetails=$(curl -s -H "Content-Type: application/json" https://$cdnUrl/participation/shimmer-mainnet/templates/$latestShimmerParticipationEvent.json)
                        latestShimmerParticipationEventCommencingIndex=$(echo $latestShimmerParticipationEventDetails | jq '.milestoneIndexCommence')
                        if [ ! -z "$shimmerHornetPruningIndex" ] && [ ! -z "$latestShimmerParticipationEventDetails" ] && [ ! -z "$latestShimmerParticipationEventCommencingIndex" ] && [ $shimmerHornetPruningIndex -le $latestShimmerParticipationEventCommencingIndex ] 2>/dev/null; then
                            shimmerInxParticipationAddResponse=$(curl http://localhost:14266/api/participation/v1/admin/events -s --http1.1 -X POST -H "Content-Type: application/json" -H "Authorization: Bearer ${shimmerHornetApiJwtToken}" -d "${latestShimmerParticipationEventDetails}")
                            if [[ $shimmerInxParticipationAddResponse = *code\=400* ]] || [[ $shimmerInxParticipationAddResponse = *code\=401* ]]; then
                                shimmerHornetApiJwtToken=$( cd $shimmerHornetHome/$shimmerHornetNetwork ; /usr/bin/shimmer-hornet tools jwt-api --salt $shimmerHornetApiJwtSalt | awk '{ print $5 }')
                                if [ ! -z "$shimmerHornetApiJwtToken" ]; then
                                    sudo sed -i 's~^shimmerHornetApiJwtToken=.*~shimmerHornetApiJwtToken="'$shimmerHornetApiJwtToken'"~' $swarmConfigs/shimmer-hornet.cfg
                                    echo $shimmerHornetApiJwtToken >> $swarmLogs/shimmerHornetJwtToken.log
                                fi
                            fi
                            if [[ $shimmerInxParticipationAddResponse = *$latestShimmerParticipationEvent* ]]; then
                                sysDate=`date '+%d-%m-%Y %H-%M-%S'`
                                latestShimmerParticipationEventName=$(echo $latestShimmerParticipationEventDetails | jq '.name')
                                echo "$sysDate [WACHTDOG] INX-Participation (Shimmer) - Event \"$latestShimmerParticipationEventName\" added." >> $swarmLogs/swarm.log
                                telegramText="Host: $HOSTNAME%0A%0AApp: INX-Participation (Shimmer)%0AAction: Event $latestShimmerParticipationEventName added automatically."
                                source $watchdogModule/watchdogTelegram
                                unset latestShimmerParticipationEventName
                            fi
                            unset shimmerInxParticipationAddResponse
                        fi
                        unset shimmerHornetPruningIndex latestShimmerParticipationEventDetails latestShimmerParticipationEventCommencingIndex
                    fi
                    unset shimmerInxParticipationEvent
                done
            fi
            unset latestShimmerParticipationEvents shimmerInxParticipationList
        fi
    fi
fi