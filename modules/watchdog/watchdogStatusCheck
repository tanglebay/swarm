#!/bin/bash
source $swarmConfigs/watchdog.cfg

# Hornet
swarmApps=(iota-hornet shimmer-hornet goshimmer wasp shimmer-inx-dashboard shimmer-inx-indexer shimmer-inx-mqtt shimmer-inx-participation shimmer-inx-poi)
for swarmApp in ${swarmApps[@]}
do
    if [ -f "/usr/bin/$swarmApp" ]; then
        source $swarmModule/swarmAppVars

        swarmAppStatusCounter=${swarmAppPrefix}StatusCounter
        if [ -n "${!swarmAppStatusCounter}" ]; then
            if [ ${!swarmAppStatusCounter} -ne ${!swarmAppStatusCounter} ] 2>/dev/null; then
                swarmAppStatusCounter=0
                sudo sed -i 's/^'${swarmAppPrefix}'StatusCounter=.*/'${swarmAppPrefix}'StatusCounter='$swarmAppStatusCounter'/' $swarmConfigs/watchdog.cfg
            fi
        else
            swarmAppStatusCounter=0
            sudo sed -i 's/^'${swarmAppPrefix}'StatusCounter=.*/'${swarmAppPrefix}'StatusCounter='$swarmAppStatusCounter'/' $swarmConfigs/watchdog.cfg
        fi

        source $swarmConfigs/watchdog.cfg
        swarmAppHome=${swarmAppPrefix}Home
        swarmAppNetwork=${swarmPrefix}Network
        swarmAppStatus=${swarmAppPrefix}Status
        swarmAppServiceStatusCheck=${swarmAppPrefix}ServiceStatusCheck
        swarmAppAllowDbReset=${swarmAppPrefix}AllowDbReset
        swarmAppStatusCounter=${swarmAppPrefix}StatusCounter

        # START
        if [ "${!swarmAppStatus}" != "active" ] && [ "${!swarmAppServiceStatusCheck}" = "true" ]; then
            if [ "${!swarmAppStatus}" = "failed" ]; then
                sudo systemctl reset-failed $swarmApp 2>/dev/null
            fi
            if [ ${!swarmAppStatusCounter} -lt 5 ] 2>/dev/null; then
                if [ ${!swarmAppStatusCounter} -ge 1 ] 2>/dev/null; then
                    sudo systemctl stop $swarmApp 2>/dev/null
                    restartDate=`date '+%d-%m-%Y %H-%M-%S'`
                    if [ "${!swarmAppAllowDbReset}" = "true" ]; then
                        if [ "$swarmApp" = "iota-hornet" ] && [[ $iotaHornetPlugins = *participation* ]] && [ ${!swarmAppStatusCounter} -eq 2 ] 2>/dev/null; then
                            sudo rm -rf $iotaHornetHome/${iotaHornetNetwork}db/participation 2>/dev/null
                            echo "$restartDate [WACHTDOG] $swarmAppName - Participation database reset because of too many failed restarts." >> $swarmLogs/swarm.log
                            telegramText="Host: $HOSTNAME%0AApp: $swarmAppName%0A%0AAction: Participation database reset because of too many failed restarts."
                            source $watchdogModules/watchdogTelegram
                        fi
                        if [ ${!swarmAppStatusCounter} -ge 3 ] 2>/dev/null; then
                            if [ "${!swarmAppAllowDbReset}" = "true" ]; then
                                if [ "$killall" = "true" ]; then
                                    sudo killall -s SIGKILL $swarmApp 2>/dev/null
                                fi
                                if [ "$swarmApp" = "iota-hornet" ]; then
                                    sudo rm -rf ${!swarmAppHome}/${iotaHornetNetwork}db $iotaHornetHome/snapshots/${iotaHornetNetwork}/*.bin 2>/dev/null
                                    swarmAppDbDeleted=true
                                fi
                                if [ "$swarmApp" = "shimmer-hornet" ]; then
                                    sudo rm -rf ${!swarmAppHome}/${!swarmAppNetwork}/database 2>/dev/null
                                    swarmAppDbDeleted=true
                                fi
                                if [ "$swarmApp" = "goshimmer" ]; then
                                    sudo rm -rf $goshimmerHome/mainnetdb $goshimmerHome/peerdb
                                    swarmAppDbDeleted=true
                                fi
                                if [[ $swarmApp = *shimmer-inx* ]]; then
                                    if [ -d "${!swarmAppHome}/database" ]; then
                                        sudo rm -rf ${!swarmAppHome}/database 2>/dev/null
                                        swarmAppDbDeleted=true
                                    fi
                                fi
                                if [ "$swarmAppDbDeleted" = "true" ]; then
                                    echo "$restartDate [WACHTDOG] $swarmAppName - Database reset because of too many failed restarts." >> $swarmLogs/swarm.log
                                    if [ ${!swarmAppStatusCounter} -eq 3 ] 2>/dev/null; then
                                        telegramText="Host: $HOSTNAME%0AApp: $swarmAppName%0A%0AAction: Database reset because of too many failed restarts."
                                        source $watchdogModules/watchdogTelegram
                                    fi
                                fi
                            fi
                        fi
                    fi
                    let swarmAppStatusCounter=${!swarmAppStatusCounter}+1
                    sudo systemctl start $swarmApp 2>/dev/null
                    if [ "$swarmApp" = "shimmer-hornet" ]; then
                        sleep 10
                        for shimmerInxPlugin in ${shimmerInxPlugins[@]}
                        do
                            if [ -f "/usr/bin/shimmer-inx-$shimmerInxPlugin" ]; then
                                sudo systemctl restart shimmer-inx-$shimmerInxPlugin 2>/dev/null
                            fi
                        done
                        unset shimmerInxPlugin
                    fi
                    echo "$restartDate [WACHTDOG] $swarmAppName - Service restarted." >> $swarmLogs/swarm.log
                    if [ ${swarmAppStatusCounter} -eq 1 ] 2>/dev/null; then
                        telegramText="Host: $HOSTNAME%0AApp: $swarmAppName%0A%0AAction: Service restarted."
                        source $watchdogModules/watchdogTelegram
                    fi
                else
                    let swarmAppStatusCounter=${!swarmAppStatusCounter}+1
                fi
                sudo sed -i 's/^'$swarmAppPrefix'StatusCounter=.*/'$swarmAppPrefix'StatusCounter='$swarmAppStatusCounter'/' $swarmConfigs/watchdog.cfg
            fi
        else
            if [ ${!swarmAppStatusCounter} -gt 0 ] 2>/dev/null; then
                let swarmAppStatusCounter=${!swarmAppStatusCounter}-1
                sudo sed -i 's/^'$swarmAppPrefix'StatusCounter=.*/'$swarmAppPrefix'StatusCounter='$swarmAppStatusCounter'/' $swarmConfigs/watchdog.cfg
            fi
        fi
        unset swarmAppName swarmAppPrefix swarmAppHome swarmAppStatus swarmAppServiceStatusCheck swarmAppAllowDbReset swarmAppStatusCounter
    fi
done

unset swarmApp

################################################################################################################################################