#!/bin/bash

# HORNET MENU
while [ $exitCode -lt 1 ]; do
    clear
    CHOICE=$(
        whiptail --title "Hornet - Menu" --menu "\nChoose an option" 20 65 0 \
        "1)" "Hornet Info" \
        "2)" "Hornet Configurations" \
        "3)" "Hornet Debugging" \
        "4)" "Hornet Installer" 3>&2 2>&1 1>&3
    )
    exitstatus=$?
    if [ "$exitstatus" = "1" ]; then
        exitCode=1
    fi

    case $CHOICE in
        "1)")
            source $hornetModules/hornetInfo
        ;;
        "2)")
            if [ -f "/usr/bin/hornet" ]; then
                while [ $exitCode -lt 1 ]; do
                    clear
                    CHOICE=$(
                        whiptail --title "Hornet - Configuration" --menu "\nChoose an option" 16 65 0 \
                        "1)" "Hornet configuration" \
                        "2)" "Advanced Configuration" 3>&2 2>&1 1>&3
                    )

                    exitstatus=$?
                    if [ "$exitstatus" = "1" ]; then
                        exitCode=1
                    fi

                    case $CHOICE in
                        "1)")
                            source $hornetModules/hornetConfiguration
                        ;;
                        "2)")
                            while [ $exitCode -lt 1 ]; do
                                clear
                                CHOICE=$(
                                    whiptail --title "Hornet - Configuration" --menu "\nChoose an option" 22 65 0 \
                                    "1)" "Peering.json" \
                                    "2)" "Mainnet.json" \
                                    "3)" "Comnet.json" \
                                    "4)" "Devnet.json" \
                                    "5)" "Event.json" \
                                    "6)" "Hornet.cfg (SWARM)" 3>&2 2>&1 1>&3
                                )

                                exitstatus=$?
                                if [ "$exitstatus" = "1" ]; then
                                    exitCode=1
                                fi

                                case $CHOICE in
                                    "1)")
                                        sudo $swarmCLEditor $hornetHome/peering.json
                                        if (whiptail --title "Hornet - Configuration" --yesno --defaultno "Would you like to restart hornet now?" 8 65); then
                                            {
                                                echo 0
                                                echo 50
                                                sudo systemctl restart hornet
                                                echo 100
                                                sleep 0.25
                                            } | whiptail --gauge "Please wait while Hornet is restarting..." 8 65 0
                                        fi
                                    ;;
                                    "2)")
                                        sudo $swarmCLEditor $hornetHome/config.json
                                        if (whiptail --title "Hornet - Configuration" --yesno --defaultno "Would you like to restart hornet now?" 8 65); then
                                            {
                                                echo 0
                                                echo 50
                                                sudo systemctl restart hornet
                                                echo 100
                                                sleep 0.25
                                            } | whiptail --gauge "Please wait while Hornet is restarting..." 8 65 0
                                        fi
                                    ;;
                                    "3)")
                                        sudo $swarmCLEditor $hornetHome/config_comnet.json
                                        if (whiptail --title "Hornet - Configuration" --yesno --defaultno "Would you like to restart hornet now?" 8 65); then
                                            {
                                                echo 0
                                                echo 50
                                                sudo systemctl restart hornet
                                                echo 100
                                                sleep 0.25
                                            } | whiptail --gauge "Please wait while Hornet is restarting..." 8 65 0
                                        fi
                                    ;;
                                    "4)")
                                        sudo $swarmCLEditor $hornetHome/config_devnet.json
                                        if (whiptail --title "Hornet - Configuration" --yesno --defaultno "Would you like to restart hornet now?" 8 65); then
                                            {
                                                echo 0
                                                echo 50
                                                sudo systemctl restart hornet
                                                echo 100
                                                sleep 0.25
                                            } | whiptail --gauge "Please wait while Hornet is restarting..." 8 65 0
                                        fi
                                    ;;
                                    "5)")
                                        sudo $swarmCLEditor $swarmConfigs/event.json
                                    ;;
                                    "6)")
                                        sudo $swarmCLEditor $swarmConfigs/hornet.cfg
                                        if (whiptail --title "Hornet - Configuration" --yesno --defaultno "Would you like to restart hornet now?" 8 65); then
                                            {
                                                echo 0
                                                source $hornetModules/hornetParser
                                                echo 50
                                                sudo systemctl restart hornet
                                                echo 100
                                                sleep 0.25
                                            } | whiptail --gauge "Please wait while Hornet is restarting..." 8 65 0
                                        fi
                                    ;;
                                esac
                            done
                            exitCode=0
                        ;;
                    esac
                done
                exitCode=0
            else
                whiptail --title "Hornet - Configuration" --msgbox "Hornet installation not found, please install Hornet first!" 8 65
            fi
        ;;
        "3)")
            if [ -f "/usr/bin/hornet" ]; then
                while [ $exitCode -lt 1 ]; do
                    clear
                    CHOICE=$(
                        whiptail --title "Hornet - Debugging" --menu "\nChoose your option" 18 65 0 \
                        "1)" "Show Hornet log" \
                        "2)" "Start/Stop Hornet" \
                        "3)" "Reset Hornet event database"
                        "4)" "Reset Hornet all databases" \
                        "5)" "Reset Hornet config" 3>&2 2>&1 1>&3
                    )
                    exitstatus=$?
                    if [ "$exitstatus" = "1" ]; then
                        exitCode=1
                    fi
                    case $CHOICE in
                        "1)")
                            # Display last 65 lines of log
                            sudo journalctl -fu hornet | less -FRSXM
                            clear
                        ;;
                        "2)")
                            CHOICE=$(
                                whiptail --title "Hornet - Debugging" --menu "\nChoose your option" 20 65 0 \
                                "1)" "Restart Hornet" \
                                "2)" "Start Hornet" \
                                "3)" "Stop Hornet" \
                                "4)" "Status Hornet" 3>&2 2>&1 1>&3
                            )
                            case $CHOICE in
                                "1)")
                                    {
                                        echo 0
                                        echo 50
                                        sudo systemctl restart hornet
                                        echo 100
                                        sleep 0.25
                                    } | whiptail --gauge "Please wait while Hornet is restarting..." 8 65 0
                                    whiptail --title "Hornet - Debugging" --msgbox "Hornet successfully restarted" 8 65
                                ;;
                                "2)")
                                    {
                                        echo 0
                                        echo 50
                                        sudo systemctl start hornet
                                        echo 100
                                        sleep 0.25
                                    } | whiptail --gauge "Please wait while Hornet is starting..." 8 65 0
                                    whiptail --title "Hornet - Debugging" --msgbox "Hornet successfully started" 8 65
                                ;;
                                "3)")
                                    {
                                        echo 0
                                        echo 50
                                        sudo systemctl stop hornet
                                        echo 100
                                        sleep 0.25
                                    } | whiptail --gauge "Please wait while Hornet is stopping..." 8 65 0
                                    whiptail --title "Hornet - Debugging" --msgbox "Hornet successfully stopped." 8 65
                                ;;
                                "4)")
                                    hornetStatus="$(sudo systemctl status hornet)"
                                    whiptail --title "Hornet - Debugging" --msgbox "$hornetStatus" 15 65
                                ;;
                            esac
                        ;;
                        "4)")
                            if (whiptail --title "Hornet - Debugging" --yesno --defaultno "Are you sure you want to delete the hornet event database?" 8 65); then
                                source $swarmConfigs/hornet.cfg
                                {
                                    echo 0
                                    echo 25
                                    sudo systemctl stop hornet
                                    echo 50
                                    sudo rm -rf $hornetHome/${hornetNetwork}db/participation > /dev/null 2>&1
                                    echo 75
                                    sudo systemctl start hornet
                                    echo 100
                                    sleep 0.25
                                } | whiptail --gauge "Please wait while the cleanup is running (this may take a while)..." 8 65 0
                                whiptail --title "Hornet - Debugging" --msgbox "Event database successfully reset." 8 65
                            fi
                        ;;
                        "4)")
                            if (whiptail --title "Hornet - Debugging" --yesno --defaultno "Are you sure you want to delete the hornet database?" 8 65); then
                                source $swarmConfigs/hornet.cfg
                                {
                                    echo 0
                                    echo 25
                                    if [ "$killall" = "true" ]; then
                                        sudo killall -s SIGKILL hornet > /dev/null 2>&1
                                    else
                                        sudo systemctl stop hornet
                                    fi
                                    echo 50
                                    sudo rm -rf $hornetHome/${hornetNetwork}db $hornetHome/snapshots/${hornetNetwork}/*.bin
                                    sudo sed -i 's/^hornetStatusCounter=.*/hornetStatusCounter=0/' $swarmConfigs/watchdog.cfg
                                    sudo sed -i 's/^hornetSyncCounter=.*/hornetSyncCounter=0/' $swarmConfigs/watchdog.cfg
                                    echo 75
                                    sudo systemctl start hornet
                                    echo 100
                                    sleep 0.25
                                } | whiptail --gauge "Please wait while the cleanup is running (this may take a while)..." 8 65 0
                                whiptail --title "Hornet - Debugging" --msgbox "${hornetNetwork}DB successfully reset." 8 65
                            fi
                        ;;
                        "5)")
                            if (whiptail --title "Hornet - Debugging" --yesno --defaultno "Are you sure you want to reset the hornet config file?" 8 65); then
                                source $swarmConfigs/hornet.cfg
                                {
                                    echo 0
                                    echo 20
                                    sudo systemctl stop hornet
                                    echo 40
                                    if [ "$hornetNetwork" = "mainnet" ]; then
                                        sudo -u hornet wget -q -O $hornetHome/config.json https://raw.githubusercontent.com/gohornet/hornet/mainnet/$hornetConfig.json
                                    else
                                        sudo -u hornet wget -q -O $hornetHome/$hornetConfig.json https://raw.githubusercontent.com/gohornet/hornet/develop/$hornetConfig.json
                                    fi
                                    echo 60
                                    source $hornetModules/hornetParser
                                    echo 80
                                    sudo systemctl start hornet
                                    echo 100
                                    sleep 0.25
                                } | whiptail --gauge "Please wait while the config reset is running (this may take a while)..." 8 65 0
                                whiptail --title "Hornet - Debugging" --msgbox "${hornetNetwork} config successfully reset." 8 65
                            fi
                        ;;
                    esac
                done
                exitCode=0
            else
                whiptail --title "Hornet - Debugging" --msgbox "Hornet installation not found, please install Hornet first." 8 65
            fi
        ;;
        "4)")
            while [ $exitCode -lt 1 ]; do
                CHOICE=$(
                    whiptail --title "Hornet - Installer" --menu "\nChoose your option" 18 65 0 \
                    "1)" "Update Hornet" \
                    "2)" "Install Hornet" \
                    "3)" "Remove Hornet" 3>&2 2>&1 1>&3
                )

                exitstatus=$?
                if [ "$exitstatus" = "1" ]; then
                    exitCode=1
                fi

                case $CHOICE in
                    "1)")
                        if [ -f "/usr/bin/hornet" ]; then
                            if (whiptail --title "Hornet - Installer" --yesno --defaultno "Do you really want to update Hornet?" 8 65); then
                                # Update HORNET
                                source $hornetModules/hornetVersion
                                if [ "$hornetVersion" != "$latestHornetVersion" ]; then
                                    {
                                        echo 0
                                        sudo apt-get update > /dev/null 2>&1
                                        echo 33
                                        sudo apt-get -qq -y -o Dpkg::Options::=--force-confdef -o Dpkg::Options::=--force-confnew install hornet > /dev/null 2>&1
                                        echo 66
                                        IFS=', ' read -r -a ARRAYhornetConfigs <<< "$hornetConfigs"
                                        for hornetConfig in "${ARRAYhornetConfigs[@]}"
                                        do
                                            if [ -f "$hornetHome/$hornetConfig.json.dpkg-dist" ]; then
                                                sudo cp -r $hornetHome/$hornetConfig.json.dpkg-dist $hornetHome/$hornetConfig.json > /dev/null 2>&1
                                                sudo rm -rf $hornetHome/$hornetConfig.json.dpkg* > /dev/null 2>&1
                                            fi
                                        done
                                        unset ARRAYhornetConfigs
                                        unset hornetConfig                                
                                        echo 100
                                        sleep 0.5
                                    } | whiptail --gauge "Please wait while Hornet is updated..." 8 65 0
                                    newHornetVersion=$(hornet -v | awk '{ print $2 }')
                                    if [ "$hornetVersion" != "$newHornetVersion" ]; then
                                        {
                                            # CALL MODULE CONFIGPARSER
                                            source $hornetModules/hornetParser
                                            sudo systemctl restart hornet
                                        } | whiptail --gauge "Please wait while parsing the configuration..." 8 65 0
                                    fi
                                    whiptail --title "Hornet - Installer" --msgbox "Hornet successfully updated." 8 65
                                else
                                    whiptail --title "Hornet - Installer" --msgbox "Congratulations, you have already installed the latest version of Hornet." 8 65
                                fi
                            fi
                        else
                            whiptail --title "Hornet - Installer" --msgbox "Sorry, but Hornet is not installed." 8 65
                        fi
                    ;;
                    "2)")
                        source $hornetModules/hornetInstaller
                    ;;
                    "3)")
                        if (whiptail --title "Hornet - Installer" --yesno --defaultno "Do you really want to remove Hornet?" 8 65); then
                            {
                                echo 0
                                echo 10
                                sudo systemctl stop hornet > /dev/null 2>&1
                                echo 20
                                sudo systemctl disable hornet > /dev/null 2>&1
                                echo 30
                                sudo apt -qq purge hornet -y > /dev/null 2>&1
                                echo 60
                                sudo apt -qq autoremove -y > /dev/null 2>&1
                                echo 70
                                sudo systemctl daemon-reload > /dev/null 2>&1
                                echo 80
                                if [ "$ufw" = "true" ]; then
                                    sudo ufw delete allow $hornetGossipPort/tcp > /dev/null 2>&1
                                    sudo ufw delete allow $hornetAutopeeringPort/udp > /dev/null 2>&1
                                fi
                                sudo rm -rf $hornetHome > /dev/null 2>&1
                                echo 90
                                if [ -f "/etc/nginx/sites-enabled/hornet" ]; then
                                    sudo sed -i 's/^hornetApiPort=.*/hornetApiPort=/' $swarmConfigs/proxy.cfg
                                    sudo rm -rf /etc/nginx/sites-enabled/hornet > /dev/null 2>&1
                                    sudo systemctl reload nginx
                                fi
                                if [ -f "$proxyLandingPage" ]; then
                                    sudo sed -i 's/https:\/\/'$proxyHornetDashboardDomain':'$proxyHornetDashboardPort'\/dashboard" target="_blank/#/g' $proxyLandingPage
                                    sudo sed -i 's~/img/hornet.*id~/img/hornet_logo_gray.svg" alt="Hornet not installed" id~' $proxyLandingPage
                                fi
                                echo 100
                            } | whiptail --gauge "Please wait while Hornet will be removed..." 8 65 0
                            whiptail --title "Hornet - Installer" --msgbox "Hornet successfully removed." 8 65
                        fi
                    ;;
                esac
            done
            exitCode=0
        ;;
    esac
done
exitCode=0
