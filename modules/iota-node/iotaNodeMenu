#!/bin/bash

# HORNET MENU
while [ $exitCode -lt 1 ]; do
    source $swarmConfigsPath/iota-node.cfg
    clear
    CHOICE=$(
        whiptail --title "Node [IOTA] Menu" --menu "\nChoose an option" 24 70 0 \
        "" "" \
        "1)" "Node Info" \
        "2)" "Node Configuration" \
        "3)" "Node Management" \
        "4)" "Node Installer" 3>&2 2>&1 1>&3
    )
    exitstatus=$?
    if [ "$exitstatus" = "1" ]; then
        exitCode=1
    fi

    case $CHOICE in
        "1)")
            source $iotaNodeModulePath/iotaNodeInfo
        ;;
        "2)")
            while [ $exitCode -lt 1 ]; do
                clear
                CHOICE=$(
                    whiptail --title "Node [IOTA] Configuration" --menu "\nChoose an option" 24 70 0 \
                    "" "" \
                    "1)" "Node Configuration" \
                    "2)" "Advanced Configuration" 3>&2 2>&1 1>&3
                )

                exitstatus=$?
                if [ "$exitstatus" = "1" ]; then
                    exitCode=1
                fi

                case $CHOICE in
                    "1)")
                        source $iotaNodeModulePath/iotaNodeConfiguration
                    ;;
                    "2)")
                        while [ $exitCode -lt 1 ]; do
                            clear
                            CHOICE=$(
                                whiptail --title "Node [IOTA] Configuration" --menu "\nChoose an option" 24 70 0 \
                                "" "" \
                                "1)" "Peering.json" \
                                "2)" "Config_Mainnet.json" \
                                "3)" "Iota-Node.cfg (SWARM)" 3>&2 2>&1 1>&3
                            )

                            exitstatus=$?
                            if [ "$exitstatus" = "1" ]; then
                                exitCode=1
                            fi

                            case $CHOICE in
                                "1)")
                                    if [ -f "$iotaNodePath/peering.json" ]; then
                                        $swarmCLEditor $iotaNodePath/peering.json
                                        if (whiptail --title "Node [IOTA] Configuration" --yesno --defaultno "Would you like to restart [IOTA] Node now? (INX apps start delayed)" 8 70); then
                                            if [ ! -f "/tmp/iota-node.lock" ]; then
                                                touch /tmp/iota-node.lock > /dev/null 2>&1
                                            fi
                                            {
                                                echo 0
                                                echo 25
                                                ( cd $swarmDockerPath ; docker compose -f docker-iota.yml down > /dev/null 2>&1 )
                                                echo 50
                                                cp -rf $swarmConfigsPath/docker-env.cfg > $swarmDockerPath/.env > /dev/null 2>&1
                                                echo 75
                                                ( cd $swarmDockerPath ; docker compose -f docker-iota.yml up -d > /dev/null 2>&1 )
                                                echo 100
                                            } | whiptail --gauge "Please wait while [IOTA] Node is restarting..." 8 70 0
                                            if [ -f "/tmp/iota-node.lock" ]; then
                                                rm -rf /tmp/iota-node.lock > /dev/null 2>&1
                                            fi
                                        fi
                                    else
                                        whiptail --title "Node [IOTA] Configuration" --msgbox "[IOTA] Node not installed, please install the node first" 8 70
                                    fi
                                ;;
                                "2)")
                                    if [ -f "$iotaNodePath/config.json" ]; then
                                        $swarmCLEditor $iotaNodePath/config.json
                                        if (whiptail --title "Node [IOTA] Configuration" --yesno --defaultno "Would you like to restart [IOTA] Node now? (INX apps start delayed)" 8 70); then
                                            if [ ! -f "/tmp/iota-node.lock" ]; then
                                                touch /tmp/iota-node.lock > /dev/null 2>&1
                                            fi
                                            {
                                                echo 0
                                                echo 25
                                                ( cd $swarmDockerPath ; docker compose -f docker-iota.yml down > /dev/null 2>&1 )
                                                echo 50
                                                cp -rf $swarmConfigsPath/docker-env.cfg > $swarmDockerPath/.env > /dev/null 2>&1
                                                echo 75
                                                ( cd $swarmDockerPath ; docker compose -f docker-iota.yml up -d > /dev/null 2>&1 )
                                                echo 100
                                            } | whiptail --gauge "Please wait while [IOTA] Node is restarting..." 8 70 0
                                            if [ -f "/tmp/iota-node.lock" ]; then
                                                rm -rf /tmp/iota-node.lock > /dev/null 2>&1
                                            fi
                                        fi
                                    else
                                        whiptail --title "Node [IOTA] Configuration" --msgbox "[IOTA] Node not installed, please install the node first" 8 70
                                    fi
                                ;;
                                "3)")
                                    $swarmCLEditor $swarmConfigsPath/iota-node.cfg
                                    if [ -d $iotaNodePath ]; then
                                        if (whiptail --title "Node [IOTA] Configuration" --yesno --defaultno "Would you like to restart [IOTA] Node now? (INX apps start delayed)" 8 70); then
                                            if [ ! -f "/tmp/iota-node.lock" ]; then
                                                touch /tmp/iota-node.lock > /dev/null 2>&1
                                            fi
                                            {
                                                echo 0
                                                echo 20
                                                source $iotaNodeModulePath/iotaNodeParser
                                                echo 40
                                                ( cd $swarmDockerPath ; docker compose -f docker-iota.yml down > /dev/null 2>&1 )
                                                echo 60
                                                cp -rf $swarmConfigsPath/docker-env.cfg > $swarmDockerPath/.env > /dev/null 2>&1
                                                echo 80
                                                ( cd $swarmDockerPath ; docker compose -f docker-iota.yml up -d > /dev/null 2>&1 )
                                                echo 100
                                            } | whiptail --gauge "Please wait while [IOTA] Node is restarting..." 8 70 0
                                            if [ -f "/tmp/iota-node.lock" ]; then
                                                rm -rf /tmp/iota-node.lock > /dev/null 2>&1
                                            fi
                                        fi
                                    fi
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                esac
            done
            exitCode=0
        ;;
        "3)")
            if [ -d $iotaNodePath ]; then
                while [ $exitCode -lt 1 ]; do
                    clear
                    CHOICE=$(
                        whiptail --title "Node [IOTA] Management" --menu "\nChoose your option" 24 70 0 \
                        "" "" \
                        "1)" "Node Log" \
                        "2)" "Start/Stop Node" \
                        "3)" "Reset Node All Databases" \
                        "4)" "Reset Node Config" 3>&2 2>&1 1>&3
                    )
                    exitstatus=$?
                    if [ "$exitstatus" = "1" ]; then
                        exitCode=1
                    fi
                    case $CHOICE in
                        "1)")
                            while [ $exitCode -lt 1 ]; do
                                clear
                                CHOICE=$(
                                    whiptail --title "Node [IOTA] Management" --menu "\nChoose your option" 24 70 0 \
                                    "" "" \
                                    "1)" "Show Live Log" 3>&2 2>&1 1>&3
                                )
                                exitstatus=$?
                                if [ "$exitstatus" = "1" ]; then
                                    exitCode=1
                                fi
                                case $CHOICE in
                                    "1)")
                                        ( cd $swarmDockerPath ; docker-compose logs iota-node -f )
                                    ;;
                                esac
                            done
                            exitCode=0
                        ;;
                        "2)")
                            while [ $exitCode -lt 1 ]; do
                                CHOICE=$(
                                    whiptail --title "Node [IOTA] Management" --menu "\nChoose your option" 24 70 0 \
                                    "" "" \
                                    "1)" "Restart Node" \
                                    "2)" "Start Node" \
                                    "3)" "Stop Node" 3>&2 2>&1 1>&3
                                )
                                exitStatus=$?
                                if [ "$exitStatus" = "1" ]; then
                                    exitCode=1
                                fi
                                case $CHOICE in
                                    "1)")
                                        if [ ! -f "/tmp/iota-node.lock" ]; then
                                            touch /tmp/iota-node.lock > /dev/null 2>&1
                                        fi
                                        {
                                            echo 0
                                            echo 25
                                            ( cd $swarmDockerPath ; docker compose -f docker-iota.yml down > /dev/null 2>&1 )
                                            echo 50
                                            cp -rf $swarmConfigsPath/docker-env.cfg > $swarmDockerPath/.env > /dev/null 2>&1
                                            echo 75
                                            ( cd $swarmDockerPath ; docker compose -f docker-iota.yml up -d > /dev/null 2>&1 )
                                            echo 100
                                        } | whiptail --gauge "Please wait while [IOTA] Node is restarting..." 8 70 0
                                        if [ -f "/tmp/iota-node.lock" ]; then
                                            rm -rf /tmp/iota-node.lock > /dev/null 2>&1
                                        fi
                                        whiptail --title "Node [IOTA] Management" --msgbox "[IOTA] Node successfully restarted. (INX apps start delayed)" 8 70
                                    ;;
                                    "2)")
                                        {
                                            echo 0
                                            echo 33
                                            cp -rf $swarmConfigsPath/docker-env.cfg > $swarmDockerPath/.env > /dev/null 2>&1
                                            echo 66
                                            ( cd $swarmDockerPath ; docker compose -f docker-iota.yml up -d > /dev/null 2>&1 )
                                            echo 100
                                        } | whiptail --gauge "Please wait while [IOTA] Node is starting..." 8 70 0
                                        if [ -f "/tmp/iota-node.lock" ]; then
                                            rm -rf /tmp/iota-node.lock > /dev/null 2>&1
                                        fi
                                        whiptail --title "Node [IOTA] Management" --msgbox "[IOTA] Node successfully started. (INX apps start delayed)" 8 70
                                    ;;
                                    "3)")
                                        if [ ! -f "/tmp/iota-node.lock" ]; then
                                            touch /tmp/iota-node.lock > /dev/null 2>&1
                                        fi
                                        {
                                            echo 0
                                            echo 50
                                            ( cd $swarmDockerPath ; docker compose -f docker-iota.yml down > /dev/null 2>&1 )
                                            echo 100
                                            sleep 0.25
                                        } | whiptail --gauge "Please wait while [IOTA] Node is stopping..." 8 70 0
                                        whiptail --title "Node [IOTA] Management" --msgbox "[IOTA] Node successfully stopped." 8 70
                                    ;;
                                esac
                            done
                            exitCode=0
                        ;;
                        "3)")
                            if (whiptail --title "Node [IOTA] Management" --yesno --defaultno "Are you sure you want to delete the [IOTA] Node database?" 8 70); then
                                source $iotaNodeModulePath/iotaNodeMenuSnapshots
                                if [ "$exitstatus" != "1" ]; then
                                    source $swarmConfigsPath/iota-node.cfg
                                    if [ ! -f "/tmp/iota-node.lock" ]; then
                                        touch /tmp/iota-node.lock > /dev/null 2>&1
                                    fi
                                    {
                                        echo 0
                                        echo 20
                                        echo 40
                                        ( cd $swarmDockerPath ; docker compose -f docker-iota.yml down > /dev/null 2>&1)
                                        echo 60
                                        rm -rf $iotaNodePath/database $iotaNodePath/snapshots/*.bin > /dev/null 2>&1
                                        if [ ! -z "$iotaNodeSnapshotSource" ]; then
                                            if [ ! -d "$iotaNodePath/snapshots" ]; then
                                                sudo -u 65532 mkdir -p $iotaNodePath/snapshots > /dev/null 2>&1
                                            fi
                                            sudo -u 65532 wget -q -O $iotaNodePath/snapshots/full_snapshot.bin $iotaNodeSnapshotSource
                                        fi
                                        sed -i 's/^iotaNodeStatusCounter=.*/iotaNodeStatusCounter=0/' $swarmConfigsPath/watchdog.cfg
                                        sed -i 's/^iotaNodeSyncCounter=.*/iotaNodeSyncCounter=0/' $swarmConfigsPath/watchdog.cfg
                                        echo 80
                                        ( cd $swarmDockerPath ; docker compose -f docker-iota.yml up -d > /dev/null 2>&1)
                                        echo 100
                                    } | whiptail --gauge "Please wait while the [IOTA] Node cleanup is running (this may take a while)..." 8 70 0
                                    if [ -f "/tmp/iota-node.lock" ]; then
                                        rm -rf /tmp/iota-node.lock > /dev/null 2>&1
                                    fi
                                    whiptail --title "Node [IOTA] Management" --msgbox "[IOTA] Node database successfully reset. (INX apps start delayed)" 8 70
                                fi
                            fi
                        ;;
                        "4)")
                            if (whiptail --title "Node [IOTA] Management" --yesno --defaultno "Are you sure you want to reset the [IOTA] Node config file?" 8 70); then
                                source $swarmConfigsPath/iota-node.cfg
                                if [ ! -f "/tmp/iota-node.lock" ]; then
                                    touch /tmp/iota-node.lock > /dev/null 2>&1
                                fi
                                {
                                    echo 0
                                    echo 20
                                    ( cd $swarmDockerPath ; docker compose -f docker-iota.yml down > /dev/null 2>&1)
                                    echo 60
                                    wget -q -O $iotaNodePath/config.json https://raw.githubusercontent.com/iotaledger/node-docker-setup/main/iota/config.json
                                    source $iotaNodeModulePath/iotaNodeParser
                                    echo 80
                                    ( cd $swarmDockerPath ; docker compose -f docker-iota.yml up -d > /dev/null 2>&1)
                                    echo 100
                                } | whiptail --gauge "Please wait while the [IOTA] Node config reset is running (this may take a while)..." 8 70 0
                                if [ -f "/tmp/iota-node.lock" ]; then
                                    rm -rf /tmp/iota-node.lock > /dev/null 2>&1
                                fi
                                whiptail --title "Node [IOTA] Management" --msgbox "[IOTA] Node config successfully reset. (INX apps start delayed)" 8 70
                            fi
                        ;;
                    esac
                done
                exitCode=0
            else
                whiptail --title "Node [IOTA] Management" --msgbox "[IOTA] Node installation not found, please install [IOTA] Node first." 8 70
            fi
        ;;
        "4)")
            while [ $exitCode -lt 1 ]; do
                CHOICE=$(
                    whiptail --title "Node [IOTA] Installer" --menu "\nChoose your option" 24 70 0 \
                    "" "" \
                    "1)" "Update Node" \
                    "2)" "Install Node" \
                    "3)" "Remove Node" 3>&2 2>&1 1>&3
                )

                exitstatus=$?
                if [ "$exitstatus" = "1" ]; then
                    exitCode=1
                fi

                case $CHOICE in
                    "1)")
                        if [ -d $iotaNodePath ]; then
                            if (whiptail --title "Node [IOTA] Installer" --yesno --defaultno "Do you really want to update [IOTA] Node?" 8 70); then
                                if [ ! -f "/tmp/watchdog_iota-node.lock" ]; then
                                    # Update HORNET
                                    source $iotaNodeModulePath/iotaNodeVersion
                                    if [ ! -z "$latestIotaNodeVersion" ]; then
                                        if [ ! -f "/tmp/iota-node.lock" ]; then
                                            touch /tmp/iota-node.lock > /dev/null 2>&1
                                        fi
                                        {
                                            echo 0
                                            echo 33
                                            source $iotaNodeModulePath/iotaNodeVersion
                                            echo 66
                                            source $iotaNodeModulePath/iotaNodeInstaller                      
                                            echo 100
                                            sleep 0.5
                                        } | whiptail --gauge "Please wait while [IOTA] Node is updated..." 8 70 0
                                        {
                                            echo 0
                                            echo 25
                                            # CALL MODULE CONFIGPARSER
                                            source $iotaNodeModulePath/iotaNodeParser
                                            echo 50
                                            source $iotaInxModule/iotaInxAppStop
                                            echo 75
                                            ( cd $swarmDockerPath ; docker compose -f docker-iota.yml up -d > /dev/null 2>&1 )
                                            echo 100
                                        } | whiptail --gauge "Please wait while parsing the [IOTA] Node configuration..." 8 70 0
                                        whiptail --title "Node [IOTA] Installer" --msgbox "[IOTA] Node successfully updated. (INX apps start delayed)" 8 65
                                        if [ -f "/tmp/iota-node.lock" ]; then
                                            rm -rf /tmp/iota-node.lock > /dev/null 2>&1
                                        fi
                                    else
                                        whiptail --title "Node [IOTA] Installer" --msgbox "Sorry, but [IOTA] Node update aborted." 8 65
                                    fi
                                else
                                    whiptail --title "Node [IOTA] Installer" --msgbox "Aborted - [IOTA] Node is currently locked by Watchdog, please try again." 8 70
                                fi
                            fi
                        else
                            whiptail --title "Node [IOTA] Installer" --msgbox "Sorry, but [IOTA] Node is not installed." 8 70
                        fi
                    ;;
                    "2)")
                        if [ -d $shimmerNodePath ]; then
                            if (whiptail --title "Node [IOTA] Installer" --yesno --defaultno "Already installed apps found on the system!\nIt is not recommended to run multiple apps on one host.\n\nDo you still want to continue?" 12 65); then
                                iotaNodeSkipInstallation=false
                            else
                                iotaNodeSkipInstallation=true
                            fi
                        else
                            iotaNodeSkipInstallation=false
                        fi
                        # INSTALL Node
                        if [ ! -d $iotaNodePath ] && [ "$iotaNodeSkipInstallation" = "false" ]; then
                            if [ ! -f "/tmp/watchdog_iota-node.lock" ]; then
                                if [ ! -f "/tmp/iota-node.lock" ]; then
                                    touch /tmp/iota-node.lock > /dev/null 2>&1
                                fi
                                source $swarmConfigsPath/iota-node.cfg
                                
                                source $iotaNodeModulePath/iotaNodeVersion
                                {
                                    echo 0
                                    echo 20
                                    source $iotaNodeModulePath/iotaNodeInstaller
                                    echo 40
                                    if [ -d $iotaNodePath ]; then
                                        source $swarmConfigsPath/iota-node.cfg
                                        echo 60
                                        # CALL MODULE CONFIGPARSER
                                        source $iotaNodeModulePath/iotaNodeParser
                                        echo 80
                                        ( cd $swarmDockerPath ; docker compose -f docker-iota.yml up -d > /dev/null 2>&1 )
                                        echo 100
                                    fi
                                } | whiptail --gauge "Please wait while installing [IOTA] Node..." 8 70 0
                                if [ -d $iotaNodePath ]; then
                                    if [ "$iotaNodeAutopeeringEnabled" = "true" ]; then
                                        iotaNodeAutopeeringPortInfo="\nAutopeering: $iotaNodeAutopeeringPort/udp"
                                    fi
                                    whiptail --title "Node [IOTA] Installer" --msgbox "[IOTA] Node installation finished!\n\nYou need to open the following ports for peering\n\nGossip: $iotaNodeGossipPort/tcp$iotaNodeAutopeeringPortInfo" 14 65
                                else
                                    {
                                        echo 0
                                        echo 25
                                        source $swarmConfigsPath/iota-node.cfg
                                        echo 50
                                        source $iotaNodeModulePath/iotaNodeRemoval
                                        echo 75
                                        echo 100
                                    } | whiptail --gauge "Please wait while the [IOTA] Node files are removed..." 8 70 0
                                    whiptail --title "Node [IOTA] Installer" --msgbox "Error while installing [IOTA] Node! Please try again later." 8 70
                                fi
                                if [ -f "/tmp/iota-node.lock" ]; then
                                    rm -rf /tmp/iota-node.lock > /dev/null 2>&1
                                fi
                            else
                                whiptail --title "Node [IOTA] Installer" --msgbox "Aborted - [IOTA] Node is currently locked by Watchdog, please try again." 8 70
                            fi
                        else
                            if [ -d $iotaNodePath ]; then
                                whiptail --title "Node [IOTA] Installer" --msgbox "[IOTA] Node already installed." 8 70
                            else
                                if [ "$iotaNodeSkipInstallation" = "true" ]; then
                                    whiptail --title "Node [IOTA] Installer" --msgbox "Installation of [IOTA] Node aborted." 8 70
                                fi
                            fi
                        fi
                        unset iotaNodeSkipInstallation
                    ;;
                    "3)")
                        if (whiptail --title "Node [IOTA] Installer" --yesno --defaultno "Do you really want to remove [IOTA] Node?" 8 70); then
                            {
                                echo 0
                                iotaNodeRemoval=true
                                echo 50
                                source $iotaNodeModulePath/iotaNodeRemoval
                                echo 100
                                sleep 0.5
                            } | whiptail --gauge "Please wait while [IOTA] Node will be removed..." 8 70 0
                            whiptail --title "Node [IOTA] Installer" --msgbox "[IOTA] Node successfully removed." 8 70
                        fi
                    ;;
                esac
            done
            exitCode=0
        ;;
    esac
done
exitCode=0
