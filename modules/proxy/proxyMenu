#!/bin/bash

while [ $exitCode -lt 1 ]; do
    clear
    CHOICE=$(
        whiptail --title "Proxy [-] Menu" --menu "\nChoose an option" 24 70 0 \
        "" "" \
        "1)" "Proxy Info" \
        "2)" "Proxy Configuration" \
        "3)" "Proxy Management" \
        "4)" "Proxy Installer" 3>&2 2>&1 1>&3
    )

    exitStatus=$?
    if [ "$exitStatus" = "1" ]; then
        exitCode=1
    fi

    case $CHOICE in
        "1)")
            source $proxyModule/proxyInfo
        ;;
        "2)")
            source $proxyModule/proxyAppCheck
            while [ $exitCode -lt 1 ]; do
                clear
                if [ "$proxySwarmEndpoint" = "true" ]; then
                    menuProxySwarmEndpoint="disable"
                else
                    menuProxySwarmEndpoint="enable"
                fi
                CHOICE=$(
                    whiptail --title "Proxy [-] Configuration" --menu "\nChoose an option" 24 70 0 \
                    "" "" \
                    "1)" "[${menuProxySwarmEndpoint^}] SWARM Endpoint" \
                    "2)" "Hornet [IOTA] Proxy Settings" \
                    "3)" "Hornet [SHIMMER] Proxy Settings" \
                    "4)" "Advanced Settings" 3>&2 2>&1 1>&3
                )

                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                    if [ "$proxyDeployNeeded" = "true" ] && [ -f "/usr/sbin/nginx" ]; then
                        if (whiptail --title "Proxy [-] Configuration" --yesno "Would you like to apply the changes and install/deploy the proxy?" 8 70); then
                            source $swarmConfigs/proxy.cfg
                            source $proxyModule/proxyDeployment
                            clear
                            unset proxyDeployNeeded
                        fi
                    fi
                fi

                case $CHOICE in
                    "1)")
                        if [ "$proxySwarmEndpoint" = "true" ]; then
                            proxySwarmEndpoint=false
                            proxySwarmEndpointMenu="disabled"
                        else
                            proxySwarmEndpoint=true
                            proxySwarmEndpointMenu="enabled"
                        fi
                        sudo sed -i 's/^proxySwarmEndpoint=.*/proxySwarmEndpoint='$proxySwarmEndpoint'/' $swarmConfigs/proxy.cfg
                        source $proxyModule/proxySwarmEndpoint
                        whiptail --title "Proxy [-] Configuration" --msgbox "SWARM endpoint $proxySwarmEndpointMenu." 8 70
                    ;;
                    "2)")
                        if [ -f "/usr/bin/iota-hornet" ]; then
                            source $swarmConfigs/proxy.cfg
                            currentProxyUrl="$proxyIotaHornetUrl"
                            currentProxyPort=$(echo $currentProxyUrl | sed 's/.*://')
                            if [ -z "$proxyIotaHornetUrl" ]; then
                                proxyIotaHornetUrl="my.example.com:443"
                            fi
                            proxyUrl=$(whiptail --inputbox "\nSet your domain and port for Hornet" 10 65 $proxyIotaHornetUrl --title "Proxy [-] Configuration" 3>&1 1>&2 2>&3)
                            exitStatus=$?
                            if [ "$exitStatus" != "1" ] && [ "$proxyUrl" != "my.example.com:443" ]; then
                                source $proxyModule/proxyUrlValidation
                                if [ "$proxyUrlValid" = "true" ] || [ -z $proxyUrl ]; then
                                    if [ "$currentProxyUrl" != "$proxyUrl" ]; then
                                        proxyDeployNeeded=true
                                        sudo sed -i 's/^proxyIotaHornetUrl=.*/proxyIotaHornetUrl="'$proxyUrl'"/' $swarmConfigs/proxy.cfg
                                        source $proxyModule/proxySharedPortCheck
                                        whiptail --title "Proxy [-] Configuration" --msgbox "URL for (IOTA) Hornet proxy set to \"$proxyUrl\"." 8 70
                                    else
                                        whiptail --title "Proxy [-] Configuration" --msgbox "No (IOTA) Hornet url change detected." 8 70
                                    fi
                                    unset proxyUrl proxyUrlValid
                                else
                                    whiptail --title "Proxy [-] Configuration" --msgbox "No valid (IOTA) Hornet url." 8 70
                                fi
                            else
                                unset proxyUrl
                            fi
                            unset currentProxyUrl currentProxyPort
                        else
                            whiptail --title "Proxy [-] Configuration" --msgbox "Please install (IOTA) Hornet first." 8 70
                        fi
                    ;;
                    "3)")
                        if [ -f "/usr/bin/shimmer-hornet" ]; then
                            source $swarmConfigs/proxy.cfg
                            currentProxyUrl="$proxyShimmerHornetUrl"
                            currentProxyPort=$(echo $currentProxyUrl | sed 's/.*://')
                            if [ -z "$proxyShimmerHornetUrl" ]; then
                                proxyShimmerHornetUrl="my.example.com:443"
                            fi
                            proxyUrl=$(whiptail --inputbox "\nSet your domain and port for (Shimmer) Hornet" 10 65 $proxyShimmerHornetUrl --title "Proxy [-] Configuration" 3>&1 1>&2 2>&3)
                            exitStatus=$?
                            if [ "$exitStatus" != "1" ] && [ "$proxyUrl" != "my.example.com:443" ]; then
                                source $proxyModule/proxyUrlValidation
                                if [ "$proxyUrlValid" = "true" ] || [ -z $proxyUrl ]; then
                                    if [ "$currentProxyUrl" != "$proxyUrl" ]; then
                                        proxyDeployNeeded=true
                                        sudo sed -i 's/^proxyShimmerHornetUrl=.*/proxyShimmerHornetUrl="'$proxyUrl'"/' $swarmConfigs/proxy.cfg
                                        source $proxyModule/proxySharedPortCheck
                                        whiptail --title "Proxy [-] Configuration" --msgbox "URL for (Shimmer) Hornet proxy set to \"$proxyUrl\"." 8 70
                                    else
                                        whiptail --title "Proxy [-] Configuration" --msgbox "No (Shimmer) Hornet url change detected." 8 70
                                    fi
                                    unset proxyUrl proxyUrlValid
                                else
                                    whiptail --title "Proxy [-] Configuration" --msgbox "No valid (Shimmer) Hornet url." 8 70
                                fi
                            else
                                unset proxyUrl
                            fi
                            unset currentProxyUrl currentProxyPort
                        else
                            whiptail --title "Proxy [-] Configuration" --msgbox "Please install (Shimmer) Hornet first." 8 70
                        fi
                    ;;
                    "4)")
                        while [ $exitCode -lt 1 ]; do
                            source $swarmConfigs/proxy.cfg
                            clear
                            if [ "$proxyAutomaticDeployment" = "true" ]; then
                                proxyAutomaticDeploymentMenu="disable"
                            else
                                proxyAutomaticDeploymentMenu="enable"
                            fi
                            CHOICE=$(
                                whiptail --title "Proxy [-] Advanced" --menu "\nChoose an option" 24 70 0 \
                                "" "" \
                                "1)" "INX-Dashboard [IOTA] Proxy Settings" \
                                "2)" "INX-Dashboard [SHIMMER] Proxy Settings" \
                                "3)" "[${proxyAutomaticDeploymentMenu^}] Automatic Proxy Deployment" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                                if [ "$proxyDeployNeeded" = "true" ] && [ -f "/usr/sbin/nginx" ]; then
                                    if (whiptail --title "Proxy [-] Menu" --yesno "Would you like to apply the changes and install/deploy the proxy?" 8 70); then
                                        source $swarmConfigs/proxy.cfg
                                        source $proxyModule/proxyDeployment
                                        clear
                                        unset proxyDeployNeeded
                                    fi
                                fi
                            fi
                            case $CHOICE in
                                "1)")
                                    if [ -f  "/usr/bin/iota-inx-dashboard" ]; then
                                        while [ $exitCode -lt 1 ]; do
                                            source $swarmConfigs/proxy.cfg
                                            clear
                                            if [ "$proxyIotaInxDashboardEnabled" = "true" ]; then
                                                proxyIotaInxDashboardEnabledMenu="disable"
                                            else
                                                proxyIotaInxDashboardEnabledMenu="enable"
                                            fi
                                            CHOICE=$(
                                                whiptail --title "Proxy [IOTA] INX-Dashboard" --menu "\nChoose an option" 24 70 0 \
                                                "" "" \
                                                "1)" "[${proxyIotaInxDashboardEnabledMenu^}] INX-Dashboard" \
                                                "2)" "Set INX-Dashboard url" 3>&2 2>&1 1>&3
                                            )
                                            exitStatus=$?
                                            if [ "$exitStatus" = "1" ]; then
                                                exitCode=1
                                            fi
                                            case $CHOICE in
                                                "1)")
                                                    source $swarmConfigs/proxy.cfg
                                                    if [ ! -z "$proxyIotaInxDashboardUrl" ]; then
                                                        if [ "$proxyIotaInxDashboardEnabled" = "true" ]; then
                                                            proxyDeployNeeded=true
                                                            proxyIotaInxDashboardEnabled=false
                                                            sudo sed -i 's/^proxyIotaInxDashboardEnabled=.*/proxyIotaInxDashboardEnabled='$proxyIotaInxDashboardEnabled'/' $swarmConfigs/proxy.cfg
                                                            whiptail --title "Proxy [IOTA] INX-Dashboard" --msgbox "INX-Dashboard disabled successfully and Hornet dasboard via url enabled." 8 70
                                                        else
                                                            if (whiptail --title "Proxy [IOTA] INX-Dashboard" --yesno --defaultno "Before you change the settings, are you sure you want to separate the INX dashboard from the Hornet (Shimmer) proxy endpoint (its own subdomain or port)?\n\nAre you sure you want to continue?" 16 65); then
                                                                proxyShimmerInxDashboardEnabled=true
                                                                proxyDeployNeeded=true
                                                                sudo sed -i 's/^proxyIotaInxDashboardEnabled=.*/proxyIotaInxDashboardEnabled='$proxyIotaInxDashboardEnabled'/' $swarmConfigs/proxy.cfg
                                                                whiptail --title "Proxy [IOTA] INX-Dashboard" --msgbox "INX-Dashboard enabled successfully and Hornet dashboard url disabled." 8 70
                                                            fi
                                                        fi
                                                    else
                                                        proxyIotaInxDashboardEnabled=false
                                                        proxyDeployNeeded=true
                                                        sudo sed -i 's/^proxyIotaInxDashboardEnabled=.*/proxyIotaInxDashboardEnabled='$proxyIotaInxDashboardEnabled'/' $swarmConfigs/proxy.cfg
                                                        whiptail --title "Proxy [IOTA] INX-Dashboard" --msgbox "Aborted - To change this setting please set the url first." 8 70
                                                    fi
                                                ;;
                                                "2)")
                                                    source $swarmConfigs/proxy.cfg
                                                    currentProxyUrl="$proxyIotaInxDashboardUrl"
                                                    currentProxyPort=$(echo $currentProxyUrl | sed 's/.*://')
                                                    if [ -z "$proxyIotaInxDashboardUrl" ]; then
                                                        proxyIotaInxDashboardUrl="dashboard.example.com:443"
                                                    fi
                                                    proxyUrl=$(whiptail --inputbox "\nSet your domain and port for the INX-Dashboard" 10 65 $proxyIotaInxDashboardUrl --title "Proxy [IOTA] INX-Dashboard" 3>&1 1>&2 2>&3)
                                                    exitStatus=$?
                                                    if [ "$exitStatus" != "1" ] && [ "$proxyUrl" != "dashboard.example.com:443" ]; then
                                                        source $proxyModule/proxyUrlValidation
                                                        if [ "$proxyUrlValid" = "true" ] || [ -z $proxyUrl ]; then
                                                            if [ "$currentProxyUrl" != "$proxyUrl" ]; then
                                                                proxyDeployNeeded=true
                                                                sudo sed -i 's/^proxyIotaInxDashboardUrl=.*/proxyIotaInxDashboardUrl="'$proxyUrl'"/' $swarmConfigs/proxy.cfg
                                                                source $proxyModule/proxySharedPortCheck
                                                                whiptail --title "Proxy [IOTA] INX-Dashboard" --msgbox "URL for INX-Dashboard (IOTA) proxy set to \"$proxyUrl\"." 8 70
                                                            else
                                                                whiptail --title "Proxy [IOTA] INX-Dashboard" --msgbox "No INX-Dashboard (IOTA) url change detected." 8 70
                                                            fi
                                                            unset proxyUrl proxyUrlValid
                                                        else
                                                            whiptail --title "Proxy [IOTA] INX-Dashboard" --msgbox "No valid INX-Dashboard (IOTA) url." 8 70
                                                        fi
                                                    else
                                                        unset proxyUrl
                                                    fi
                                                    unset currentProxyUrl currentProxyPort
                                                ;;
                                            esac
                                        done
                                        exitCode=0
                                    else
                                        whiptail --title "Proxy [IOTA] INX-Dashboard" --msgbox "Please install (IOTA) INX-Dashboard first." 8 70
                                    fi
                                ;;
                                "2)")
                                    if [ -f "/usr/bin/shimmer-inx-dashboard" ]; then
                                        while [ $exitCode -lt 1 ]; do
                                            source $swarmConfigs/proxy.cfg
                                            clear
                                            if [ "$proxyShimmerInxDashboardEnabled" = "true" ]; then
                                                proxyShimmerInxDashboardEnabledMenu="disable"
                                            else
                                                proxyShimmerInxDashboardEnabledMenu="enable"
                                            fi
                                            CHOICE=$(
                                                whiptail --title "Proxy [SHIMMER] INX-Dashboard" --menu "\nChoose an option" 24 70 0 \
                                                "" "" \
                                                "1)" "[${proxyShimmerInxDashboardEnabledMenu^}] INX-Dashboard" \
                                                "2)" "Set INX-Dashboard URL" 3>&2 2>&1 1>&3
                                            )
                                            exitStatus=$?
                                            if [ "$exitStatus" = "1" ]; then
                                                exitCode=1
                                            fi
                                            case $CHOICE in
                                                "1)")
                                                    source $swarmConfigs/proxy.cfg
                                                    if [ ! -z "$proxyShimmerInxDashboardUrl" ]; then
                                                        if [ "$proxyShimmerInxDashboardEnabled" = "true" ]; then
                                                            proxyDeployNeeded=true
                                                            proxyShimmerInxDashboardEnabled=false
                                                            sudo sed -i 's/^proxyShimmerInxDashboardEnabled=.*/proxyShimmerInxDashboardEnabled='$proxyShimmerInxDashboardEnabled'/' $swarmConfigs/proxy.cfg
                                                            whiptail --title "Proxy [SHIMMER] INX-Dashboard" --msgbox "INX-Dashboard disabled successfully and Hornet dashboard url enabled." 8 70
                                                        else
                                                            if (whiptail --title "Proxy [SHIMMER] INX-Dashboard" --yesno --defaultno "Before you change the settings, are you sure you want to separate the INX dashboard from the Hornet (Shimmer) proxy endpoint (its own subdomain or port)?\n\nAre you sure you want to continue?" 16 65); then
                                                                proxyDeployNeeded=true
                                                                proxyShimmerInxDashboardEnabled=true
                                                                sudo sed -i 's/^proxyShimmerInxDashboardEnabled=.*/proxyShimmerInxDashboardEnabled='$proxyShimmerInxDashboardEnabled'/' $swarmConfigs/proxy.cfg
                                                                whiptail --title "Proxy [SHIMMER] INX-Dashboard" --msgbox "INX-Dashboard enabled successfully and Hornet dashboard url disabled." 8 70
                                                            fi
                                                        fi
                                                    else
                                                        proxyDeployNeeded=true
                                                        proxyShimmerInxDashboardEnabled=false
                                                        sudo sed -i 's/^proxyShimmerInxDashboardEnabled=.*/proxyShimmerInxDashboardEnabled='$proxyShimmerInxDashboardEnabled'/' $swarmConfigs/proxy.cfg
                                                        whiptail --title "Proxy [SHIMMER] INX-Dashboard" --msgbox "Aborted - To change this setting please set the url first." 8 70
                                                    fi
                                                ;;
                                                "2)")
                                                    source $swarmConfigs/proxy.cfg
                                                    currentProxyUrl="$proxyShimmerInxDashboardUrl"
                                                    currentProxyPort=$(echo $currentProxyUrl | sed 's/.*://')
                                                    if [ -z "$proxyShimmerInxDashboardUrl" ]; then
                                                        proxyShimmerInxDashboardUrl="dashboard.example.com:443"
                                                    fi
                                                    proxyUrl=$(whiptail --inputbox "\nSet your domain and port for the INX-Dashboard" 10 65 $proxyShimmerInxDashboardUrl --title "Proxy [SHIMMER] INX-Dashboard" 3>&1 1>&2 2>&3)
                                                    exitStatus=$?
                                                    if [ "$proxyUrl" = "dashboard.example.com:443" ]; then
                                                        unset proxyUrl
                                                    fi
                                                    if [ "$exitStatus" != "1" ]; then
                                                        source $proxyModule/proxyUrlValidation
                                                        if [ "$proxyUrlValid" = "true" ] || [ -z $proxyUrl ]; then
                                                            if [ "$currentProxyUrl" != "$proxyUrl" ]; then
                                                                proxyDeployNeeded=true
                                                                sudo sed -i 's/^proxyShimmerInxDashboardUrl=.*/proxyShimmerInxDashboardUrl="'$proxyUrl'"/' $swarmConfigs/proxy.cfg
                                                                source $proxyModule/proxySharedPortCheck
                                                                whiptail --title "Proxy [SHIMMER] INX-Dashboard" --msgbox "URL for INX-Dashboard (Shimmer) proxy set to \"$proxyUrl\"." 8 70
                                                            else
                                                                whiptail --title "Proxy [SHIMMER] INX-Dashboard" --msgbox "No INX-Dashboard (Shimmer) url change detected." 8 70
                                                            fi
                                                            unset proxyUrl proxyUrlValid
                                                        else
                                                            whiptail --title "Proxy [SHIMMER] INX-Dashboard" --msgbox "No valid INX-Dashboard (Shimmer) url." 8 70
                                                        fi
                                                    fi
                                                    unset currentProxyUrl currentProxyPort
                                                ;;
                                            esac
                                        done
                                        exitCode=0
                                    else
                                        whiptail --title "Proxy [SHIMMER] INX-Dashboard" --msgbox "Please install (SHIMMER) INX-Dashboard first." 8 70
                                    fi
                                ;;
                                "3)")
                                    source $swarmConfigs/proxy.cfg
                                    if [ "$proxyAutomaticDeployment" = "true" ]; then
                                        proxyAutomaticDeployment=false
                                        sudo sed -i 's/^proxyAutomaticDeployment=.*/proxyAutomaticDeployment='$proxyAutomaticDeployment'/' $swarmConfigs/proxy.cfg
                                        whiptail --title "Proxy - Advanced Settings" --msgbox "Automatic proxy deployment disabled successfully." 8 70
                                    else
                                        proxyAutomaticDeployment=true
                                        sudo sed -i 's/^proxyAutomaticDeployment=.*/proxyAutomaticDeployment='$proxyAutomaticDeployment'/' $swarmConfigs/proxy.cfg
                                        whiptail --title "Proxy - Advanced Settings" --msgbox "Automatic proxy deployment enabled successfully." 8 70
                                    fi
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                esac
            done
            source $proxyModule/proxyAppCheck
            exitCode=0
        ;;
        "3)")
            while [ $exitCode -lt 1 ]; do
                CHOICE=$(
                    whiptail --title "Proxy [-] Management" --menu "\nChoose an option" 24 70 0 \
                    "" "" \
                    "1)" "Show Proxy Status" \
                    "2)" "Start/Stop Proxy" \
                    "3)" "Renew SSL Certificates" \
                    "4)" "Reset All SSL Certificates" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        proxyStatus="$(sudo systemctl status nginx)"
                        whiptail --title "Proxy [-] Management" --msgbox "$proxyStatus" 15 65
                    ;;
                    "2)")
                        CHOICE=$(
                            whiptail --title "Proxy [-] Management" --menu "\nChoose your option" 24 70 0 \
                            "" "" \
                            "1)" "Restart Proxy" \
                            "2)" "Start Proxy" \
                            "3)" "Stop Proxy" 3>&2 2>&1 1>&3
                        )
                        exitStatus=$?
                        if [ "$exitStatus" = "1" ]; then
                            exitCode=1
                        fi
                        case $CHOICE in
                            "1)")
                                {
                                    echo 0
                                    sleep 0.25
                                    echo 66
                                    sudo systemctl restart nginx
                                    echo 100
                                    sleep 0.25
                                } | whiptail --gauge "Please wait while re-starting the proxy..." 6 65 0
                                whiptail --scrolltext --title "Proxy [-] Management" --msgbox "Proxy restarted successfully!" 8 70
                            ;;
                            "2)")
                                {
                                    echo 0
                                    sleep 0.25
                                    echo 66
                                    sudo systemctl start nginx
                                    echo 100
                                    sleep 0.25
                                } | whiptail --gauge "Please wait while starting the proxy..." 6 65 0
                                whiptail --title "Proxy [-] Management" --msgbox "Proxy started successfully!" 8 70
                            ;;
                            "3)")
                                {
                                    echo 0
                                    sleep 0.25
                                    echo 66
                                    sudo systemctl stop nginx
                                    echo 100
                                    sleep 0.25
                                } | whiptail --gauge "Please wait while stopping the proxy..." 6 65 0
                                whiptail --title "Proxy [-] Management" --msgbox "Proxy stopped successfully!" 8 70
                            ;;
                        esac
                    ;;
                    "3)")
                        # Manual renew certificate if installed
                        source $proxyModule/proxyParser
                        if [ -f "/etc/letsencrypt/live/$proxyIotaHornetUrl/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyIotaInxDashboardUrl/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyShimmerHornetUrl/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyShimmerInxDashboardUrl/fullchain.pem" ]; then
                            if [ "$ufw" = "true" ]; then
                                proxyHttpStatus=$(sudo ufw status)
                                if [[ $proxyHttpStatus != *inactive* ]]; then
                                    proxyHttpPortCheck=$(echo $proxyHttpStatus | grep -E 80/tcp)
                                    if [ -z "$proxyHttpPortCheck" ]; then
                                        sudo ufw allow 80/tcp > /dev/null 2>&1
                                        proxyHttpTmpAllowed=true
                                    fi
                                    unset proxyHttpPortCheck
                                fi
                                unset proxyHttpStatus
                            fi
                            sudo certbot renew --force-renewal
                            if [ "$proxyHttpTmpAllowed" = "true" ]; then
                                sudo ufw delete allow 80/tcp > /dev/null 2>&1
                                unset proxyHttpTmpAllowed
                            fi
                            echo ""
                            echo ""
                            echo "#############################################################"
                            read -p "Press any key to continue..."
                        else
                            whiptail --title "Proxy [-] Management" --msgbox "Error! No SSL Certificates installed!" 8 70
                        fi
                    ;;
                    "4)")
                        if (whiptail --title "Proxy [-] Management" --yesno --defaultno "Do you really want to reset all SSL certificates?" 8 70); then
                            if [ -d "/etc/letsencrypt/archive" ]; then
                                sudo rm -rf /etc/letsencrypt/archive/* > /dev/null 2>&1
                            fi
                            if [ -d "/etc/letsencrypt/live" ]; then
                                sudo rm -rf /etc/letsencrypt/live/* > /dev/null 2>&1
                            fi
                            if [ -d "/etc/letsencrypt/renewal" ]; then
                                sudo rm -rf /etc/letsencrypt/renewal/* > /dev/null 2>&1
                            fi
                            if [ -d "/etc/nginx/sites-enabled" ]; then
                                sudo rm -rf /etc/nginx/sites-enabled/* > /dev/null 2>&1
                            fi
                            whiptail --title "Proxy [-] Management" --msgbox "All SSL certificates successfully reset." 8 70
                        fi
                    ;;
                esac
            done
            exitCode=0
        ;;
        "4)")
            while [ $exitCode -lt 1 ]; do
                CHOICE=$(
                    whiptail --title "Proxy [-] Installer" --menu "\nChoose an option" 24 70 0 \
                    "" "" \
                    "1)" "Install/Deploy The Proxy" \
                    "2)" "Remove The Proxy" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        if [ -f "/usr/bin/iota-hornet" ] || [ -f "/usr/bin/shimmer-hornet" ]; then
                            source $swarmConfigs/proxy.cfg
                            if (whiptail --title "Proxy [-] Installer" --yesno --defaultno "Before deploying the proxy, please make sure that the domain and port are set for all nodes to be installed. If you use one domain for multiple nodes, please use different ports.\n\n\nAre you sure you want to continue?" 16 65); then
                                source $proxyModule/proxyDeployment
                                clear
                            fi
                        else
                            whiptail --title "Proxy [-] Installer" --msgbox "No node software found on the system, please install a node first before you can install the proxy." 8 70
                        fi
                    ;;
                    "2)")
                        if (whiptail --title "Proxy [-] Installer" --yesno --defaultno "Do you really want to remove the proxy?" 8 70); then
                            {
                                echo 0
                                if [ "$ufw" = "true" ]; then
                                    source $proxyModule/proxyParser
                                    sudo ufw delete allow 80/tcp > /dev/null 2>&1
                                    sudo ufw delete allow $proxySwarmDashboardPort/tcp > /dev/null 2>&1
                                    sudo ufw delete allow $proxyIotaHornetPort/tcp > /dev/null 2>&1
                                    sudo ufw delete allow $proxyIotaInxDashboardPort/tcp > /dev/null 2>&1
                                    sudo ufw delete allow $proxyShimmerHornetPort/tcp > /dev/null 2>&1
                                    sudo ufw delete allow $proxyShimmerInxDashboardPort/tcp > /dev/null 2>&1
                                fi
                                echo 20
                            } | whiptail --gauge "Please wait while removing the proxy..." 6 65 0
                                sudo apt -qq purge software-properties-common certbot python3-certbot-nginx nginx* -y
                                sudo apt -qq autoremove -y > /dev/null 2>&1
                            {
                                echo 60
                                if [ -d "/etc/nginx" ]; then
                                    sudo rm -rf /etc/nginx > /dev/null 2>&1
                                fi
                                if [ -d "/etc/letsencrypt" ]; then
                                    sudo rm -rf /etc/letsencrypt > /dev/null 2>&1
                                fi
                                sudo sed -i 's/^proxyIotaHornetUrl=.*/proxyIotaHornetUrl=""/' $swarmConfigs/proxy.cfg
                                sudo sed -i 's/^proxyIotaInxDashboardUrl=.*/proxyIotaInxDashboardUrl=""/' $swarmConfigs/proxy.cfg
                                sudo sed -i 's/^proxyShimmerHornetUrl=.*/proxyShimmerHornetUrl=""/' $swarmConfigs/proxy.cfg
                                sudo sed -i 's/^proxyShimmerInxDashboardUrl=.*/proxyShimmerInxDashboardUrl=""/' $swarmConfigs/proxy.cfg
                                echo 100
                                sleep 0.25
                            } | whiptail --gauge "Please wait while removing the proxy..." 6 65 0
                            whiptail --title "Proxy [-] Installer" --msgbox "Proxy removed successfully!" 8 70
                        fi
                    ;;
                esac
            done
            exitCode=0
        ;;
    esac
done
exitCode=0
