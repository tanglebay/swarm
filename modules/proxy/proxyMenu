#!/bin/bash
while [ $exitCode -lt 1 ]; do
    clear
    CHOICE=$(
        whiptail --title "Proxy Menu" --menu "\nChoose an option" 24 65 0 \
        "1)" "Proxy Info" \
        "2)" "Proxy Configuration" \
        "3)" "Proxy Debugging" \
        "4)" "Proxy Installer" 3>&2 2>&1 1>&3
    )

    exitStatus=$?
    if [ "$exitStatus" = "1" ]; then
        exitCode=1
    fi

    case $CHOICE in
        "1)")
            source $proxyModules/proxyInfo
        ;;
        "2)")
            while [ $exitCode -lt 1 ]; do
                clear
                proxyUrlRegex='[-A-Za-z0-9\+&@#/%?=~_|!:,.;]:[-A-Za-z0-9\+&@#/%=~_|]'
                if [ "$proxySwarmEndpoint" = "true" ]; then
                    menuProxySwarmEndpoint="Disable"
                else
                    menuProxySwarmEndpoint="Enable"
                fi
                CHOICE=$(
                    whiptail --title "Proxy Menu" --menu "\nChoose an option" 24 65 0 \
                    "1)" "$menuProxySwarmEndpoint SWARM Endpoint" \
                    "2)" "Hornet [IOTA] proxy settings" \
                    "3)" "Hornet [SHIMMER] proxy settings" \
                    "4)" "Bee [IOTA] proxy settings" \
                    "5)" "Bee [SHIMMER] proxy settings" \
                    "6)" "GoShimmer proxy settings" \
                    "7)" "WASP proxy settings" \
                    "8)" "Advanced Settings" 3>&2 2>&1 1>&3
                )

                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi

                case $CHOICE in
                    "1)")
                        if [ "$proxySwarmEndpoint" = "true" ]; then
                            proxySwarmEndpoint=false
                            proxySwarmEndpointMenu="disabled"
                        else
                            proxySwarmEndpoint=true
                            proxySwarmEndpointMenu="enabled"
                        fi
                        sudo sed -i 's/^proxySwarmEndpoint=.*/proxySwarmEndpoint='$proxySwarmEndpoint'/' $swarmConfigs/proxy.cfg
                        source $proxyModules/proxySwarmEndpoint
                        whiptail --title "Proxy - SWARM" --msgbox "SWARM endpoint $proxySwarmEndpointMenu." 8 65
                    ;;
                    "2)")
                        source $swarmConfigs/proxy.cfg
                        currentProxyIotaHornetUrl="$proxyIotaHornetUrl"
                        if [ -z "$proxyIotaHornetUrl" ]; then
                            proxyIotaHornetUrl="my.example.com:443"
                        fi
                        proxyIotaHornetUrl=$(whiptail --inputbox "\nSet your domain and port for Hornet" 10 65 $proxyIotaHornetUrl --title "Proxy - Hornet [IOTA]" 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ "$proxyIotaHornetUrl" = "my.example.com:443" ]; then
                            unset proxyIotaHornetUrl
                        fi
                        if [ "$exitStatus" != "1" ]; then
                            if [[ $proxyIotaHornetUrl =~ $proxyUrlRegex ]] || [ -z $proxyIotaHornetUrl ]; then
                                if [ "$currentProxyIotaHornetUrl" != "$proxyIotaHornetUrl" ]; then
                                    sudo sed -i 's/^proxyIotaHornetUrl=.*/proxyIotaHornetUrl="'$proxyIotaHornetUrl'"/' $swarmConfigs/proxy.cfg
                                    whiptail --title "Proxy - Hornet [IOTA]" --msgbox "URL for Hornet proxy set to \"$proxyIotaHornetUrl\"." 8 65
                                else
                                    whiptail --title "Proxy - Hornet [IOTA]" --msgbox "No Hornet url change detected." 8 65
                                fi
                            else
                                whiptail --title "Proxy - Hornet [IOTA]" --msgbox "No valid Hornet url." 8 65
                            fi
                        fi
                    ;;
                    "3)")
                        source $swarmConfigs/proxy.cfg
                        currentProxyShimmerHornetUrl="$proxyShimmerHornetUrl"
                        if [ -z "$proxyShimmerHornetUrl" ]; then
                            proxyShimmerHornetUrl="my.example.com:443"
                        fi
                        proxyShimmerHornetUrl=$(whiptail --inputbox "\nSet your domain and port for Hornet-Shimmer" 10 65 $proxyShimmerHornetUrl --title "Proxy - Hornet [Shimmer]" 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ "$proxyShimmerHornetUrl" = "my.example.com:443" ]; then
                            unset proxyShimmerHornetUrl
                        fi
                        if [ "$exitStatus" != "1" ]; then
                            if [[ $proxyShimmerHornetUrl =~ $proxyUrlRegex ]] || [ -z $proxyShimmerHornetUrl ]; then
                                if [ "$currentProxyShimmerHornetUrl" != "$proxyShimmerHornetUrl" ]; then
                                    sudo sed -i 's/^proxyShimmerHornetUrl=.*/proxyShimmerHornetUrl="'$proxyShimmerHornetUrl'"/' $swarmConfigs/proxy.cfg
                                    whiptail --title "Proxy - Hornet [Shimmer]" --msgbox "URL for Hornet-Shimmer proxy set to \"$proxyShimmerHornetUrl\"." 8 65
                                else
                                    whiptail --title "Proxy - Hornet [Shimmer]" --msgbox "No Hornet-Shimmer url change detected." 8 65
                                fi
                            else
                                whiptail --title "Proxy - Hornet [Shimmer]" --msgbox "No valid Hornet-Shimmer url." 8 65
                            fi
                        fi
                    ;;
                    "4)")
                        source $swarmConfigs/proxy.cfg
                        currentProxyIotaBeeUrl="$proxyIotaBeeUrl"
                        if [ -z "$proxyIotaBeeUrl" ]; then
                            proxyIotaBeeUrl="my.example.com:443"
                        fi
                        proxyIotaBeeUrl=$(whiptail --inputbox "\nSet your domain and port for Bee" 10 65 $proxyIotaBeeUrl --title "Proxy - Bee [IOTA]" 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ "$proxyIotaBeeUrl" = "my.example.com:443" ]; then
                            unset proxyIotaBeeUrl
                        fi
                        if [ "$exitStatus" != "1" ]; then
                            if [[ $proxyIotaBeeUrl =~ $proxyUrlRegex ]] || [ -z $proxyIotaBeeUrl ]; then
                                if [ "$currentProxyIotaBeeUrl" != "$proxyIotaBeeUrl" ]; then
                                    sudo sed -i 's/^proxyIotaBeeUrl=.*/proxyIotaBeeUrl="'$proxyIotaBeeUrl'"/' $swarmConfigs/proxy.cfg
                                    whiptail --title "Proxy - Bee [IOTA]" --msgbox "URL for Bee proxy set to \"$proxyIotaBeeUrl\"" 8 65
                                else
                                    whiptail --title "Proxy - Bee [IOTA]" --msgbox "No Bee url change detected." 8 65
                                fi
                            else
                                whiptail --title "Proxy - Bee [IOTA]" --msgbox "No valid Bee url." 8 65
                            fi
                        fi
                    ;;
                    "5)")
                        source $swarmConfigs/proxy.cfg
                        currentProxyShimmerBeeUrl="$proxyShimmerBeeUrl"
                        if [ -z "$proxyShimmerBeeUrl" ]; then
                            proxyShimmerBeeUrl="my.example.com:443"
                        fi
                        proxyShimmerBeeUrl=$(whiptail --inputbox "\nSet your domain and port for Bee [Shimmer]" 10 65 $proxyShimmerBeeUrl --title "Proxy - Bee [Shimmer]" 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ "$proxyShimmerBeeUrl" = "my.example.com:443" ]; then
                            unset proxyShimmerBeeUrl
                        fi
                        if [ "$exitStatus" != "1" ]; then
                            if [[ $proxyShimmerBeeUrl =~ $proxyUrlRegex ]] || [ -z $proxyShimmerBeeUrl ]; then
                                if [ "$currentProxyShimmerBeeUrl" != "$proxyShimmerBeeUrl" ]; then
                                    sudo sed -i 's/^proxyShimmerBeeUrl=.*/proxyShimmerBeeUrl="'$proxyShimmerBeeUrl'"/' $swarmConfigs/proxy.cfg
                                    whiptail --title "Proxy - Bee [Shimmer]" --msgbox "URL for Bee-Shimmer proxy set to \"$proxyShimmerBeeUrl\"" 8 65
                                else
                                    whiptail --title "Proxy - Bee [Shimmer]" --msgbox "No Bee-Shimmer url change detected." 8 65
                                fi
                            else
                                whiptail --title "Proxy - Bee [Shimmer]" --msgbox "No valid Bee-Shimmer url." 8 65
                            fi
                        fi
                    ;;
                    "6)")
                        source $swarmConfigs/proxy.cfg
                        currentProxyGoshimmerUrl="$proxyGoshimmerUrl"
                        if [ -z "$proxyGoshimmerUrl" ]; then
                            proxyGoshimmerUrl="my.example.com:443"
                        fi
                        proxyGoshimmerUrl=$(whiptail --inputbox "\nSet your domain and port for Goshimmer" 10 65 $proxyGoshimmerUrl --title "Proxy - Goshimmer" 3>&1 1>&2 2>&3)
                        exitStatus=$?
                        if [ "$proxyGoshimmerUrl" = "my.example.com:443" ]; then
                            unset proxyGoshimmerUrl
                        fi
                        if [ "$exitStatus" != "1" ]; then
                            if [[ $proxyGoshimmerUrl =~ $proxyUrlRegex ]] || [ -z $proxyGoshimmerUrl ]; then
                                if [ "$currentProxyGoshimmerUrl" != "$proxyGoshimmerUrl" ]; then
                                    sudo sed -i 's/^proxyGoshimmerUrl=.*/proxyGoshimmerUrl="'$proxyGoshimmerUrl'"/' $swarmConfigs/proxy.cfg
                                    whiptail --title "Proxy - Goshimmer" --msgbox "URL for Goshimmer proxy set to \"$proxyGoshimmerUrl\"." 8 65
                                else
                                    whiptail --title "Proxy - Goshimmer" --msgbox "No Goshimmer url change detected." 8 65
                                fi
                            else
                                whiptail --title "Proxy - Goshimmer" --msgbox "No valid Goshimmer url." 8 65
                            fi
                        fi
                    ;;
                    "7)")
                        while [ $exitCode -lt 1 ]; do
                            source $swarmConfigs/proxy.cfg
                            clear
                            CHOICE=$(
                                whiptail --title "Proxy - WASP Settings" --menu "\nChoose an option" 24 65 0 \
                                "1)" "WASP Dashboard" \
                                "2)" "WASP API" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    source $swarmConfigs/proxy.cfg
                                    currentProxyWaspDashboardUrl="$proxyWaspDashboardUrl"
                                    if [ -z "$proxyWaspDashboardUrl" ]; then
                                        proxyWaspDashboardUrl="my.example.com:443"
                                    fi
                                    proxyWaspDashboardUrl=$(whiptail --inputbox "\nSet your domain and port for the WASP dashboard" 10 65 $proxyWaspDashboardUrl --title "Proxy - WASP Dashboard" 3>&1 1>&2 2>&3)
                                    exitStatus=$?
                                    if [ "$proxyWaspDashboardUrl" = "my.example.com:443" ]; then
                                        unset proxyWaspDashboardUrl
                                    fi
                                    if [ "$exitStatus" != "1" ]; then
                                        if [[ $proxyWaspDashboardUrl =~ $proxyUrlRegex ]] || [ -z $proxyWaspDashboardUrl ]; then
                                            if [ "$currentProxyWaspDashboardUrl" != "$proxyWaspDashboardUrl" ]; then
                                                sudo sed -i 's/^proxyWaspDashboardUrl=.*/proxyWaspDashboardUrl="'$proxyWaspDashboardUrl'"/' $swarmConfigs/proxy.cfg
                                                whiptail --title "Proxy - WASP Dashboard" --msgbox "URL for WASP dashboard proxy set to \"$proxyWaspDashboardUrl\"." 8 65
                                            else
                                                whiptail --title "Proxy - WASP Dashboard" --msgbox "No WASP dashboard url change detected." 8 65
                                            fi
                                        else
                                            whiptail --title "Proxy - WASP Dashboard" --msgbox "No valid WASP dashboard url." 8 65
                                        fi
                                    fi
                                ;;
                                "2)")
                                    source $swarmConfigs/proxy.cfg
                                    currentProxyWaspApiUrl="$proxyWaspApiUrl"
                                    if [ -z "$proxyWaspApiUrl" ]; then
                                        proxyWaspApiUrl="my.example.com:443"
                                    fi
                                    proxyWaspApiUrl=$(whiptail --inputbox "\nSet your domain and port for the WASP API" 10 65 $proxyWaspApiUrl --title "Proxy - WASP API" 3>&1 1>&2 2>&3)
                                    exitStatus=$?
                                    if [ "$proxyWaspApiUrl" = "my.example.com:443" ]; then
                                        unset proxyWaspApiUrl
                                    fi
                                    if [ "$exitStatus" != "1" ]; then
                                        if [[ $proxyWaspApiUrl =~ $proxyUrlRegex ]] || [ -z $proxyWaspApiUrl ]; then
                                            if [ "$currentProxyWaspApiUrl" != "$proxyWaspApiUrl" ]; then
                                                sudo sed -i 's/^proxyWaspApiUrl=.*/proxyWaspApiUrl="'$proxyWaspApiUrl'"/' $swarmConfigs/proxy.cfg
                                                whiptail --title "Proxy - WASP API" --msgbox "URL for WASP API proxy set to \"$proxyWaspApiUrl\"." 8 65
                                            else
                                                whiptail --title "Proxy - WASP API" --msgbox "No WASP API url change detected." 8 65
                                            fi
                                        else
                                            whiptail --title "Proxy - WASP API" --msgbox "No valid WASP API url." 8 65
                                        fi
                                    fi
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                    "8)")
                        while [ $exitCode -lt 1 ]; do
                            source $swarmConfigs/proxy.cfg
                            clear
                            if [ "$proxyAutomaticDeployment" = "true" ]; then
                                proxyAutomaticDeploymentMenu="Disable"
                            else
                                proxyAutomaticDeploymentMenu="Enable"
                            fi
                            CHOICE=$(
                                whiptail --title "Proxy - Advanced Settings" --menu "\nChoose an option" 24 65 0 \
                                "1)" "$proxyAutomaticDeploymentMenu automatic proxy deployment" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    source $swarmConfigs/proxy.cfg
                                    if [ "$proxyAutomaticDeployment" = "true" ]; then
                                        proxyAutomaticDeployment=false
                                        sudo sed -i 's/^proxyAutomaticDeployment=.*/proxyAutomaticDeployment='$proxyAutomaticDeployment'/' $swarmConfigs/proxy.cfg
                                        whiptail --title "Proxy - Advanced Settings" --msgbox "Automatic proxy deployment disabled successfully." 8 65
                                    else
                                        proxyAutomaticDeployment=true
                                        sudo sed -i 's/^proxyAutomaticDeployment=.*/proxyAutomaticDeployment='$proxyAutomaticDeployment'/' $swarmConfigs/proxy.cfg
                                        whiptail --title "Proxy - Advanced Settings" --msgbox "Automatic proxy deployment enabled successfully." 8 65
                                    fi
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                esac
            done
            exitCode=0
        ;;
        "3)")
            CHOICE=$(
                whiptail --title "Proxy Menu" --menu "\nChoose an option" 24 65 0 \
                "1)" "Show proxy status" \
                "2)" "Start/stop proxy" 3>&2 2>&1 1>&3
            )
            case $CHOICE in
                "1)")
                    proxyStatus="$(sudo systemctl status nginx)"
                    whiptail --title "Proxy Status" --msgbox "$proxyStatus" 15 65
                ;;
                "2)")
                    CHOICE=$(
                        whiptail --title "Proxy Menu" --menu "\nChoose your option" 24 65 0 \
                        "1)" "Restart Proxy" \
                        "2)" "Start Proxy" \
                        "3)" "Stop Proxy" 3>&2 2>&1 1>&3
                    )
                    case $CHOICE in
                        "1)")
                            {
                                echo 0
                                sleep 0.25
                                echo 66
                                sudo systemctl restart nginx
                                echo 100
                                sleep 0.25
                            } | whiptail --gauge "Please wait while re-starting the proxy..." 6 65 0
                            whiptail --scrolltext --title "Proxy Menu" --msgbox "Proxy restarted successfully!" 8 65
                        ;;
                        "2)")
                            {
                                echo 0
                                sleep 0.25
                                echo 66
                                sudo systemctl start nginx
                                echo 100
                                sleep 0.25
                            } | whiptail --gauge "Please wait while starting the proxy..." 6 65 0
                            whiptail --title "Proxy Menu" --msgbox "Proxy started successfully!" 8 65
                        ;;
                        "3)")
                            {
                                echo 0
                                sleep 0.25
                                echo 66
                                sudo systemctl stop nginx
                                echo 100
                                sleep 0.25
                            } | whiptail --gauge "Please wait while stopping the proxy..." 6 65 0
                            whiptail --title "Proxy Menu" --msgbox "Proxy stopped successfully!" 8 65
                        ;;
                    esac
                ;;
            esac
        ;;
        "4)")
            CHOICE=$(
                whiptail --title "Proxy Menu" --menu "\nChoose an option" 24 65 0 \
                "1)" "Install/Deploy the proxy" \
                "2)" "Remove the proxy" \
                "3)" "Renew SSL certificate" 3>&2 2>&1 1>&3
            )
            case $CHOICE in
                "1)")
                    if [ -f "/usr/bin/hornet" ] || [ -f "/usr/bin/shimmer-hornet" ] || [ -f "/usr/bin/bee" ] || [ -f "/usr/bin/shimmer-bee" ] || [ -f "/usr/bin/goshimmer" ] || [ -f "/usr/bin/wasp" ]; then
                        source $swarmConfigs/proxy.cfg
                        if (whiptail --title "Proxy - Deployment" --yesno --defaultno "Before deploying the proxy, please make sure that the domain and port are set for all nodes to be installed. If you use one domain for multiple nodes, please use different ports.\n\n\nAre you sure you want to continue?" 16 65); then
                            source $proxyModules/proxyDeployment
                            clear
                        fi
                    else
                        whiptail --title "Proxy - Deployment" --msgbox "No node software found on the system, please install a node first before you can install the proxy." 8 65
                    fi
                ;;
                "2)")
                    if (whiptail --title "Proxy - Removal" --yesno --defaultno "Do you really want to remove the proxy?" 8 65); then
                        {
                            echo 0
                            if [ "$ufw" = "true" ]; then
                                source $proxyModules/proxyParser
                                sudo ufw delete allow 80/tcp > /dev/null 2>&1
                                sudo ufw delete allow $proxySwarmDashboardPort/tcp > /dev/null 2>&1
                                sudo ufw delete allow $proxyHornetPort/tcp > /dev/null 2>&1
                                sudo ufw delete allow $proxyShimmerHornetPort/tcp > /dev/null 2>&1
                                sudo ufw delete allow $proxyBeePort/tcp > /dev/null 2>&1
                                sudo ufw delete allow $proxyShimmerBeePort/tcp > /dev/null 2>&1
                                sudo ufw delete allow $proxyGoshimmerPort/tcp > /dev/null 2>&1
                                sudo ufw delete allow $proxyWaspDashboardPort/tcp > /dev/null 2>&1
                                sudo ufw delete allow $proxyWaspApiPort/tcp > /dev/null 2>&1
                            fi
                            echo 20
                            sudo apt -qq purge software-properties-common certbot python3-certbot-nginx nginx* -y > /dev/null 2>&1
                            echo 40
                            sudo apt -qq autoremove -y > /dev/null 2>&1
                            echo 60
                            if [ -d "/etc/nginx" ]; then
                                sudo rm -rf /etc/nginx > /dev/null 2>&1
                            fi
                            if [ -d "/etc/letsencrypt" ]; then
                                sudo rm -rf /etc/letsencrypt > /dev/null 2>&1
                            fi
                            sudo sed -i 's/^proxyHornetUrl=.*/proxyHornetDomain=""/' $swarmConfigs/proxy.cfg
                            sudo sed -i 's/^proxyShimmerHornetUrl=.*/proxyShimmerHornetDomain=""/' $swarmConfigs/proxy.cfg
                            sudo sed -i 's/^proxyBeeUrl=.*/proxyBeeUrl=""/' $swarmConfigs/proxy.cfg
                            sudo sed -i 's/^proxyShimmerBeeUrl=.*/proxyShimmerBeeUrl=""/' $swarmConfigs/proxy.cfg
                            sudo sed -i 's/^proxyGoshimmerUrl=.*/proxyGoshimmerUrl=""/' $swarmConfigs/proxy.cfg
                            sudo sed -i 's/^proxyWaspDashboardUrl=.*/proxyWaspDashboardUrl=/' $swarmConfigs/proxy.cfg
                            sudo sed -i 's/^proxyWaspApiUrl=.*/proxyWaspApiUrl=/' $swarmConfigs/proxy.cfg
                            echo 100
                            sleep 0.25
                        } | whiptail --gauge "Please wait while removing the proxy..." 6 65 0
                        whiptail --title "Proxy - Removal" --msgbox "Proxy removed successfully!" 8 65
                    fi
                ;;
                "3)")
                    # Manual renew certificate if installed
                    source $proxyModules/proxyParser
                    if [ -f "/etc/letsencrypt/live/$proxyHornetDomain/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyShimmerHornetDomain/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyBeeDomain/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyShimmerBeeDomain/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyGoshimmerDomain/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyWaspDashboardDomain/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyWaspApiDomain/fullchain.pem" ]; then
                        sudo certbot renew --force-renewal
                        echo ""
                        echo ""
                        echo "#############################################################"
                        read -p "Press any key to continue..."
                    else
                        whiptail --title "Proxy Menu" --msgbox "Error! No SSL Certificate installed!" 8 65
                    fi
                ;;
            esac
        ;;
    esac
done
exitCode=0