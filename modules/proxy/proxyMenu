#!/bin/bash

while [ $exitCode -lt 1 ]; do
    clear
    CHOICE=$(
        whiptail --title "Proxy [-] Menu" --menu "\nChoose an option" 24 65 0 \
        "" "" \
        "1)" "Proxy Info" \
        "2)" "Proxy Configuration" \
        "3)" "Proxy Management" \
        "4)" "Proxy Installer" 3>&2 2>&1 1>&3
    )

    exitStatus=$?
    if [ "$exitStatus" = "1" ]; then
        exitCode=1
    fi

    case $CHOICE in
        "1)")
            source $proxyModule/proxyInfo
        ;;
        "2)")
            source $proxyModule/proxyAppCheck
            while [ $exitCode -lt 1 ]; do
                clear
                if [ "$proxySwarmEndpoint" = "true" ]; then
                    menuProxySwarmEndpoint="Disable"
                else
                    menuProxySwarmEndpoint="Enable"
                fi
                CHOICE=$(
                    whiptail --title "Proxy [-] Menu" --menu "\nChoose an option" 24 65 0 \
                    "" "" \
                    "1)" "$menuProxySwarmEndpoint SWARM Endpoint" \
                    "2)" "Hornet [IOTA] Proxy Settings" \
                    "3)" "Hornet [SHIMMER] Proxy Settings" \
                    "4)" "INX-Dashboard [IOTA] Proxy Settings" \
                    "5)" "INX-Dashboard [SHIMMER] Proxy Settings" \
                    "6)" "GoShimmer Proxy Settings" \
                    "7)" "Advanced Settings" 3>&2 2>&1 1>&3
                )

                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                    if [ "$proxyDeployNeeded" = "true" ] && [ -f "/usr/sbin/nginx" ]; then
                        if (whiptail --title "Proxy [-] Menu" --yesno "Would you like to apply the changes and install/deploy the proxy?" 8 65); then
                            source $swarmConfigs/proxy.cfg
                            source $proxyModule/proxyDeployment
                            clear
                            unset proxyDeployNeeded
                        fi
                    fi
                fi

                case $CHOICE in
                    "1)")
                        if [ "$proxySwarmEndpoint" = "true" ]; then
                            proxySwarmEndpoint=false
                            proxySwarmEndpointMenu="disabled"
                        else
                            proxySwarmEndpoint=true
                            proxySwarmEndpointMenu="enabled"
                        fi
                        sudo sed -i 's/^proxySwarmEndpoint=.*/proxySwarmEndpoint='$proxySwarmEndpoint'/' $swarmConfigs/proxy.cfg
                        source $proxyModule/proxySwarmEndpoint
                        whiptail --title "Proxy [-] SWARM" --msgbox "SWARM endpoint $proxySwarmEndpointMenu." 8 65
                    ;;
                    "2)")
                        if [ -f "/usr/bin/iota-hornet" ]; then
                            source $swarmConfigs/proxy.cfg
                            currentProxyUrl="$proxyIotaHornetUrl"
                            currentProxyPort=$(echo $currentProxyUrl | sed 's/.*://')
                            if [ -z "$proxyIotaHornetUrl" ]; then
                                proxyIotaHornetUrl="my.example.com:443"
                            fi
                            proxyUrl=$(whiptail --inputbox "\nSet your domain and port for Hornet" 10 65 $proxyIotaHornetUrl --title "Proxy [IOTA] Hornet" 3>&1 1>&2 2>&3)
                            exitStatus=$?
                            if [ "$exitStatus" != "1" ] && [ "$proxyUrl" != "my.example.com:443" ]; then
                                source $proxyModule/proxyUrlValidation
                                if [ "$proxyUrlValid" = "true" ] || [ -z $proxyUrl ]; then
                                    if [ "$currentProxyUrl" != "$proxyUrl" ]; then
                                        proxyDeployNeeded=true
                                        sudo sed -i 's/^proxyIotaHornetUrl=.*/proxyIotaHornetUrl="'$proxyUrl'"/' $swarmConfigs/proxy.cfg
                                        source $proxyModule/proxySharedPortCheck
                                        whiptail --title "Proxy [IOTA] Hornet" --msgbox "URL for (IOTA) Hornet proxy set to \"$proxyUrl\"." 8 65
                                    else
                                        whiptail --title "Proxy [IOTA] Hornet" --msgbox "No (IOTA) Hornet url change detected." 8 65
                                    fi
                                    unset proxyUrl proxyUrlValid
                                else
                                    whiptail --title "Proxy [IOTA] Hornet" --msgbox "No valid (IOTA) Hornet url." 8 65
                                fi
                            else
                                unset proxyUrl
                            fi
                            unset currentProxyUrl currentProxyPort
                        else
                            whiptail --title "Proxy [IOTA] Hornet" --msgbox "Please install (IOTA) Hornet first." 8 65
                        fi
                    ;;
                    "3)")
                        if [ -f "/usr/bin/shimmer-hornet" ]; then
                            source $swarmConfigs/proxy.cfg
                            currentProxyUrl="$proxyShimmerHornetUrl"
                            currentProxyPort=$(echo $currentProxyUrl | sed 's/.*://')
                            if [ -z "$proxyShimmerHornetUrl" ]; then
                                proxyShimmerHornetUrl="my.example.com:443"
                            fi
                            proxyUrl=$(whiptail --inputbox "\nSet your domain and port for (Shimmer) Hornet" 10 65 $proxyShimmerHornetUrl --title "Proxy [Shimmer] Hornet" 3>&1 1>&2 2>&3)
                            exitStatus=$?
                            if [ "$exitStatus" != "1" ] && [ "$proxyUrl" != "my.example.com:443" ]; then
                                source $proxyModule/proxyUrlValidation
                                if [ "$proxyUrlValid" = "true" ] || [ -z $proxyUrl ]; then
                                    if [ "$currentProxyUrl" != "$proxyUrl" ]; then
                                        proxyDeployNeeded=true
                                        sudo sed -i 's/^proxyShimmerHornetUrl=.*/proxyShimmerHornetUrl="'$proxyUrl'"/' $swarmConfigs/proxy.cfg
                                        source $proxyModule/proxySharedPortCheck
                                        whiptail --title "Proxy [Shimmer] Hornet" --msgbox "URL for (Shimmer) Hornet proxy set to \"$proxyUrl\"." 8 65
                                    else
                                        whiptail --title "Proxy [Shimmer] Hornet" --msgbox "No (Shimmer) Hornet url change detected." 8 65
                                    fi
                                    unset proxyUrl proxyUrlValid
                                else
                                    whiptail --title "Proxy [Shimmer] Hornet" --msgbox "No valid (Shimmer) Hornet url." 8 65
                                fi
                            else
                                unset proxyUrl
                            fi
                            unset currentProxyUrl currentProxyPort
                        else
                            whiptail --title "Proxy [SHIMMER] Hornet" --msgbox "Please install (Shimmer) Hornet first." 8 65
                        fi
                    ;;
                    "4)")
                        if [ -f  "/usr/bin/iota-inx-dashboard" ]; then
                            if [ "$iotaHornetReleaseVersion" = "v2" ] && [ ! -z "$iotaHornetReleaseVersion" ] && [[ $iotaHornetVersion =~ ^2.* ]]; then
                                while [ $exitCode -lt 1 ]; do
                                    source $swarmConfigs/proxy.cfg
                                    clear
                                    if [ "$proxyIotaInxDashboardEnabled" = "true" ]; then
                                        proxyIotaInxDashboardEnabledMenu="Disable"
                                    else
                                        proxyIotaInxDashboardEnabledMenu="Enable"
                                    fi
                                    CHOICE=$(
                                        whiptail --title "Proxy [IOTA] INX-Dashboard" --menu "\nChoose an option" 24 65 0 \
                                        "" "" \
                                        "1)" "$proxyIotaInxDashboardEnabledMenu INX-Dashboard" \
                                        "2)" "Set INX-Dashboard url" 3>&2 2>&1 1>&3
                                    )
                                    exitStatus=$?
                                    if [ "$exitStatus" = "1" ]; then
                                        exitCode=1
                                    fi
                                    case $CHOICE in
                                        "1)")
                                            source $swarmConfigs/proxy.cfg
                                            if [ ! -z "$proxyIotaInxDashboardUrl" ]; then
                                                if [ "$proxyIotaInxDashboardEnabled" = "true" ]; then
                                                    proxyDeployNeeded=true
                                                    proxyIotaInxDashboardEnabled=false
                                                    sudo sed -i 's/^proxyIotaInxDashboardEnabled=.*/proxyIotaInxDashboardEnabled='$proxyIotaInxDashboardEnabled'/' $swarmConfigs/proxy.cfg
                                                    whiptail --title "Proxy [IOTA] INX-Dashboard" --msgbox "INX-Dashboard disabled successfully and Hornet dasboard via url enabled." 8 65
                                                else
                                                    if (whiptail --title "Proxy [IOTA] INX-Dashboard" --yesno --defaultno "Before you change the settings, are you sure you want to separate the INX dashboard from the Hornet (Shimmer) proxy endpoint (its own subdomain or port)?\n\nAre you sure you want to continue?" 16 65); then
                                                        proxyShimmerInxDashboardEnabled=true
                                                        proxyDeployNeeded=true
                                                        sudo sed -i 's/^proxyIotaInxDashboardEnabled=.*/proxyIotaInxDashboardEnabled='$proxyIotaInxDashboardEnabled'/' $swarmConfigs/proxy.cfg
                                                        whiptail --title "Proxy [IOTA] INX-Dashboard" --msgbox "INX-Dashboard enabled successfully and Hornet dashboard url disabled." 8 65
                                                    fi
                                                fi
                                            else
                                                proxyIotaInxDashboardEnabled=false
                                                proxyDeployNeeded=true
                                                sudo sed -i 's/^proxyIotaInxDashboardEnabled=.*/proxyIotaInxDashboardEnabled='$proxyIotaInxDashboardEnabled'/' $swarmConfigs/proxy.cfg
                                                whiptail --title "Proxy [IOTA] INX-Dashboard" --msgbox "Aborted - To change this setting please set the url first." 8 65
                                            fi
                                        ;;
                                        "2)")
                                            source $swarmConfigs/proxy.cfg
                                            currentProxyUrl="$proxyIotaInxDashboardUrl"
                                            currentProxyPort=$(echo $currentProxyUrl | sed 's/.*://')
                                            if [ -z "$proxyIotaInxDashboardUrl" ]; then
                                                proxyUrl="my.example.com:443"
                                            fi
                                            proxyUrl=$(whiptail --inputbox "\nSet your domain and port for the INX-Dashboard" 10 65 $proxyIotaInxDashboardUrl --title "Proxy [IOTA] INX-Dashboard" 3>&1 1>&2 2>&3)
                                            exitStatus=$?
                                            if [ "$exitStatus" != "1" ] && [ "$proxyUrl" != "my.example.com:443" ]; then
                                                source $proxyModule/proxyUrlValidation
                                                if [ "$proxyUrlValid" = "true" ] || [ -z $proxyUrl ]; then
                                                    if [ "$currentProxyUrl" != "$proxyUrl" ]; then
                                                        proxyDeployNeeded=true
                                                        sudo sed -i 's/^proxyIotaInxDashboardUrl=.*/proxyIotaInxDashboardUrl="'$proxyUrl'"/' $swarmConfigs/proxy.cfg
                                                        source $proxyModule/proxySharedPortCheck
                                                        whiptail --title "Proxy [IOTA] INX-Dashboard" --msgbox "URL for INX-Dashboard (IOTA) proxy set to \"$proxyUrl\"." 8 65
                                                    else
                                                        whiptail --title "Proxy [IOTA] INX-Dashboard" --msgbox "No INX-Dashboard (IOTA) url change detected." 8 65
                                                    fi
                                                    unset proxyUrl proxyUrlValid
                                                else
                                                    whiptail --title "Proxy [IOTA] INX-Dashboard" --msgbox "No valid INX-Dashboard (IOTA) url." 8 65
                                                fi
                                            else
                                                unset proxyUrl
                                            fi
                                            unset currentProxyUrl currentProxyPort
                                        ;;
                                    esac
                                done
                                exitCode=0
                            else
                                whiptail --title "Proxy [IOTA] INX-Dashboard" --msgbox "This option will be available only with Hornet v2 (Stardust)." 8 65
                            fi
                        else
                            whiptail --title "Proxy [IOTA] INX-Dashboard" --msgbox "Please install (IOTA) INX-Dashboard first." 8 65
                        fi
                    ;;
                    "5)")
                        if [ -f "/usr/bin/shimmer-inx-dashboard" ]; then
                            while [ $exitCode -lt 1 ]; do
                                source $swarmConfigs/proxy.cfg
                                clear
                                if [ "$proxyShimmerInxDashboardEnabled" = "true" ]; then
                                    proxyShimmerInxDashboardEnabledMenu="Disable"
                                else
                                    proxyShimmerInxDashboardEnabledMenu="Enable"
                                fi
                                CHOICE=$(
                                    whiptail --title "Proxy [SHIMMER] INX-Dashboard" --menu "\nChoose an option" 24 65 0 \
                                    "" "" \
                                    "1)" "$proxyShimmerInxDashboardEnabledMenu INX-Dashboard" \
                                    "2)" "Set INX-Dashboard URL" 3>&2 2>&1 1>&3
                                )
                                exitStatus=$?
                                if [ "$exitStatus" = "1" ]; then
                                    exitCode=1
                                fi
                                case $CHOICE in
                                    "1)")
                                        source $swarmConfigs/proxy.cfg
                                        if [ ! -z "$proxyShimmerInxDashboardUrl" ]; then
                                            if [ "$proxyShimmerInxDashboardEnabled" = "true" ]; then
                                                proxyDeployNeeded=true
                                                proxyShimmerInxDashboardEnabled=false
                                                sudo sed -i 's/^proxyShimmerInxDashboardEnabled=.*/proxyShimmerInxDashboardEnabled='$proxyShimmerInxDashboardEnabled'/' $swarmConfigs/proxy.cfg
                                                whiptail --title "Proxy [SHIMMER] INX-Dashboard" --msgbox "INX-Dashboard disabled successfully and Hornet dashboard url enabled." 8 65
                                            else
                                                if (whiptail --title "Proxy [SHIMMER] INX-Dashboard" --yesno --defaultno "Before you change the settings, are you sure you want to separate the INX dashboard from the Hornet (Shimmer) proxy endpoint (its own subdomain or port)?\n\nAre you sure you want to continue?" 16 65); then
                                                    proxyDeployNeeded=true
                                                    proxyShimmerInxDashboardEnabled=true
                                                    sudo sed -i 's/^proxyShimmerInxDashboardEnabled=.*/proxyShimmerInxDashboardEnabled='$proxyShimmerInxDashboardEnabled'/' $swarmConfigs/proxy.cfg
                                                    whiptail --title "Proxy [SHIMMER] INX-Dashboard" --msgbox "INX-Dashboard enabled successfully and Hornet dashboard url disabled." 8 65
                                                fi
                                            fi
                                        else
                                            proxyDeployNeeded=true
                                            proxyShimmerInxDashboardEnabled=false
                                            sudo sed -i 's/^proxyShimmerInxDashboardEnabled=.*/proxyShimmerInxDashboardEnabled='$proxyShimmerInxDashboardEnabled'/' $swarmConfigs/proxy.cfg
                                            whiptail --title "Proxy [SHIMMER] INX-Dashboard" --msgbox "Aborted - To change this setting please set the url first." 8 65
                                        fi
                                    ;;
                                    "2)")
                                        source $swarmConfigs/proxy.cfg
                                        currentProxyUrl="$proxyShimmerInxDashboardUrl"
                                        currentProxyPort=$(echo $currentProxyUrl | sed 's/.*://')
                                        if [ -z "$proxyShimmerInxDashboardUrl" ]; then
                                            proxyUrl="my.example.com:443"
                                        fi
                                        proxyUrl=$(whiptail --inputbox "\nSet your domain and port for the INX-Dashboard" 10 65 $proxyShimmerInxDashboardUrl --title "Proxy [SHIMMER] INX-Dashboard" 3>&1 1>&2 2>&3)
                                        exitStatus=$?
                                        if [ "$proxyUrl" = "my.example.com:443" ]; then
                                            unset proxyUrl
                                        fi
                                        if [ "$exitStatus" != "1" ]; then
                                            source $proxyModule/proxyUrlValidation
                                            if [ "$proxyUrlValid" = "true" ] || [ -z $proxyUrl ]; then
                                                if [ "$currentProxyUrl" != "$proxyUrl" ]; then
                                                    proxyDeployNeeded=true
                                                    sudo sed -i 's/^proxyShimmerInxDashboardUrl=.*/proxyShimmerInxDashboardUrl="'$proxyUrl'"/' $swarmConfigs/proxy.cfg
                                                    source $proxyModule/proxySharedPortCheck
                                                    whiptail --title "Proxy [SHIMMER] INX-Dashboard" --msgbox "URL for INX-Dashboard (Shimmer) proxy set to \"$proxyUrl\"." 8 65
                                                else
                                                    whiptail --title "Proxy [SHIMMER] INX-Dashboard" --msgbox "No INX-Dashboard (Shimmer) url change detected." 8 65
                                                fi
                                                unset proxyUrl proxyUrlValid
                                            else
                                                whiptail --title "Proxy [SHIMMER] INX-Dashboard" --msgbox "No valid INX-Dashboard (Shimmer) url." 8 65
                                            fi
                                        fi
                                        unset currentProxyUrl currentProxyPort
                                    ;;
                                esac
                            done
                            exitCode=0
                        else
                            whiptail --title "Proxy [SHIMMER] INX-Dashboard" --msgbox "Please install (SHIMMER) INX-Dashboard first." 8 65
                        fi
                    ;;
                    "6)")
                        if [ -f "/usr/bin/goshimmer" ]; then
                            source $swarmConfigs/proxy.cfg
                            currentProxyUrl="$proxyGoshimmerUrl"
                            currentProxyPort=$(echo $currentProxyUrl | sed 's/.*://')
                            if [ -z "$proxyGoshimmerUrl" ]; then
                                proxyUrl="my.example.com:443"
                            fi
                            proxyUrl=$(whiptail --inputbox "\nSet your domain and port for Goshimmer" 10 65 $proxyGoshimmerUrl --title "Proxy [-] Goshimmer" 3>&1 1>&2 2>&3)
                            exitStatus=$?
                            if [ "$exitStatus" != "1" ] && [ "$proxyUrl" != "my.example.com:443" ]; then
                                source $proxyModule/proxyUrlValidation
                                if [ "$proxyUrlValid" = "true" ] || [ -z $proxyUrl ]; then
                                    if [ "$currentProxyUrl" != "$proxyUrl" ]; then
                                        proxyDeployNeeded=true
                                        sudo sed -i 's/^proxyGoshimmerUrl=.*/proxyGoshimmerUrl="'$proxyUrl'"/' $swarmConfigs/proxy.cfg
                                        source $proxyModule/proxySharedPortCheck
                                        whiptail --title "Proxy [-] Goshimmer" --msgbox "URL for Goshimmer proxy set to \"$proxyUrl\"." 8 65
                                    else
                                        whiptail --title "Proxy [-] Goshimmer" --msgbox "No Goshimmer url change detected." 8 65
                                    fi
                                    unset proxyUrl proxyUrlValid
                                else
                                    whiptail --title "Proxy [-] Goshimmer" --msgbox "No valid Goshimmer url." 8 65
                                fi
                            else
                                unset proxyUrl
                            fi
                            unset currentProxyUrl currentProxyPort
                        else
                            whiptail --title "Proxy [-] GoShimmer" --msgbox "Please install GoShimmer first." 8 65
                        fi
                    ;;
                    "X)")
                        if [ -f "/usr/bin/shimmer-wasp" ]; then
                            while [ $exitCode -lt 1 ]; do
                                source $swarmConfigs/proxy.cfg
                                clear
                                CHOICE=$(
                                    whiptail --title "Proxy [SHIMMER] WASP" --menu "\nChoose an option" 24 65 0 \
                                    "" "" \
                                    "1)" "Set WASP Dashboard URL" \
                                    "2)" "Set WASP API URL" 3>&2 2>&1 1>&3
                                )
                                exitStatus=$?
                                if [ "$exitStatus" = "1" ]; then
                                    exitCode=1
                                fi
                                case $CHOICE in
                                    "1)")
                                        source $swarmConfigs/proxy.cfg
                                        currentProxyUrl="$proxyShimmerWaspDashboardUrl"
                                        currentProxyPort=$(echo $currentProxyUrl | sed 's/.*://')
                                        if [ -z "$proxyShimmerWaspDashboardUrl" ]; then
                                            proxyUrl="my.example.com:443"
                                        fi
                                        proxyUrl=$(whiptail --inputbox "\nSet your domain and port for the (Shimmer) WASP dashboard" 10 65 $proxyShimmerWaspDashboardUrl --title "Proxy [SHIMMER] WASP Dashboard" 3>&1 1>&2 2>&3)
                                        exitStatus=$?
                                        if [ "$exitStatus" != "1" ] && [ "$proxyUrl" != "my.example.com:443" ]; then
                                            source $proxyModule/proxyUrlValidation
                                            if [ "$proxyUrlValid" = "true" ] || [ -z $proxyUrl ]; then
                                                if [ "$currentProxyUrl" != "$proxyUrl" ]; then
                                                    proxyDeployNeeded=true
                                                    sudo sed -i 's/^proxyShimmerWaspDashboardUrl=.*/proxyShimmerWaspDashboardUrl="'$proxyUrl'"/' $swarmConfigs/proxy.cfg
                                                    source $proxyModule/proxySharedPortCheck
                                                    whiptail --title "Proxy [SHIMMER] WASP Dashboard" --msgbox "URL for (Shimmer) WASP dashboard proxy set to \"$proxyUrl\"." 8 65
                                                else
                                                    whiptail --title "Proxy [SHIMMER] WASP Dashboard" --msgbox "No (Shimmer) WASP dashboard url change detected." 8 65
                                                fi
                                                unset proxyUrl proxyUrlValid
                                            else
                                                whiptail --title "Proxy [SHIMMER] WASP Dashboard" --msgbox "No valid (Shimmer) WASP dashboard url." 8 65
                                            fi
                                        else
                                            unset proxyUrl
                                        fi
                                        unset currentProxyUrl currentProxyPort
                                    ;;
                                    "2)")
                                        source $swarmConfigs/proxy.cfg
                                        currentProxyUrl="$proxyShimmerWaspApiUrl"
                                        currentProxyPort=$(echo $currentProxyUrl | sed 's/.*://')
                                        if [ -z "$proxyShimmerWaspApiUrl" ]; then
                                            proxyUrl="my.example.com:443"
                                        fi
                                        proxyUrl=$(whiptail --inputbox "\nSet your domain and port for the (Shimmer) WASP API" 10 65 $proxyShimmerWaspApiUrl --title "Proxy [SHIMMER] WASP API" 3>&1 1>&2 2>&3)
                                        exitStatus=$?
                                        if [ "$exitStatus" != "1" ] && [ "$proxyUrl" != "my.example.com:443" ]; then
                                            source $proxyModule/proxyUrlValidation
                                            if [ "$proxyUrlValid" = "true" ] || [ -z $proxyUrl ]; then
                                                if [ "$currentProxyUrl" != "$proxyUrl" ]; then
                                                    proxyDeployNeeded=true
                                                    sudo sed -i 's/^proxyShimmerWaspApiUrl=.*/proxyShimmerWaspApiUrl="'$proxyUrl'"/' $swarmConfigs/proxy.cfg
                                                    source $proxyModule/proxySharedPortCheck
                                                    whiptail --title "Proxy [SHIMMER] WASP API" --msgbox "URL for (Shimmer) WASP API proxy set to \"$proxyUrl\"." 8 65
                                                else
                                                    whiptail --title "Proxy [SHIMMER] WASP API" --msgbox "No (Shimmer) WASP API url change detected." 8 65
                                                fi
                                                unset proxyUrl proxyUrlValid
                                            else
                                                whiptail --title "Proxy [SHIMMER] WASP API" --msgbox "No valid (Shimmer) WASP API url." 8 65
                                            fi
                                        else
                                            unset proxyUrl
                                        fi
                                        unset currentProxyUrl currentProxyPort
                                    ;;
                                esac
                            done
                            exitCode=0
                        else
                            whiptail --title "Proxy [SHIMMER] WASP" --msgbox "Please install (Shimmer) WASP first." 8 65
                        fi
                    ;;
                    "7)")
                        while [ $exitCode -lt 1 ]; do
                            source $swarmConfigs/proxy.cfg
                            clear
                            if [ "$proxyAutomaticDeployment" = "true" ]; then
                                proxyAutomaticDeploymentMenu="Disable"
                            else
                                proxyAutomaticDeploymentMenu="Enable"
                            fi
                            CHOICE=$(
                                whiptail --title "Proxy [-] Advanced" --menu "\nChoose an option" 24 65 0 \
                                "" "" \
                                "1)" "$proxyAutomaticDeploymentMenu Automatic Proxy Deployment" 3>&2 2>&1 1>&3
                            )
                            exitStatus=$?
                            if [ "$exitStatus" = "1" ]; then
                                exitCode=1
                            fi
                            case $CHOICE in
                                "1)")
                                    source $swarmConfigs/proxy.cfg
                                    if [ "$proxyAutomaticDeployment" = "true" ]; then
                                        proxyAutomaticDeployment=false
                                        sudo sed -i 's/^proxyAutomaticDeployment=.*/proxyAutomaticDeployment='$proxyAutomaticDeployment'/' $swarmConfigs/proxy.cfg
                                        whiptail --title "Proxy - Advanced Settings" --msgbox "Automatic proxy deployment disabled successfully." 8 65
                                    else
                                        proxyAutomaticDeployment=true
                                        sudo sed -i 's/^proxyAutomaticDeployment=.*/proxyAutomaticDeployment='$proxyAutomaticDeployment'/' $swarmConfigs/proxy.cfg
                                        whiptail --title "Proxy - Advanced Settings" --msgbox "Automatic proxy deployment enabled successfully." 8 65
                                    fi
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                esac
            done
            source $proxyModule/proxyAppCheck
            exitCode=0
        ;;
        "3)")
            while [ $exitCode -lt 1 ]; do
                CHOICE=$(
                    whiptail --title "Proxy [-] Management" --menu "\nChoose an option" 24 65 0 \
                    "" "" \
                    "1)" "Show Proxy Status" \
                    "2)" "Start/Stop Proxy" \
                    "3)" "Renew SSL Certificates" \
                    "4)" "Reset All SSL Certificates" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        proxyStatus="$(sudo systemctl status nginx)"
                        whiptail --title "Proxy [-] Management" --msgbox "$proxyStatus" 15 65
                    ;;
                    "2)")
                        CHOICE=$(
                            whiptail --title "Proxy [-] Management" --menu "\nChoose your option" 24 65 0 \
                            "" "" \
                            "1)" "Restart Proxy" \
                            "2)" "Start Proxy" \
                            "3)" "Stop Proxy" 3>&2 2>&1 1>&3
                        )
                        exitStatus=$?
                        if [ "$exitStatus" = "1" ]; then
                            exitCode=1
                        fi
                        case $CHOICE in
                            "1)")
                                {
                                    echo 0
                                    sleep 0.25
                                    echo 66
                                    sudo systemctl restart nginx
                                    echo 100
                                    sleep 0.25
                                } | whiptail --gauge "Please wait while re-starting the proxy..." 6 65 0
                                whiptail --scrolltext --title "Proxy [-] Management" --msgbox "Proxy restarted successfully!" 8 65
                            ;;
                            "2)")
                                {
                                    echo 0
                                    sleep 0.25
                                    echo 66
                                    sudo systemctl start nginx
                                    echo 100
                                    sleep 0.25
                                } | whiptail --gauge "Please wait while starting the proxy..." 6 65 0
                                whiptail --title "Proxy [-] Management" --msgbox "Proxy started successfully!" 8 65
                            ;;
                            "3)")
                                {
                                    echo 0
                                    sleep 0.25
                                    echo 66
                                    sudo systemctl stop nginx
                                    echo 100
                                    sleep 0.25
                                } | whiptail --gauge "Please wait while stopping the proxy..." 6 65 0
                                whiptail --title "Proxy [-] Management" --msgbox "Proxy stopped successfully!" 8 65
                            ;;
                        esac
                    ;;
                    "3)")
                        # Manual renew certificate if installed
                        source $proxyModule/proxyParser
                        if [ -f "/etc/letsencrypt/live/$proxyIotaHornetUrl/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyIotaInxDashboardUrl/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyShimmerHornetUrl/fullchain.pem" ]|| [ -f "/etc/letsencrypt/live/$proxyShimmerInxDashboardUrl/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyGoshimmerUrl/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyShimmerWaspDashboardUrl/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyShimmerWaspApiUrl/fullchain.pem" ]; then
                            sudo certbot renew --force-renewal
                            echo ""
                            echo ""
                            echo "#############################################################"
                            read -p "Press any key to continue..."
                        else
                            whiptail --title "Proxy [-] Management" --msgbox "Error! No SSL Certificates installed!" 8 65
                        fi
                    ;;
                    "4)")
                        if (whiptail --title "Proxy [-] Management" --yesno --defaultno "Do you really want to reset all SSL certificates?" 8 65); then
                            if [ -d "/etc/letsencrypt/archive" ]; then
                                sudo rm -rf /etc/letsencrypt/archive/* > /dev/null 2>&1
                            fi
                            if [ -d "/etc/letsencrypt/live" ]; then
                                sudo rm -rf /etc/letsencrypt/live/* > /dev/null 2>&1
                            fi
                            if [ -d "/etc/letsencrypt/renewal" ]; then
                                sudo rm -rf /etc/letsencrypt/renewal/* > /dev/null 2>&1
                            fi
                            if [ -d "/etc/nginx/sites-enabled" ]; then
                                sudo rm -rf /etc/nginx/sites-enabled/* > /dev/null 2>&1
                            fi
                            whiptail --title "Proxy [-] Management" --msgbox "All SSL certificates successfully reset." 8 65
                        fi
                    ;;
                esac
            done
            exitCode=0
        ;;
        "4)")
            while [ $exitCode -lt 1 ]; do
                CHOICE=$(
                    whiptail --title "Proxy [-] Installer" --menu "\nChoose an option" 24 65 0 \
                    "" "" \
                    "1)" "Install/Deploy The Proxy" \
                    "2)" "Remove The Proxy" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        if [ -f "/usr/bin/iota-hornet" ] || [ -f "/usr/bin/shimmer-hornet" ] || [ -f "/usr/bin/iota-bee" ] || [ -f "/usr/bin/shimmer-bee" ] || [ -f "/usr/bin/goshimmer" ] || [ -f "/usr/bin/wasp" ]; then
                            source $swarmConfigs/proxy.cfg
                            if (whiptail --title "Proxy [-] Installer" --yesno --defaultno "Before deploying the proxy, please make sure that the domain and port are set for all nodes to be installed. If you use one domain for multiple nodes, please use different ports.\n\n\nAre you sure you want to continue?" 16 65); then
                                source $proxyModule/proxyDeployment
                                clear
                            fi
                        else
                            whiptail --title "Proxy [-] Installer" --msgbox "No node software found on the system, please install a node first before you can install the proxy." 8 65
                        fi
                    ;;
                    "2)")
                        if (whiptail --title "Proxy [-] Installer" --yesno --defaultno "Do you really want to remove the proxy?" 8 65); then
                            {
                                echo 0
                                if [ "$ufw" = "true" ]; then
                                    source $proxyModule/proxyParser
                                    sudo ufw delete allow 80/tcp > /dev/null 2>&1
                                    sudo ufw delete allow $proxySwarmDashboardPort/tcp > /dev/null 2>&1
                                    sudo ufw delete allow $proxyIotaHornetPort/tcp > /dev/null 2>&1
                                    sudo ufw delete allow $proxyShimmerHornetPort/tcp > /dev/null 2>&1
                                    sudo ufw delete allow $proxyShimmerInxDashboardPort/tcp > /dev/null 2>&1
                                    sudo ufw delete allow $proxyIotaBeePort/tcp > /dev/null 2>&1
                                    sudo ufw delete allow $proxyShimmerBeePort/tcp > /dev/null 2>&1
                                    sudo ufw delete allow $proxyGoshimmerPort/tcp > /dev/null 2>&1
                                    sudo ufw delete allow $proxyWaspDashboardPort/tcp > /dev/null 2>&1
                                    sudo ufw delete allow $proxyWaspApiPort/tcp > /dev/null 2>&1
                                fi
                                echo 20
                                sudo apt -qq purge software-properties-common certbot python3-certbot-nginx nginx* -y > /dev/null 2>&1
                                echo 40
                                sudo apt -qq autoremove -y > /dev/null 2>&1
                                echo 60
                                if [ -d "/etc/nginx" ]; then
                                    sudo rm -rf /etc/nginx > /dev/null 2>&1
                                fi
                                if [ -d "/etc/letsencrypt" ]; then
                                    sudo rm -rf /etc/letsencrypt > /dev/null 2>&1
                                fi
                                sudo sed -i 's/^proxyIotaHornetUrl=.*/proxyIotaHornetUrl=""/' $swarmConfigs/proxy.cfg
                                sudo sed -i 's/^proxyIotaInxDashboardUrl=.*/proxyIotaInxDashboardUrl=""/' $swarmConfigs/proxy.cfg
                                sudo sed -i 's/^proxyShimmerHornetUrl=.*/proxyShimmerHornetUrl=""/' $swarmConfigs/proxy.cfg
                                sudo sed -i 's/^proxyShimmerInxDashboardUrl=.*/proxyShimmerInxDashboardUrl=""/' $swarmConfigs/proxy.cfg
                                sudo sed -i 's/^proxyGoshimmerUrl=.*/proxyGoshimmerUrl=""/' $swarmConfigs/proxy.cfg
                                sudo sed -i 's/^proxyWaspDashboardUrl=.*/proxyWaspDashboardUrl=/' $swarmConfigs/proxy.cfg
                                sudo sed -i 's/^proxyWaspApiUrl=.*/proxyWaspApiUrl=/' $swarmConfigs/proxy.cfg
                                echo 100
                                sleep 0.25
                            } | whiptail --gauge "Please wait while removing the proxy..." 6 65 0
                            whiptail --title "Proxy [-] Installer" --msgbox "Proxy removed successfully!" 8 65
                        fi
                    ;;
                esac
            done
            exitCode=0
        ;;
    esac
done
exitCode=0
