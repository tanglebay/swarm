#!/bin/bash

while [ $exitCode -lt 1 ]; do
    clear
    CHOICE=$(
        whiptail --title "Proxy [-] Menu" --menu "\nChoose an option" 24 70 0 \
        "" "" \
        "1)" "Proxy Configuration" \
        "2)" "Proxy Management" \
        "3)" "Proxy Installer" 3>&2 2>&1 1>&3
    )

    exitStatus=$?
    if [ "$exitStatus" = "1" ]; then
        exitCode=1
    fi

    case $CHOICE in
        "1)")

        ;;
        "2)")
            while [ $exitCode -lt 1 ]; do
                CHOICE=$(
                    whiptail --title "Proxy [-] Management" --menu "\nChoose an option" 24 70 0 \
                    "" "" \
                    "1)" "Proxy Live Log" \
                    "2)" "Start/Stop Proxy" \
                    "3)" "Renew SSL Certificates" \
                    "4)" "Reset All SSL Certificates" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        ( cd $swarmDockerPath ; docker compose logs traefik -f )
                    ;;
                    "2)")
                        CHOICE=$(
                            whiptail --title "Proxy [-] Management" --menu "\nChoose your option" 24 70 0 \
                            "" "" \
                            "1)" "Restart Proxy" \
                            "2)" "Start Proxy" \
                            "3)" "Stop Proxy" 3>&2 2>&1 1>&3
                        )
                        exitStatus=$?
                        if [ "$exitStatus" = "1" ]; then
                            exitCode=1
                        fi
                        case $CHOICE in
                            "1)")
                                {
                                    echo 0
                                    echo 33
                                    if [ "$TRAEFIK_PROTOCOL" = "https" ]; then
                                        ( cd $swarmDockerPath ; docker compose -f docker-traefik.yml -f docker-traefik-https.yml down > /dev/null 2>&1 )
                                        echo 66
                                        ( cd $swarmDockerPath ; docker compose -f docker-traefik.yml -f docker-traefik-https.yml up -d > /dev/null 2>&1 )
                                    else
                                        ( cd $swarmDockerPath ; docker compose -f docker-traefik.yml down > /dev/null 2>&1 )
                                        echo 66
                                        ( cd $swarmDockerPath ; docker compose -f docker-traefik.yml up -d > /dev/null 2>&1 )
                                    fi
                                    echo 100
                                } | whiptail --gauge "Please wait while re-starting the proxy..." 6 65 0
                                whiptail --scrolltext --title "Proxy [-] Management" --msgbox "Proxy restarted successfully!" 8 70
                            ;;
                            "2)")
                                {
                                    echo 0
                                    echo 33
                                    if [ "$TRAEFIK_PROTOCOL" = "https" ]; then
                                        ( cd $swarmDockerPath ; docker compose -f docker-traefik.yml -f docker-traefik-https.yml up -d > /dev/null 2>&1 )
                                    else
                                        ( cd $swarmDockerPath ; docker compose -f docker-traefik.yml up -d > /dev/null 2>&1 )
                                    fi
                                    echo 66
                                    echo 100
                                } | whiptail --gauge "Please wait while starting the proxy..." 6 65 0
                                whiptail --title "Proxy [-] Management" --msgbox "Proxy started successfully!" 8 70
                            ;;
                            "3)")
                                {
                                    echo 0
                                    echo 33
                                    if [ "$TRAEFIK_PROTOCOL" = "https" ]; then
                                        ( cd $swarmDockerPath ; docker compose -f docker-traefik.yml -f docker-traefik-https.yml down > /dev/null 2>&1 )
                                    else
                                        ( cd $swarmDockerPath ; docker compose -f docker-traefik.yml down > /dev/null 2>&1 )
                                    fi
                                    echo 66
                                    echo 100
                                } | whiptail --gauge "Please wait while stopping the proxy..." 6 65 0
                                whiptail --title "Proxy [-] Management" --msgbox "Proxy stopped successfully!" 8 70
                            ;;
                        esac
                    ;;
                    "3)")
                        # Manual renew certificate if installed
                        source $proxyModule/proxyParser
                        if [ -f "/etc/letsencrypt/live/$proxyIotaHornetUrl/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyIotaInxDashboardUrl/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyShimmerHornetUrl/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyShimmerInxDashboardUrl/fullchain.pem" ]; then
                            if [ "$ufw" = "true" ]; then
                                proxyHttpStatus=$(sudo ufw status)
                                if [[ $proxyHttpStatus != *inactive* ]]; then
                                    proxyHttpPortCheck=$(echo $proxyHttpStatus | grep -E 80/tcp)
                                    if [ -z "$proxyHttpPortCheck" ]; then
                                        sudo ufw allow 80/tcp > /dev/null 2>&1
                                        proxyHttpTmpAllowed=true
                                    fi
                                    unset proxyHttpPortCheck
                                fi
                                unset proxyHttpStatus
                            fi
                            sudo certbot renew --force-renewal
                            if [ "$proxyHttpTmpAllowed" = "true" ]; then
                                sudo ufw delete allow 80/tcp > /dev/null 2>&1
                                unset proxyHttpTmpAllowed
                            fi
                            echo ""
                            echo ""
                            echo "#############################################################"
                            read -p "Press any key to continue..."
                        else
                            whiptail --title "Proxy [-] Management" --msgbox "Error! No SSL Certificates installed!" 8 70
                        fi
                    ;;
                    "4)")
                        if (whiptail --title "Proxy [-] Management" --yesno --defaultno "Do you really want to reset all SSL certificates?" 8 70); then
                            if [ -d "/etc/letsencrypt/archive" ]; then
                                sudo rm -rf /etc/letsencrypt/archive/* > /dev/null 2>&1
                            fi
                            if [ -d "/etc/letsencrypt/live" ]; then
                                sudo rm -rf /etc/letsencrypt/live/* > /dev/null 2>&1
                            fi
                            if [ -d "/etc/letsencrypt/renewal" ]; then
                                sudo rm -rf /etc/letsencrypt/renewal/* > /dev/null 2>&1
                            fi
                            if [ -d "/etc/nginx/sites-enabled" ]; then
                                sudo rm -rf /etc/nginx/sites-enabled/* > /dev/null 2>&1
                            fi
                            whiptail --title "Proxy [-] Management" --msgbox "All SSL certificates successfully reset." 8 70
                        fi
                    ;;
                esac
            done
            exitCode=0
        ;;
        "4)")
            while [ $exitCode -lt 1 ]; do
                CHOICE=$(
                    whiptail --title "Proxy [-] Installer" --menu "\nChoose an option" 24 70 0 \
                    "" "" \
                    "1)" "Install/Deploy The Proxy" \
                    "2)" "Remove The Proxy" 3>&2 2>&1 1>&3
                )
                exitStatus=$?
                if [ "$exitStatus" = "1" ]; then
                    exitCode=1
                fi
                case $CHOICE in
                    "1)")
                        if [ -f "/usr/bin/iota-hornet" ] || [ -f "/usr/bin/shimmer-hornet" ]; then
                            source $swarmConfigs/proxy.cfg
                            if (whiptail --title "Proxy [-] Installer" --yesno --defaultno "Before deploying the proxy, please make sure that the domain and port are set for all nodes to be installed. If you use one domain for multiple nodes, please use different ports.\n\n\nAre you sure you want to continue?" 16 65); then
                                source $proxyModule/proxyDeployment
                                clear
                            fi
                        else
                            whiptail --title "Proxy [-] Installer" --msgbox "No node software found on the system, please install a node first before you can install the proxy." 8 70
                        fi
                    ;;
                    "2)")
                        if (whiptail --title "Proxy [-] Installer" --yesno --defaultno "Do you really want to remove the proxy?" 8 70); then
                            {
                                echo 0
                                if [ "$ufw" = "true" ]; then
                                    source $proxyModule/proxyParser
                                    sudo ufw delete allow 80/tcp > /dev/null 2>&1
                                    sudo ufw delete allow $proxySwarmDashboardPort/tcp > /dev/null 2>&1
                                    sudo ufw delete allow $proxyIotaHornetPort/tcp > /dev/null 2>&1
                                    sudo ufw delete allow $proxyIotaInxDashboardPort/tcp > /dev/null 2>&1
                                    sudo ufw delete allow $proxyShimmerHornetPort/tcp > /dev/null 2>&1
                                    sudo ufw delete allow $proxyShimmerInxDashboardPort/tcp > /dev/null 2>&1
                                fi
                                echo 20
                            } | whiptail --gauge "Please wait while removing the proxy..." 6 65 0
                                sudo apt -qq purge software-properties-common certbot python3-certbot-nginx nginx* -y
                                sudo apt -qq autoremove -y > /dev/null 2>&1
                            {
                                echo 60
                                if [ -d "/etc/nginx" ]; then
                                    sudo rm -rf /etc/nginx > /dev/null 2>&1
                                fi
                                if [ -d "/etc/letsencrypt" ]; then
                                    sudo rm -rf /etc/letsencrypt > /dev/null 2>&1
                                fi
                                sudo sed -i 's/^proxyIotaHornetUrl=.*/proxyIotaHornetUrl=""/' $swarmConfigs/proxy.cfg
                                sudo sed -i 's/^proxyIotaInxDashboardUrl=.*/proxyIotaInxDashboardUrl=""/' $swarmConfigs/proxy.cfg
                                sudo sed -i 's/^proxyShimmerHornetUrl=.*/proxyShimmerHornetUrl=""/' $swarmConfigs/proxy.cfg
                                sudo sed -i 's/^proxyShimmerInxDashboardUrl=.*/proxyShimmerInxDashboardUrl=""/' $swarmConfigs/proxy.cfg
                                echo 100
                                sleep 0.25
                            } | whiptail --gauge "Please wait while removing the proxy..." 6 65 0
                            whiptail --title "Proxy [-] Installer" --msgbox "Proxy removed successfully!" 8 70
                        fi
                    ;;
                esac
            done
            exitCode=0
        ;;
    esac
done
exitCode=0
