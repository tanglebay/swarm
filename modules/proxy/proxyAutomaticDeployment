#!/bin/bash
if [ "$proxyAutomaticDeployment" = "true" ] && [ -f "/usr/sbin/nginx" ]; then
    # LOAD DOMAIN AND PORT
    source $proxyModules/proxyParser

    # TANGLEBAY stuff
    if [ -f "/etc/nginx/tb-lbs.conf" ]; then
        sudo mv /etc/nginx/tb-lbs.conf /etc/nginx/tb-srv.conf
        sudo chmod 644 /etc/nginx/tb-srv.conf
    fi
    if [ ! -f "/etc/nginx/tb-srv.conf" ]; then
        sudo touch /etc/nginx/tb-srv.conf
        sudo chmod 644 /etc/nginx/tb-srv.conf
    fi
    if [ ! -f "/etc/nginx/extended-proxy.conf" ]; then
        sudo touch /etc/nginx/extended-proxy.conf
        sudo chmod 644 /etc/nginx/extended-proxy.conf
    fi

    if [ -f "/etc/letsencrypt/live/$proxyHornetDomain/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyHornetShimmerDomain/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyBeeDomain/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyBeeShimmerDomain/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyGoshimmerDomain/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyWaspDashboardDomain/fullchain.pem" ] || [ -f "/etc/letsencrypt/live/$proxyWaspApiDomain/fullchain.pem" ]; then
        if [ -d "/var/www/html/swarm-dashboard" ]; then
            sudo rm -rf /var/www/html/swarm-dashboard
        fi
        if [ -d "/var/www/html/swarm-nodes" ]; then
            sudo rm -rf /var/www/html/swarm-nodes > /dev/null 2>&1
        fi

        if [ -f "/etc/nginx/sites-available/default > /dev/null 2>&1" ]; then
            sudo rm -rf /etc/nginx/sites-available/default > /dev/null 2>&1
        fi
        sudo rm -rf /etc/nginx/sites-enabled/default /etc/nginx/sites-enabled/hornet* /etc/nginx/sites-enabled/bee* /etc/nginx/sites-enabled/goshimmer /etc/nginx/sites-enabled/wasp* /etc/nginx/sites-enabled/swarm* /etc/nginx/sites-enabled/landing > /dev/null 2>&1
        sudo cp -rf $swarmTemplates/proxy/nginx_default.template /etc/nginx/sites-enabled/default

        #################################################################################################
        if [ -f "/etc/nginx/sites-enabled/swarm-dashboard" ]; then
            sudo rm -rf /etc/nginx/sites-enabled/swarm-dashboard > /dev/null 2>&1
        fi
        #################################################################################################
        if [ -f "/usr/bin/hornet" ] && [ -f "/etc/letsencrypt/live/$proxyHornetDomain/fullchain.pem" ] && [ ! -z "$proxyHornetDomain" ] && [ ! -z "$proxyHornetPort" ]; then
            if [ -z "$defaultDomain" ]; then
                defaultDomain="$proxyHornetDomain"
            fi
            sudo cp -rf $swarmTemplates/proxy/nginx_hornet.template /etc/nginx/sites-enabled/hornet
            sudo sed -i 's/domain.tld/'$proxyHornetDomain'/g' /etc/nginx/sites-enabled/hornet
            sudo sed -i 's/443/'$proxyHornetPort'/g' /etc/nginx/sites-enabled/hornet
            if [ "$ufw" = "true" ]; then
                sudo ufw allow $proxyHornetPort/tcp > /dev/null 2>&1
            fi
        fi
        if [ -f "/usr/bin/hornet-shimmer" ] && [ -f "/etc/letsencrypt/live/$proxyHornetShimmerDomain/fullchain.pem" ] && [ ! -z "$proxyHornetShimmerDomain" ] && [ ! -z "$proxyHornetShimmerPort" ]; then
            if [ -z "$defaultDomain" ]; then
                defaultDomain="$proxyHornetShimmerDomain"
            fi
            sudo cp -rf $swarmTemplates/proxy/nginx_hornet-shimmer.template /etc/nginx/sites-enabled/hornet-shimmer
            sudo sed -i 's/domain.tld/'$proxyHornetShimmerDomain'/g' /etc/nginx/sites-enabled/hornet-shimmer
            sudo sed -i 's/443/'$proxyHornetShimmerPort'/g' /etc/nginx/sites-enabled/hornet-shimmer
            if [ "$ufw" = "true" ]; then
                sudo ufw allow $proxyHornetShimmerPort/tcp > /dev/null 2>&1
            fi
        fi
        if [ -f "/usr/bin/bee" ] && [ -f "/etc/letsencrypt/live/$proxyBeeDomain/fullchain.pem" ] && [ ! -z "$proxyBeeDomain" ] && [ ! -z "$proxyBeePort" ]; then
            if [ -z "$defaultDomain" ]; then
                defaultDomain="$proxyBeeDomain"
            fi
            sudo cp -rf $swarmTemplates/proxy/nginx_bee.template /etc/nginx/sites-enabled/bee
            sudo sed -i 's/domain.tld/'$proxyBeeDomain'/g' /etc/nginx/sites-enabled/bee
            sudo sed -i 's/443/'$proxyBeePort'/g' /etc/nginx/sites-enabled/bee
            if [ "$ufw" = "true" ]; then
                sudo ufw allow $proxyBeePort/tcp > /dev/null 2>&1
            fi
        fi
        if [ -f "/usr/bin/bee-shimmer" ] && [ -f "/etc/letsencrypt/live/$proxyBeeShimmerDomain/fullchain.pem" ] && [ ! -z "$proxyBeeShimmerDomain" ] && [ ! -z "$proxyBeeShimmerPort" ]; then
            if [ -z "$defaultDomain" ]; then
                defaultDomain="$proxyBeeShimmerDomain"
            fi
            sudo cp -rf $swarmTemplates/proxy/nginx_bee-shimmer.template /etc/nginx/sites-enabled/bee-shimmer
            sudo sed -i 's/domain.tld/'$proxyBeeShimmerDomain'/g' /etc/nginx/sites-enabled/bee-shimmer
            sudo sed -i 's/443/'$proxyBeeShimmerPort'/g' /etc/nginx/sites-enabled/bee-shimmer
            if [ "$ufw" = "true" ]; then
                sudo ufw allow $proxyBeeShimmerPort/tcp > /dev/null 2>&1
            fi
        fi
        if [ -f "/usr/bin/goshimmer" ] && [ -f "/etc/letsencrypt/live/$proxyGoshimmerDomain/fullchain.pem" ] && [ ! -z "$proxyGoshimmerDomain" ] && [ ! -z "$proxyGoshimmerPort" ]; then
            source $swarmConfigs/goshimmer.cfg
            if [ -z "$defaultDomain" ]; then
                defaultDomain="$proxyGoshimmerDomain"
            fi
            if [ ! -d "/etc/nginx/goshimmer" ]; then
                sudo mkdir -p /etc/nginx/goshimmer
            fi
            if [ ! -f "/etc/nginx/goshimmer/dashboardauth.conf" ]; then
                sudo echo "" > /etc/nginx/goshimmer/dashboardauth.conf > /dev/null 2>&1
            fi
            if [ ! -f "/etc/nginx/goshimmer/webapiauth.conf" ]; then
                sudo echo "" > /etc/nginx/goshimmer/webapiauth.conf > /dev/null 2>&1
            fi
            sudo cp -rf $swarmTemplates/proxy/nginx_goshimmer.template /etc/nginx/sites-enabled/goshimmer
            sudo sed -i 's/domain.tld/'$proxyGoshimmerDomain'/g' /etc/nginx/sites-enabled/goshimmer
            sudo sed -i 's/443/'$proxyGoshimmerPort'/g' /etc/nginx/sites-enabled/goshimmer
            if [ "$ufw" = "true" ]; then
                sudo ufw allow $proxyGoshimmerPort/tcp > /dev/null 2>&1
            fi
        fi
        if [ -f "/usr/bin/wasp" ] && [ -f "/etc/letsencrypt/live/$proxyWaspDashboardDomain/fullchain.pem" ] && [ ! -z "$proxyWaspDashboardDomain" ] && [ ! -z "$proxyWaspDashboardPort" ]; then
            source $swarmConfigs/wasp.cfg
            if [ -z "$defaultDomain" ]; then
                defaultDomain="$proxyWaspDashboardDomain"
            fi
            sudo cp -rf $swarmTemplates/proxy/nginx_wasp-dashboard.template /etc/nginx/sites-enabled/wasp-dashboard
            sudo sed -i 's/domain.tld/'$proxyWaspDashboardDomain'/g' /etc/nginx/sites-enabled/wasp-dashboard
            sudo sed -i 's/443/'$proxyWaspDashboardPort'/g' /etc/nginx/sites-enabled/wasp-dashboard
            if [ "$ufw" = "true" ]; then
                sudo ufw allow $proxyWaspDashboardPort/tcp > /dev/null 2>&1
            fi
        fi
        if [ -f "/usr/bin/wasp" ] && [ -f "/etc/letsencrypt/live/$proxyWaspApiDomain/fullchain.pem" ] && [ ! -z "$proxyWaspApiDomain" ] && [ ! -z "$proxyWaspApiPort" ]; then
            source $swarmConfigs/wasp.cfg
            if [ -z "$defaultDomain" ]; then
                defaultDomain="$proxyWaspApiDomain"
            fi
            if [ ! -d "/etc/nginx/wasp" ]; then
                sudo mkdir -p /etc/nginx/wasp
            fi
            if [ ! -f "/etc/nginx/wasp/webapiauth.conf" ]; then
                sudo echo "" > /etc/nginx/wasp/webapiauth.conf > /dev/null 2>&1
            fi
            sudo cp -rf $swarmTemplates/proxy/nginx_wasp-api.template /etc/nginx/sites-enabled/wasp-api
            sudo sed -i 's/domain.tld/'$proxyWaspApiDomain'/g' /etc/nginx/sites-enabled/wasp-api
            sudo sed -i 's/443/'$proxyWaspApiPort'/g' /etc/nginx/sites-enabled/wasp-api
            if [ "$ufw" = "true" ]; then
                sudo ufw allow $proxyWaspApiPort/tcp > /dev/null 2>&1
            fi
        fi
        #########################################################################################################################################################################################################
        sudo sed -i 's/# server_tokens off;/server_tokens off;/g' /etc/nginx/nginx.conf
        sudo sed -i 's/# server_names_hash_bucket_size 64;/server_names_hash_bucket_size 64;/g' /etc/nginx/nginx.conf
        sudo sed -i 's/domain.tld/'$defaultDomain'/g' /etc/nginx/sites-enabled/default
        if [ ! -f /etc/nginx/swarm.conf ]; then
            sudo touch /etc/nginx/swarm.conf > /dev/null 2>&1
        fi
        source $proxyModules/proxySwarmEndpoint
        sudo systemctl restart nginx > /dev/null 2>&1
    fi
fi