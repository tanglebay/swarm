#!/bin/bash
source $swarmConfigs/proxy.cfg

source $proxyModules/proxyParser

if [ -f "/usr/sbin/nginx" ]; then
    proxyStatus=$(systemctl show -p ActiveState --value nginx)
    if [ "$proxySwarmEndpoint" = "true" ]; then
        proxySwarmEndpointVersion=$(head -n 1 /etc/nginx/swarm.conf | awk '{ print $3 }')
        proxySwarmEndpointStatus="enabled (v$proxySwarmEndpointVersion)"

    else
        proxySwarmEndpointStatus="disabled"
    fi

    hr="\n\n#############################################################"

    if [ ! -z "$proxyIotaHornetUrl" ] && [ -d "/etc/letsencrypt/live/$proxyIotaHornetDomain" ] && [ -f "/usr/bin/iota-hornet" ] && [ -f "/etc/nginx/sites-enabled/iota-hornet" ]; then
        proxyIotaHornetVersion=$(head -n 1 /etc/nginx/sites-enabled/hornet | awk '{ print $3 }')
        proxyIotaHornetInfo="\n\n${proxyInfoHornetDashboard}Hornet [IOTA] Dashboard/API (v$proxyIotaHornetVersion)\nhttps://$proxyIotaHornetUrl"
    fi
    if [ ! -z "$proxyShimmerHornetUrl" ] && [ -d "/etc/letsencrypt/live/$proxyShimmerHornetDomain" ] && [ -f "/usr/bin/hornet-shimmer" ] && [ -f "/etc/nginx/sites-enabled/hornet-shimmer" ]; then
        proxyShimmerHornetVersion=$(head -n 1 /etc/nginx/sites-enabled/hornet-shimmer | awk '{ print $3 }')
        proxyShimmerHornetInfo="\n\n${proxyInfoShimmerHornetDashboard}Hornet [Shimmer] Dashboard/API (v$proxyShimmerHornetVersion)\nhttps://$proxyShimmerHornetUrl"
    fi
    if [ ! -z "$proxyIotaBeeUrl" ] && [ -d "/etc/letsencrypt/live/$proxyIotaBeeDomain" ] && [ -f "/usr/bin/iota-bee" ] && [ -f "/etc/nginx/sites-enabled/iota-bee" ]; then
        proxyIotaBeeVersion=$(head -n 1 /etc/nginx/sites-enabled/iota-bee | awk '{ print $3 }')
        proxyIotaBeeInfo="\n\n${proxyInfoBeeDashboard}Bee [IOTA] Dashboard/API (v$proxyIotaBeeVersion)\nhttps://$proxyIotaBeeUrl"
    fi
    if [ ! -z "$proxyShimmerBeeUrl" ] && [ -d "/etc/letsencrypt/live/$proxyShimmerBeeDomain" ] && [ -f "/usr/bin/shimmer-bee" ] && [ -f "/etc/nginx/sites-enabled/shimmer-bee" ]; then
        proxyShimmerBeeVersion=$(head -n 1 /etc/nginx/sites-enabled/shimmer-bee | awk '{ print $3 }')
        proxyShimmerBeeInfo="\n\n${proxyInfoShimmerBeeDashboard}Bee [Shimmer] Dashboard/API (v$proxyShimmerBeeVersion)\nhttps://$proxyShimmerBeeUrl"
    fi
    if [ ! -z "$proxyGoshimmerUrl" ] && [ -d "/etc/letsencrypt/live/$proxyGoshimmerDomain" ] && [ -f "/usr/bin/goshimmer" ] && [ -f "/etc/nginx/sites-enabled/goshimmer" ]; then
        proxyGoshimmerVersion=$(head -n 1 /etc/nginx/sites-enabled/goshimmer | awk '{ print $3 }')
        proxyGoshimmerInfo="\n\n${proxyInfoGoshimmerDashboard}GoShimmer Dashboard/API (v$proxyGoshimmerVersion)\nhttps://$proxyGoshimmerUrl"
    fi
    if [ ! -z "$proxyWaspDashboardUrl" ] && [ -d "/etc/letsencrypt/live/$proxyWaspDashboardDomain" ] && [ -f "/usr/bin/wasp" ] && [ -f "/etc/nginx/sites-enabled/wasp-dashboard" ]; then
        proxyWaspDashboardVersion=$(head -n 1 /etc/nginx/sites-enabled/wasp-dashboard | awk '{ print $3 }')
        proxyWaspDashboardInfo="\n\nWASP Dashboard (v$proxyWaspDashboardVersion)\nhttps://$proxyWaspDashboardUrl"
    fi
    if [ ! -z "$proxyWaspApiUrl" ] && [ -d "/etc/letsencrypt/live/$proxyWaspApiDomain" ] && [ -f "/usr/bin/wasp" ] && [ -f "/etc/nginx/sites-enabled/wasp-api" ]; then
        proxyWaspApiVersion=$(head -n 1 /etc/nginx/sites-enabled/wasp-api | awk '{ print $3 }')
        proxyWaspApiInfo="\n\nWASP API (v$proxyWaspApiVersion)\nhttps://$proxyWaspApiUrl"
    fi

    # OUTPUT
    whiptail --scrolltext --title "Proxy Info [v$version]" --msgbox "Webserver: ${proxyStatus}\nSWARM Endpoint: ${proxySwarmEndpointStatus}${hr}${proxyIotaHornetInfo}${proxyShimmerHornetInfo}${proxyIotaBeeInfo}${proxyShimmerBeeInfo}${proxyGoshimmerInfo}${proxyWaspDashboardInfo}${proxyWaspApiInfo}" 24 65
else
    whiptail --title "Proxy Info [v$version]" --msgbox "Reverse proxy not installed!" 8 65
fi
