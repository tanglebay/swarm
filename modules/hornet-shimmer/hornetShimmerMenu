#!/bin/bash

# HORNET MENU
while [ $exitCode -lt 1 ]; do
    clear
    CHOICE=$(
        whiptail --title "Hornet Shimmer - Menu" --menu "\nChoose an option" 20 65 0 \
        "1)" "Hornet Info" \
        "2)" "Hornet Configurations" \
        "3)" "Hornet Management" \
        "4)" "Hornet Installer" 3>&2 2>&1 1>&3
    )
    exitstatus=$?
    if [ "$exitstatus" = "1" ]; then
        exitCode=1
    fi

    case $CHOICE in
        "1)")
            source $hornetShimmerModules/hornetShimmerInfo
        ;;
        "2)")
            while [ $exitCode -lt 1 ]; do
                clear
                CHOICE=$(
                    whiptail --title "Hornet Shimmer - Configuration" --menu "\nChoose an option" 16 65 0 \
                    "1)" "Hornet configuration" \
                    "2)" "Advanced Configuration" 3>&2 2>&1 1>&3
                )

                exitstatus=$?
                if [ "$exitstatus" = "1" ]; then
                    exitCode=1
                fi

                case $CHOICE in
                    "1)")
                        source $hornetShimmerModules/hornetShimmerConfiguration
                    ;;
                    "2)")
                        while [ $exitCode -lt 1 ]; do
                            clear
                            CHOICE=$(
                                whiptail --title "Hornet Shimmer - Configuration" --menu "\nChoose an option" 22 65 0 \
                                "1)" "Peering.json" \
                                "2)" "Mainnet.json" \
                                "3)" "Comnet.json" \
                                "4)" "Devnet.json" \
                                "5)" "Event.json" \
                                "6)" "Hornet-Shimmer.cfg (SWARM)" 3>&2 2>&1 1>&3
                            )

                            exitstatus=$?
                            if [ "$exitstatus" = "1" ]; then
                                exitCode=1
                            fi

                            case $CHOICE in
                                "1)")
                                    sudo $swarmCLEditor $hornetShimmerHome/peering.json
                                    if (whiptail --title "Hornet Shimmer - Configuration" --yesno --defaultno "Would you like to restart hornet now?" 8 65); then
                                        {
                                            echo 0
                                            echo 50
                                            sudo systemctl restart hornet-shimmer
                                            echo 100
                                            sleep 0.25
                                        } | whiptail --gauge "Please wait while Hornet is restarting..." 8 65 0
                                    fi
                                ;;
                                "2)")
                                    sudo $swarmCLEditor $hornetShimmerHome/config.json
                                    if (whiptail --title "Hornet Shimmer - Configuration" --yesno --defaultno "Would you like to restart hornet now?" 8 65); then
                                        {
                                            echo 0
                                            echo 50
                                            sudo systemctl restart hornet-shimmer
                                            echo 100
                                            sleep 0.25
                                        } | whiptail --gauge "Please wait while Hornet is restarting..." 8 65 0
                                    fi
                                ;;
                                "3)")
                                    sudo $swarmCLEditor $hornetShimmerHome/config_comnet.json
                                    if (whiptail --title "Hornet Shimmer - Configuration" --yesno --defaultno "Would you like to restart hornet now?" 8 65); then
                                        {
                                            echo 0
                                            echo 50
                                            sudo systemctl restart hornet-shimmer
                                            echo 100
                                            sleep 0.25
                                        } | whiptail --gauge "Please wait while Hornet is restarting..." 8 65 0
                                    fi
                                ;;
                                "4)")
                                    sudo $swarmCLEditor $hornetShimmerHome/config_devnet.json
                                    if (whiptail --title "Hornet Shimmer - Configuration" --yesno --defaultno "Would you like to restart hornet now?" 8 65); then
                                        {
                                            echo 0
                                            echo 50
                                            sudo systemctl restart hornet-shimmer
                                            echo 100
                                            sleep 0.25
                                        } | whiptail --gauge "Please wait while Hornet is restarting..." 8 65 0
                                    fi
                                ;;
                                "5)")
                                    sudo $swarmCLEditor $swarmConfigs/event.json
                                ;;
                                "6)")
                                    sudo $swarmCLEditor $swarmConfigs/hornet-shimmer.cfg
                                    if (whiptail --title "Hornet Shimmer - Configuration" --yesno --defaultno "Would you like to restart hornet now?" 8 65); then
                                        {
                                            echo 0
                                            source $hornetShimmerModules/hornetShimmerParser
                                            echo 50
                                            sudo systemctl restart hornet-shimmer
                                            echo 100
                                            sleep 0.25
                                        } | whiptail --gauge "Please wait while Hornet is restarting..." 8 65 0
                                    fi
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                esac
            done
            exitCode=0
        ;;
        "3)")
            if [ -f "/usr/bin/hornet-shimmer" ]; then
                while [ $exitCode -lt 1 ]; do
                    clear
                    CHOICE=$(
                        whiptail --title "Hornet Shimmer - Management" --menu "\nChoose your option" 18 65 0 \
                        "1)" "Show Hornet-Shimmer log" \
                        "2)" "Start/Stop Hornet-Shimmer" \
                        "3)" "Event Validation" \
                        "4)" "Reset Hornet-Shimmer event database" \
                        "5)" "Reset Hornet-Shimmer all databases" \
                        "6)" "Reset Hornet-Shimmer config" 3>&2 2>&1 1>&3
                    )
                    exitstatus=$?
                    if [ "$exitstatus" = "1" ]; then
                        exitCode=1
                    fi
                    case $CHOICE in
                        "1)")
                            # Display last 65 lines of log
                            sudo journalctl -fu hornet-shimmer | less -FRSXM
                            clear
                        ;;
                        "2)")
                            CHOICE=$(
                                whiptail --title "Hornet Shimmer - Management" --menu "\nChoose your option" 20 65 0 \
                                "1)" "Restart Hornet" \
                                "2)" "Start Hornet" \
                                "3)" "Stop Hornet" \
                                "4)" "Status Hornet" 3>&2 2>&1 1>&3
                            )
                            case $CHOICE in
                                "1)")
                                    {
                                        echo 0
                                        echo 50
                                        sudo systemctl restart hornet-shimmer
                                        echo 100
                                        sleep 0.25
                                    } | whiptail --gauge "Please wait while Hornet is restarting..." 8 65 0
                                    whiptail --title "Hornet Shimmer - Management" --msgbox "Hornet successfully restarted" 8 65
                                ;;
                                "2)")
                                    {
                                        echo 0
                                        echo 50
                                        sudo systemctl start hornet-shimmer
                                        echo 100
                                        sleep 0.25
                                    } | whiptail --gauge "Please wait while Hornet is starting..." 8 65 0
                                    whiptail --title "Hornet Shimmer - Management" --msgbox "Hornet successfully started" 8 65
                                ;;
                                "3)")
                                    {
                                        echo 0
                                        echo 50
                                        sudo systemctl stop hornet-shimmer
                                        echo 100
                                        sleep 0.25
                                    } | whiptail --gauge "Please wait while Hornet is stopping..." 8 65 0
                                    whiptail --title "Hornet Shimmer - Management" --msgbox "Hornet successfully stopped." 8 65
                                ;;
                                "4)")
                                    hornetShimmerStatus="$(sudo systemctl status hornet-shimmer)"
                                    whiptail --title "Hornet Shimmer - Management" --msgbox "$hornetShimmerStatus" 15 65
                                ;;
                            esac
                        ;;
                        "3)")
                            while [ $exitCode -lt 1 ]; do
                                clear
                                CHOICE=$(
                                    whiptail --title "Hornet-Shimmer - Event Validation" --menu "\nChoose your option" 18 65 0 \
                                    "1)" "Event Validator" \
                                    "2)" "Show latest event results via console" 3>&2 2>&1 1>&3
                                )
                                exitstatus=$?
                                if [ "$exitstatus" = "1" ]; then
                                    exitCode=1
                                fi
                                case $CHOICE in
                                    "1)")
                                        eventId=$(whiptail --inputbox "\nPlease enter the event id you want to validate" 10 65 --title "Hornet-Shimmer - Event Validation" 3>&1 1>&2 2>&3)
                                        exitStatus=$?
                                        if [ $exitStatus != 1 ] && [ ! -z "$eventId" ]; then
                                            nodeId="Hornet-Shimmer"
                                            source $swarmPlugins/shared/eventValidation
                                        fi
                                    ;;
                                    "2)")
                                        if [ -f "$swarmLogs/officialEvent.log" ]; then
                                            clear
                                            echo ""
                                            cat $swarmLogs/officialEvent.log
                                            echo ""
                                            echo ""
                                            read -n 1 -s -r -p "Press any key to continue"
                                        fi
                                    ;;
                                esac
                            done
                            exitCode=0
                        ;;
                        "4)")
                            if (whiptail --title "Hornet Shimmer - Management" --yesno --defaultno "Are you sure you want to delete the hornet event database?" 8 65); then
                                source $swarmConfigs/hornet-shimmer.cfg
                                {
                                    echo 0
                                    echo 25
                                    sudo systemctl stop hornet-shimmer
                                    echo 50
                                    sudo rm -rf $hornetShimmerHome/${hornetNetwork}/database/participation > /dev/null 2>&1
                                    echo 75
                                    sudo systemctl start hornet-shimmer
                                    echo 100
                                    sleep 0.25
                                } | whiptail --gauge "Please wait while the cleanup is running (this may take a while)..." 8 65 0
                                whiptail --title "Hornet Shimmer - Management" --msgbox "Event database successfully reset." 8 65
                            fi
                        ;;
                        "5)")
                            if (whiptail --title "Hornet Shimmer - Management" --yesno --defaultno "Are you sure you want to delete the hornet database?" 8 65); then
                                if (whiptail --title "Hornet Shimmer - Management" --yesno --defaultno "Do you want to use an alternative source for the snapshot?" 8 65); then
                                    hornetShimmerSnapshotSource=$(whiptail --inputbox "\nPlease specify the download url for the full snapshot" 10 65 --title "Hornet-Shimmer - Management" 3>&1 1>&2 2>&3)
                                fi
                                source $swarmConfigs/hornet-shimmer.cfg
                                {
                                    echo 0
                                    echo 25
                                    if [ "$killall" = "true" ]; then
                                        sudo killall -s SIGKILL hornet-shimmer > /dev/null 2>&1
                                    else
                                        sudo systemctl stop hornet-shimmer
                                    fi
                                    echo 50
                                    sudo rm -rf $hornetShimmerHome/${hornetShimmerNetwork}/database $hornetShimmerHome/${hornetShimmerNetwork}/snapshots/*.bin
                                    if [ ! -z "$hornetShimmerSnapshotSource" ]; then
                                        sudo -u hornet wget -q -O $hornetShimmerHome/${hornetShimmerNetwork}/snapshots/full_snapshot.bin $hornetShimmerSnapshotSource
                                    fi
                                    sudo sed -i 's/^hornetShimmerStatusCounter=.*/hornetShimmerStatusCounter=0/' $swarmConfigs/watchdog.cfg
                                    sudo sed -i 's/^hornetShimmerSyncCounter=.*/hornetShimmerSyncCounter=0/' $swarmConfigs/watchdog.cfg
                                    echo 75
                                    sudo systemctl start hornet-shimmer
                                    echo 100
                                    sleep 0.25
                                } | whiptail --gauge "Please wait while the cleanup is running (this may take a while)..." 8 65 0
                                whiptail --title "Hornet Shimmer - Management" --msgbox "${hornetShimmerNetwork}DB successfully reset." 8 65
                            fi
                        ;;
                        "6)")
                            if (whiptail --title "Hornet Shimmer - Management" --yesno --defaultno "Are you sure you want to reset the hornet config file?" 8 65); then
                                source $swarmConfigs/hornet-shimmer.cfg
                                {
                                    echo 0
                                    echo 20
                                    sudo systemctl stop hornet-shimmer
                                    echo 40
                                    if [ "$hornetShimmerNetwork" = "alphanet" ]; then
                                        sudo -u hornet wget -q -O $hornetShimmerHome/config.json https://raw.githubusercontent.com/gohornet/hornet/develop/$hornetShimmerConfig.json
                                    fi
                                    echo 60
                                    source $hornetShimmerModules/hornetShimmerParser
                                    echo 80
                                    sudo systemctl start hornet-shimmer
                                    echo 100
                                    sleep 0.25
                                } | whiptail --gauge "Please wait while the config reset is running (this may take a while)..." 8 65 0
                                whiptail --title "Hornet Shimmer - Debugging" --msgbox "${hornetShimmerNetwork} config successfully reset." 8 65
                            fi
                        ;;
                    esac
                done
                exitCode=0
            else
                whiptail --title "Hornet Shimmer - Debugging" --msgbox "Hornet installation not found, please install Hornet first." 8 65
            fi
        ;;
        "4)")
            while [ $exitCode -lt 1 ]; do
                CHOICE=$(
                    whiptail --title "Hornet Shimmer - Installer" --menu "\nChoose your option" 18 65 0 \
                    "1)" "Update Hornet" \
                    "2)" "Install Hornet" \
                    "3)" "Remove Hornet" 3>&2 2>&1 1>&3
                )

                exitstatus=$?
                if [ "$exitstatus" = "1" ]; then
                    exitCode=1
                fi

                case $CHOICE in
                    "1)")
                        if [ -f "/usr/bin/hornet-shimmer" ]; then
                            if (whiptail --title "Hornet Shimmer - Installer" --yesno --defaultno "Do you really want to update Hornet?" 8 65); then
                                # Update HORNET
                                source $hornetShimmerModules/hornetShimmerVersion
                                if [ "$latestHornetShimmerVersion" != "$hornetShimmerVersion" ]; then
                                    {
                                        echo 0
                                        echo 33
                                        source $hornetShimmerModules/hornetShimmerVersion
                                        echo 66
                                        source $hornetShimmerModules/hornetShimmerInstaller                      
                                        echo 100
                                        sleep 0.5
                                    } | whiptail --gauge "Please wait while Hornet is updated..." 8 65 0
                                    newHornetShimmerVersion=$(/usr/bin/hornet-shimmer -v | awk '{ print $2 }')
                                    if [ "$hornetShimmerVersion" != "$newHornetShimmerVersion" ]; then
                                        {
                                            # CALL MODULE CONFIGPARSER
                                            source $hornetShimmerModules/hornetShimmerParser
                                            sudo systemctl restart hornet-shimmer 2>/dev/null
                                        } | whiptail --gauge "Please wait while parsing the configuration..." 8 65 0
                                    fi
                                    whiptail --title "Hornet Shimmer - Installer" --msgbox "Hornet successfully updated." 8 65
                                else
                                    whiptail --title "Hornet Shimmer - Installer" --msgbox "Congratulations, you have already installed the latest version of Hornet." 8 65
                                fi
                            fi
                        else
                            whiptail --title "Hornet Shimmer - Installer" --msgbox "Sorry, but Hornet is not installed." 8 65
                        fi
                    ;;
                    "2)")
                        if [ -f "/usr/bin/hornet" ] || [ -f "/usr/bin/bee" ] || [ -f "/usr/bin/bee-shimmer" ] || [ -f "/usr/bin/goshimmer" ] || [ -f "/usr/bin/wasp" ]; then
                            if (whiptail --title "Hornet Shimmer - Installer" --yesno --defaultno "Already installed nodes found on the system!\nIt is not recommended to run multiple nodes on one host.\n\nDo you still want to continue?" 12 65); then
                                hornetShimmerSkipInstallation=false
                            else
                                hornetShimmerSkipInstallation=true
                            fi
                        else
                            hornetShimmerSkipInstallation=false
                        fi
                        # INSTALL Hornet-Shimmer
                        if [ ! -f "/usr/bin/hornet-shimmer" ] && [ "$hornetShimmerSkipInstallation" = "false" ]; then
                            {
                                echo 0
                                echo 10
                                source $swarmConfigs/hornet-shimmer.cfg
                                echo 30
                                source $hornetShimmerModules/hornetShimmerVersion
                                echo 40
                                source $hornetShimmerModules/hornetShimmerInstaller
                                echo 50
                                if [ -f "/usr/bin/hornet-shimmer" ]; then
                                    source $swarmConfigs/hornet-shimmer.cfg
                                    echo 60
                                    # CALL MODULE CONFIGPARSER
                                    source $hornetShimmerModules/hornetShimmerParser
                                    echo 70
                                    if [ "$ufw" = "true" ]; then
                                        if [ "$hornetShimmerRunAsEntryNode" != "true" ]; then
                                            sudo ufw allow $hornetShimmerGossipPort/tcp > /dev/null 2>&1
                                        fi
                                        if [[ $hornetShimmerEnablePlugins = *autopeering* ]]; then
                                            sudo ufw allow $hornetShimmerAutopeeringPort/udp > /dev/null 2>&1
                                        fi
                                    fi
                                    sudo systemctl start hornet-shimmer > /dev/null 2>&1
                                    echo 80
                                    sleep 2
                                    hornetShimmerStatus="$(systemctl show -p ActiveState --value hornet-shimmer)"
                                    if [ "$hornetShimmerStatus" != "active" ]; then
                                        sudo systemctl restart hornet-shimmer > /dev/null 2>&1
                                    fi
                                    echo 100
                                fi
                            } | whiptail --gauge "Please wait while installing Hornet-Shimmer..." 8 65 0
                            if [ -f "/usr/bin/hornet-shimmer" ]; then
                                whiptail --title "Hornet-Shimmer - Installer" --msgbox "Hornet-Shimmer installation finished!\n\nYou need to open the following ports for peering\n\nGossip: $hornetShimmerGossipPort/tcp\nAutopeering: $hornetShimmerAutopeeringPort/udp" 15 65
                            else
                                {
                                    echo 0
                                    echo 25
                                    source $swarmConfigs/hornet-shimmer.cfg
                                    echo 50
                                    source $hornetShimmerModules/hornetShimmerRemoval
                                    echo 75
                                    echo 100
                                } | whiptail --gauge "Please wait while the Hornet-Shimmer files are removed...." 8 65 0
                                whiptail --title "Hornet-Shimmer - Installer" --msgbox "Error while installing Hornet-Shimmer! Please try again later." 8 65
                            fi
                        else
                            if [ -f "/usr/bin/hornet-shimmer" ]; then
                                whiptail --title "Hornet-Shimmer - Installer" --msgbox "Hornet-Shimmer already installed." 8 65
                            else
                                if [ "$hornetShimmerSkipInstallation" = "true" ]; then
                                    whiptail --title "Hornet-Shimmer - Installer" --msgbox "Installation of Hornet-Shimmer aborted." 8 65
                                fi
                            fi
                        fi
                        unset hornetShimmerSkipInstallation
                    ;;
                    "3)")
                        if (whiptail --title "Hornet Shimmer - Installer" --yesno --defaultno "Do you really want to remove Hornet?" 8 65); then
                            {
                                echo 0
                                echo 50
                                source $hornetShimmerModules/hornetShimmerRemoval
                                echo 100
                                sleep 0.5
                            } | whiptail --gauge "Please wait while Hornet will be removed..." 8 65 0
                            whiptail --title "Hornet Shimmer - Installer" --msgbox "Hornet successfully removed." 8 65
                        fi
                    ;;
                esac
            done
            exitCode=0
        ;;
    esac
done
exitCode=0
