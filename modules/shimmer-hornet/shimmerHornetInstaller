#!/bin/bash

echo "====== INSTALLATION STARTED ======" > /tmp/shimmerHornetInstaller.log
# General
if ! id hornet >/dev/null 2>&1; then
    echo "-> Create user" >> /tmp/shimmerHornetInstaller.log
    useradd --no-create-home --system hornet >/dev/null
fi

if [ ! -d "$shimmerHornetHome" ]; then
    echo "-> Create home folder" >> /tmp/shimmerHornetInstaller.log
    sudo mkdir -p $shimmerHornetHome > /dev/null 2>&1
    sudo chown -R hornet:hornet $shimmerHornetHome > /dev/null 2>&1
fi

# Install GO
if ! [ -x "$(command -v go)" ] > /dev/null 2>&1; then
    echo "-> Install go via snap" >> /tmp/shimmerHornetInstaller.log
    sudo snap install go --classic > /dev/null 2>&1
fi

# Create Service
if [ ! -f "/lib/systemd/system/shimmer-hornet.service" ]; then
    echo "-> Copy new service file from templates" >> /tmp/shimmerHornetInstaller.log
    sudo cp -rf $swarmTemplates/app-service/shimmer-hornet.service /lib/systemd/system/shimmer-hornet.service > /dev/null 2>&1
    if [ ! -f "/etc/systemd/system/multi-user.target.wants/shimmer-hornet.service" ]; then
        echo "-> Register service" >> /tmp/shimmerHornetInstaller.log
        sudo systemctl enable shimmer-hornet > /dev/null 2>&1
    fi
    sudo systemctl daemon-reload
fi

if [ -f "/etc/default/shimmer-hornet" ]; then
    shimmerHornetServiceDefault=$(cat /etc/default/shimmer-hornet)
    if [[ $shimmerHornetServiceDefault = *config.json* ]]; then
        sudo rm -rf /etc/default/shimmer-hornet > /dev/null 2>&1
    fi
    unset shimmerHornetServiceDefault
fi
if [ ! -f "/etc/default/shimmer-hornet" ]; then
    if [ "$shimmerHornetNetwork" = "mainnet" ]; then
        echo "-> Create OPTIONS file for service" >> /tmp/shimmerHornetInstaller.log
        echo "OPTIONS=\"--config config_mainnet.json\"" > /etc/default/shimmer-hornet
    fi
fi

##############################################################################################################################################

source $swarmModule/swarmAuth
if [ "$swarmAuth" = "200" ]; then
    # Create dir if not exist
    echo "-> Create tmp folder" >> /tmp/shimmerHornetInstaller.log
    sudo mkdir -p /tmp/shimmer-hornet > /dev/null 2>&1

    # Download latest shimmer-hornet
    echo "-> Download archive for v${latestShimmerHornetVersion}" >> /tmp/shimmerHornetInstaller.log
    ( cd /tmp/shimmer-hornet/ ; sudo wget -q https://$cdnUrl/hornet/v${latestShimmerHornetVersion}/hornet-v${latestShimmerHornetVersion}_linux_$osArchitecture.tar.gz )
    if [ -f "/tmp/shimmer-hornet/hornet-v${latestShimmerHornetVersion}_linux_$osArchitecture.tar.gz" ]; then
        shimmerHornetDownloadChecksum=$(sudo shasum -a 512 /tmp/shimmer-hornet/hornet-v${latestShimmerHornetVersion}_linux_$osArchitecture.tar.gz | awk '{ print $1 }')
        echo "-> Generate local checksum: $shimmerHornetDownloadChecksum" >> /tmp/shimmerHornetInstaller.log
    fi

    # Download checksum
    echo "-> Download remote checksum file" >> /tmp/shimmerHornetInstaller.log
    ( cd /tmp/shimmer-hornet/ ; sudo wget -q https://$cdnUrl/hornet/v${latestShimmerHornetVersion}/hornet_checksums_linux_$osArchitecture.txt )
    shimmerHornetChecksum=$(sudo cat /tmp/shimmer-hornet/hornet_checksums_linux_$osArchitecture.txt | awk '{ print $1 }')
    echo $shimmerHornetChecksum > /tmp/shimmer-hornet.checksum
    echo "-> Remote checksum: $shimmerHornetChecksum" >> /tmp/shimmerHornetInstaller.log

    # Unzip archive
    if [ "$shimmerHornetDownloadChecksum" = "$shimmerHornetChecksum" ] && [ ! -z "$shimmerHornetDownloadChecksum" ] && [ ! -z "$shimmerHornetChecksum" ]; then
        echo "-> Unzip archive" >> /tmp/shimmerHornetInstaller.log
        ( cd /tmp/shimmer-hornet ; sudo tar -xzf /tmp/shimmer-hornet/hornet-v${latestShimmerHornetVersion}_linux_$osArchitecture.tar.gz ) > /dev/null 2>&1

        # Copy binary
        if [ -f "/tmp/shimmer-hornet/hornet" ]; then
            shimmerHornetStatus="$(systemctl show -p ActiveState --value shimmer-hornet)"
            if [ "$shimmerHornetStatus" = "active" ]; then
                echo "-> Stop service" >> /tmp/shimmerHornetInstaller.log
                sudo systemctl stop shimmer-hornet > /dev/null 2>&1
            fi

            echo "-> Copy new binary file" >> /tmp/shimmerHornetInstaller.log
            sudo cp -rf /tmp/shimmer-hornet/hornet /usr/bin/shimmer-hornet > /dev/null 2>&1
            sudo chmod +x /usr/bin/shimmer-hornet > /dev/null 2>&1
            newShimmerHornetBinary=true
        fi
    fi
fi


##############################################################################################################################################

if [ "$newShimmerHornetBinary" = "true" ]; then
    ### Mainnet Config
    if [ "$shimmerHornetNetwork" = "mainnet" ]; then
        if [ -f "/tmp/shimmer-hornet/hornet-${latestShimmerHornetVersion}_Linux_$osArchitecture/config_defaults.json" ]; then
            echo "-> Copy new config file" >> /tmp/shimmerHornetInstaller.log
            sudo cp -rf /tmp/shimmer-hornet/hornet-${latestShimmerHornetVersion}_Linux_$osArchitecture/config_defaults.json $shimmerHornetHome/config_mainnet.json > /dev/null 2>&1
            if [ -s "$shimmerHornetHome/config_mainnet.json" ]; then
                newShimmerHornetConfig=true
            fi
        fi
    fi
fi

##############################################################################################################################################

if [ "$newShimmerHornetConfig" = "true" ]; then
    # Run installer modules
    echo "-> Set permissions" >> /tmp/shimmerHornetInstaller.log
    sudo chown -R hornet:hornet $shimmerHornetHome > /dev/null 2>&1
    sudo chmod 644 $shimmerHornetHome/*.json > /dev/null 2>&1

    restartShimmerHornet=true
    shimmerHornetUpdated=true
fi

# Remove temporary files
echo "-> Remove tmp folder" >> /tmp/shimmerHornetInstaller.log
sudo rm -rf /tmp/shimmer-hornet > /dev/null 2>&1

echo "====== INSTALLATION FINISHED ======" >> /tmp/shimmerHornetInstaller.log
unset newShimmerHornetBinary newShimmerHornetConfig shimmerHornetDownloadChecksum