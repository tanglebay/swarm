#!/bin/bash

# HORNET MENU
while [ $exitCode -lt 1 ]; do
    source $swarmConfigs/shimmer-hornet.cfg
    clear
    CHOICE=$(
        whiptail --title "Hornet [SHIMMER] Menu" --menu "\nChoose an option" 24 70 0 \
        "" "" \
        "1)" "Hornet Info" \
        "2)" "Hornet Configuration" \
        "3)" "Hornet Management" \
        "4)" "Hornet Installer" 3>&2 2>&1 1>&3
    )
    exitstatus=$?
    if [ "$exitstatus" = "1" ]; then
        exitCode=1
    fi

    case $CHOICE in
        "1)")
            source $shimmerHornetModule/shimmerHornetInfo
        ;;
        "2)")
            while [ $exitCode -lt 1 ]; do
                clear
                CHOICE=$(
                    whiptail --title "Hornet [SHIMMER] Configuration" --menu "\nChoose an option" 24 70 0 \
                    "" "" \
                    "1)" "Hornet Configuration" \
                    "2)" "Advanced Configuration" 3>&2 2>&1 1>&3
                )

                exitstatus=$?
                if [ "$exitstatus" = "1" ]; then
                    exitCode=1
                fi

                case $CHOICE in
                    "1)")
                        source $shimmerHornetModule/shimmerHornetConfiguration
                    ;;
                    "2)")
                        while [ $exitCode -lt 1 ]; do
                            clear
                            CHOICE=$(
                                whiptail --title "Hornet [SHIMMER] Configuration" --menu "\nChoose an option" 24 70 0 \
                                "" "" \
                                "1)" "Peering.json" \
                                "2)" "Config_Mainnet.json" \
                                "3)" "Shimmer-Hornet.cfg (SWARM)" 3>&2 2>&1 1>&3
                            )

                            exitstatus=$?
                            if [ "$exitstatus" = "1" ]; then
                                exitCode=1
                            fi

                            case $CHOICE in
                                "1)")
                                    sudo $swarmCLEditor $shimmerHornetHome/peering.json
                                    if (whiptail --title "Hornet [SHIMMER] Configuration" --yesno --defaultno "Would you like to restart [Shimmer] Hornet now? (INX apps start delayed)" 8 70); then
                                        if [ ! -f "/tmp/shimmer-hornet.lock" ]; then
                                            sudo touch /tmp/shimmer-hornet.lock > /dev/null 2>&1
                                        fi
                                        {
                                            echo 0
                                            echo 33
                                            source $shimmerInxModule/shimmerInxAppStop
                                            echo 66
                                            sudo systemctl restart shimmer-hornet > /dev/null 2>&1
                                            echo 100
                                            sleep 0.25
                                        } | whiptail --gauge "Please wait while [Shimmer] Hornet is restarting..." 8 70 0
                                        bash $shimmerInxModule/shimmerInxAppStart &
                                        if [ -f "/tmp/shimmer-hornet.lock" ]; then
                                            sudo rm -rf /tmp/shimmer-hornet.lock > /dev/null 2>&1
                                        fi
                                    fi
                                ;;
                                "2)")
                                    sudo $swarmCLEditor $shimmerHornetHome/config_mainnet.json
                                    if [ -f "/usr/bin/shimmer-hornet" ]; then
                                        if (whiptail --title "Hornet [SHIMMER] Configuration" --yesno --defaultno "Would you like to restart [Shimmer] Hornet now? (INX apps start delayed)" 8 70); then
                                            if [ ! -f "/tmp/shimmer-hornet.lock" ]; then
                                                sudo touch /tmp/shimmer-hornet.lock > /dev/null 2>&1
                                            fi
                                            {
                                                echo 0
                                                echo 33
                                                source $shimmerInxModule/shimmerInxAppStop
                                                echo 66
                                                sudo systemctl restart shimmer-hornet > /dev/null 2>&1
                                                echo 100
                                            } | whiptail --gauge "Please wait while [Shimmer] Hornet is restarting..." 8 70 0
                                            bash $shimmerInxModule/shimmerInxAppStart &
                                            if [ -f "/tmp/shimmer-hornet.lock" ]; then
                                                sudo rm -rf /tmp/shimmer-hornet.lock > /dev/null 2>&1
                                            fi
                                        fi
                                    fi
                                ;;
                                "3)")
                                    sudo $swarmCLEditor $swarmConfigs/shimmer-hornet.cfg
                                    if [ -f "/usr/bin/shimmer-hornet" ]; then
                                        if (whiptail --title "Hornet [SHIMMER] Configuration" --yesno --defaultno "Would you like to restart [Shimmer] Hornet now? (INX apps start delayed)" 8 70); then
                                            if [ ! -f "/tmp/shimmer-hornet.lock" ]; then
                                                sudo touch /tmp/shimmer-hornet.lock > /dev/null 2>&1
                                            fi
                                            {
                                                echo 0
                                                echo 25
                                                source $shimmerHornetModule/shimmerHornetParser
                                                echo 50
                                                source $shimmerInxModule/shimmerInxAppStop
                                                echo 75
                                                sudo systemctl restart shimmer-hornet > /dev/null 2>&1
                                                echo 100
                                            } | whiptail --gauge "Please wait while [Shimmer] Hornet is restarting..." 8 70 0
                                            bash $shimmerInxModule/shimmerInxAppStart &
                                            if [ -f "/tmp/shimmer-hornet.lock" ]; then
                                                sudo rm -rf /tmp/shimmer-hornet.lock > /dev/null 2>&1
                                            fi
                                        fi
                                    fi
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                esac
            done
            exitCode=0
        ;;
        "3)")
            if [ -f "/usr/bin/shimmer-hornet" ]; then
                while [ $exitCode -lt 1 ]; do
                    clear
                    CHOICE=$(
                        whiptail --title "Hornet [SHIMMER] Management" --menu "\nChoose your option" 24 70 0 \
                        "" "" \
                        "1)" "Hornet Log" \
                        "2)" "Start/Stop Hornet" \
                        "3)" "Reset Hornet All Databases" \
                        "4)" "Reset Hornet Config" 3>&2 2>&1 1>&3
                    )
                    exitstatus=$?
                    if [ "$exitstatus" = "1" ]; then
                        exitCode=1
                    fi
                    case $CHOICE in
                        "1)")
                            while [ $exitCode -lt 1 ]; do
                                clear
                                CHOICE=$(
                                    whiptail --title "Hornet [SHIMMER] Management" --menu "\nChoose your option" 24 70 0 \
                                    "" "" \
                                    "1)" "Show Live Log" \
                                    "2)" "Show Latest PANIC" 3>&2 2>&1 1>&3
                                )
                                exitstatus=$?
                                if [ "$exitstatus" = "1" ]; then
                                    exitCode=1
                                fi
                                case $CHOICE in
                                    "1)")
                                        sudo journalctl -fu shimmer-hornet
                                    ;;
                                    "2)")
                                        appLogDepth=10000
                                        appLogDepth=$(whiptail --inputbox "\nPlease enter a higher depth if no PANIC was found (this may take longer)" 10 65 "$appLogDepth" --title "Hornet [SHIMMER] Management" 3>&1 1>&2 2>&3)
                                        exitstatus=$?
                                        if [ "$exitstatus" != "1" ] && [ $appLogDepth -eq $appLogDepth ] 2>/dev/null; then
                                            echo ""
                                            echo "Please wait while the log is searched for a PANIC..."
                                            echo ""
                                            echo ""
                                            sudo journalctl -u shimmer-hornet -n $appLogDepth | grep --color=always -A 9 -e PANIC | tail -n 10
                                            echo ""
                                            echo ""
                                            read -rsn1 -p "Press any key to exit."
                                        fi
                                        unset appLogDepth
                                    ;;
                                esac
                            done
                            exitCode=0
                        ;;
                        "2)")
                            while [ $exitCode -lt 1 ]; do
                                CHOICE=$(
                                    whiptail --title "Hornet [SHIMMER] Management" --menu "\nChoose your option" 24 70 0 \
                                    "" "" \
                                    "1)" "Restart Hornet" \
                                    "2)" "Start Hornet" \
                                    "3)" "Stop Hornet" \
                                    "4)" "Status Hornet" 3>&2 2>&1 1>&3
                                )
                                exitStatus=$?
                                if [ "$exitStatus" = "1" ]; then
                                    exitCode=1
                                fi
                                case $CHOICE in
                                    "1)")
                                        if [ ! -f "/tmp/shimmer-hornet.lock" ]; then
                                            sudo touch /tmp/shimmer-hornet.lock > /dev/null 2>&1
                                        fi
                                        {
                                            echo 0
                                            echo 33
                                            source $shimmerInxModule/shimmerInxAppStop
                                            echo 66
                                            sudo systemctl restart shimmer-hornet > /dev/null 2>&1
                                            echo 100
                                        } | whiptail --gauge "Please wait while [Shimmer] Hornet is restarting..." 8 70 0
                                        bash $shimmerInxModule/shimmerInxAppStart &
                                        if [ -f "/tmp/shimmer-hornet.lock" ]; then
                                            sudo rm -rf /tmp/shimmer-hornet.lock > /dev/null 2>&1
                                        fi
                                        whiptail --title "Hornet [SHIMMER] Management" --msgbox "[Shimmer] Hornet successfully restarted (INX apps start delayed)." 8 70
                                    ;;
                                    "2)")
                                        {
                                            echo 0
                                            echo 50
                                            sudo systemctl start shimmer-hornet > /dev/null 2>&1
                                            echo 100
                                        } | whiptail --gauge "Please wait while [Shimmer] Hornet is starting..." 8 70 0
                                        bash $shimmerInxModule/shimmerInxAppStart &
                                        if [ -f "/tmp/shimmer-hornet.lock" ]; then
                                            sudo rm -rf /tmp/shimmer-hornet.lock > /dev/null 2>&1
                                        fi
                                        whiptail --title "Hornet [SHIMMER] Management" --msgbox "[Shimmer] Hornet successfully started (INX apps start delayed)." 8 70
                                    ;;
                                    "3)")
                                        if [ ! -f "/tmp/shimmer-hornet.lock" ]; then
                                            sudo touch /tmp/shimmer-hornet.lock > /dev/null 2>&1
                                        fi
                                        {
                                            echo 0
                                            source $shimmerInxModule/shimmerInxAppStop
                                            echo 50
                                            sudo systemctl stop shimmer-hornet > /dev/null 2>&1
                                        } | whiptail --gauge "Please wait while [Shimmer] Hornet is stopping..." 8 70 0
                                        whiptail --title "Hornet [SHIMMER] Management" --msgbox "[Shimmer] Hornet successfully stopped." 8 70
                                    ;;
                                    "4)")
                                        shimmerHornetStatus="$(sudo systemctl status shimmer-hornet)"
                                        whiptail --title "Hornet [SHIMMER] Management" --msgbox "$shimmerHornetStatus" 15 65
                                    ;;
                                esac
                            done
                            exitCode=0
                        ;;
                        "3)")
                            if (whiptail --title "Hornet [SHIMMER] Management" --yesno --defaultno "Are you sure you want to delete the [Shimmer] Hornet database?" 8 70); then
                                source $shimmerHornetModule/shimmerHornetMenuSnapshots
                                if [ "$exitstatus" != "1" ]; then
                                    source $swarmConfigs/shimmer-hornet.cfg
                                    if [ ! -f "/tmp/shimmer-hornet.lock" ]; then
                                        sudo touch /tmp/shimmer-hornet.lock > /dev/null 2>&1
                                    fi
                                    {
                                        echo 0
                                        echo 20
                                        source $shimmerInxModule/shimmerInxAppStop
                                        echo 40
                                        if [ "$killall" = "true" ]; then
                                            sudo killall -s SIGKILL shimmer-hornet > /dev/null 2>&1
                                        else
                                            sudo systemctl stop shimmer-hornet > /dev/null 2>&1
                                        fi
                                        echo 60
                                        sudo rm -rf $shimmerHornetHome/${shimmerHornetNetwork}/database $shimmerHornetHome/${shimmerHornetNetwork}/snapshots/*.bin > /dev/null 2>&1
                                        if [ ! -z "$shimmerHornetSnapshotSource" ]; then
                                            if [ ! -d "$shimmerHornetHome/${shimmerHornetNetwork}/snapshots" ]; then
                                                sudo -u hornet mkdir -p $shimmerHornetHome/${shimmerHornetNetwork}/snapshots > /dev/null 2>&1
                                            fi
                                            sudo -u hornet wget -q -O $shimmerHornetHome/${shimmerHornetNetwork}/snapshots/full_snapshot.bin $shimmerHornetSnapshotSource
                                        fi
                                        sudo sed -i 's/^shimmerHornetStatusCounter=.*/shimmerHornetStatusCounter=0/' $swarmConfigs/watchdog.cfg
                                        sudo sed -i 's/^shimmerHornetSyncCounter=.*/shimmerHornetSyncCounter=0/' $swarmConfigs/watchdog.cfg
                                        echo 80
                                        sudo systemctl start shimmer-hornet > /dev/null 2>&1
                                        echo 100
                                    } | whiptail --gauge "Please wait while the [Shimmer] Hornet cleanup is running (this may take a while)..." 8 70 0
                                    bash $shimmerInxModule/shimmerInxAppStart &
                                    if [ -f "/tmp/shimmer-hornet.lock" ]; then
                                        sudo rm -rf /tmp/shimmer-hornet.lock > /dev/null 2>&1
                                    fi
                                    whiptail --title "Hornet [SHIMMER] Management" --msgbox "[Shimmer] Hornet ${shimmerHornetNetwork}DB successfully reset. (INX apps start delayed)" 8 70
                                fi
                            fi
                        ;;
                        "4)")
                            if (whiptail --title "Hornet [SHIMMER] Management" --yesno --defaultno "Are you sure you want to reset the [Shimmer] Hornet config file?" 8 70); then
                                source $swarmConfigs/shimmer-hornet.cfg
                                source $shimmerHornetModule/shimmerHornetConfigs
                                if [ ! -f "/tmp/shimmer-hornet.lock" ]; then
                                    sudo touch /tmp/shimmer-hornet.lock > /dev/null 2>&1
                                fi
                                {
                                    echo 0
                                    echo 20
                                    source $shimmerInxModule/shimmerInxAppStop
                                    echo 40
                                    sudo systemctl stop shimmer-hornet > /dev/null 2>&1
                                    echo 60
                                    sudo -u hornet wget -q -O $shimmerHornetHome/$shimmerHornetConfig.json https://raw.githubusercontent.com/iotaledger/hornet/production/config_shimmer.json
                                    source $shimmerHornetModule/shimmerHornetParser
                                    echo 80
                                    sudo systemctl start shimmer-hornet > /dev/null 2>&1
                                    echo 100
                                } | whiptail --gauge "Please wait while the [Shimmer] Hornet config reset is running (this may take a while)..." 8 70 0
                                bash $shimmerInxModule/shimmerInxAppStart &
                                if [ -f "/tmp/shimmer-hornet.lock" ]; then
                                    sudo rm -rf /tmp/shimmer-hornet.lock > /dev/null 2>&1
                                fi
                                whiptail --title "Hornet [SHIMMER] Management" --msgbox "[Shimmer] Hornet ${shimmerHornetNetwork} config successfully reset. (INX apps start delayed)" 8 70
                            fi
                        ;;
                    esac
                done
                exitCode=0
            else
                whiptail --title "Hornet [SHIMMER] Management" --msgbox "[Shimmer] Hornet installation not found, please install [Shimmer] Hornet first." 8 70
            fi
        ;;
        "4)")
            while [ $exitCode -lt 1 ]; do
                CHOICE=$(
                    whiptail --title "Hornet [SHIMMER] Installer" --menu "\nChoose your option" 24 70 0 \
                    "" "" \
                    "1)" "Update Hornet" \
                    "2)" "Install Hornet" \
                    "3)" "Remove Hornet" 3>&2 2>&1 1>&3
                )

                exitstatus=$?
                if [ "$exitstatus" = "1" ]; then
                    exitCode=1
                fi

                case $CHOICE in
                    "1)")
                        if [ -f "/usr/bin/shimmer-hornet" ]; then
                            if (whiptail --title "Hornet [SHIMMER] Installer" --yesno --defaultno "Do you really want to update [Shimmer] Hornet?" 8 70); then
                                if [ ! -f "/tmp/watchdog_shimmer-hornet.lock" ]; then
                                    # Update HORNET
                                    source $shimmerHornetModule/shimmerHornetVersion
                                    if [ ! -z "$latestShimmerHornetVersion" ]; then
                                        if [ ! -f "/tmp/shimmer-hornet.lock" ]; then
                                            sudo touch /tmp/shimmer-hornet.lock > /dev/null 2>&1
                                        fi
                                        {
                                            echo 0
                                            echo 33
                                            source $shimmerHornetModule/shimmerHornetVersion
                                            echo 66
                                            source $shimmerHornetModule/shimmerHornetInstaller                      
                                            echo 100
                                            sleep 0.5
                                        } | whiptail --gauge "Please wait while [Shimmer] Hornet is updated..." 8 70 0
                                        {
                                            # CALL MODULE CONFIGPARSER
                                            echo 0
                                            echo 25
                                            source $shimmerHornetModule/shimmerHornetParser
                                            echo 50
                                            source $shimmerInxModule/shimmerInxAppStop
                                            echo 75
                                            sudo systemctl restart shimmer-hornet 2>/dev/null
                                            echo 100
                                        } | whiptail --gauge "Please wait while parsing the [Shimmer] Hornet configuration..." 8 70 0
                                        bash $shimmerInxModule/shimmerInxAppStart &
                                        shimmerHornetChecksum=$(cat /tmp/shimmer-hornet.checksum 2>/dev/null)
                                        whiptail --title "Hornet [SHIMMER] Installer" --msgbox "[Shimmer] Hornet successfully updated. (INX apps start delayed)\n\nChecksum: $shimmerHornetChecksum" 10 65
                                        if [ -f "/tmp/shimmer-hornet.checksum" ]; then
                                            sudo rm -rf /tmp/shimmer-hornet.checksum > /dev/null 2>&1
                                            unset shimmerHornetChecksum
                                        fi
                                        if [ -f "/tmp/shimmer-hornet.lock" ]; then
                                            sudo rm -rf /tmp/shimmer-hornet.lock > /dev/null 2>&1
                                        fi
                                    else
                                        whiptail --title "Hornet [SHIMMER] Installer" --msgbox "Sorry, but [Shimmer] Hornet update aborted." 10 65
                                    fi
                                else
                                    whiptail --title "Hornet [SHIMMER] Installer" --msgbox "Aborted - [Shimmer] Hornet is currently locked by Watchdog, please try again." 8 70
                                fi
                            fi
                        else
                            whiptail --title "Hornet [SHIMMER] Installer" --msgbox "Sorry, but [Shimmer] Hornet is not installed." 8 70
                        fi
                    ;;
                    "2)")
                        if [ -f "/usr/bin/iota-hornet" ]; then
                            if (whiptail --title "Hornet [SHIMMER] Installer" --yesno --defaultno "Already installed apps found on the system!\nIt is not recommended to run multiple apps on one host.\n\nDo you still want to continue?" 12 65); then
                                shimmerHornetSkipInstallation=false
                            else
                                shimmerHornetSkipInstallation=true
                            fi
                        else
                            shimmerHornetSkipInstallation=false
                        fi
                        # INSTALL Hornet
                        if [ ! -f "/usr/bin/shimmer-hornet" ] && [ "$shimmerHornetSkipInstallation" = "false" ]; then
                            if [ ! -f "/tmp/watchdog_shimmer-hornet.lock" ]; then
                                if [ ! -f "/tmp/shimmer-hornet.lock" ]; then
                                    sudo touch /tmp/shimmer-hornet.lock > /dev/null 2>&1
                                fi
                                source $swarmConfigs/shimmer-hornet.cfg
                                source $shimmerHornetModule/shimmerHornetConfigs
                                source $shimmerHornetModule/shimmerHornetVersion
                                {
                                    echo 0
                                    echo 10
                                    echo 30
                                    source $shimmerHornetModule/shimmerHornetInstaller
                                    echo 50
                                    if [ -f "/usr/bin/shimmer-hornet" ]; then
                                        source $swarmConfigs/shimmer-hornet.cfg
                                        echo 60
                                        # CALL MODULE CONFIGPARSER
                                        source $shimmerHornetModule/shimmerHornetParser
                                        echo 70
                                        if [ "$ufw" = "true" ]; then
                                            if [ "$shimmerHornetRunAsEntryNode" != "true" ]; then
                                                sudo ufw allow $shimmerHornetGossipPort/tcp > /dev/null 2>&1
                                            fi
                                            if [ "$shimmerHornetAutopeeringEnabled" = "true" ]; then
                                                sudo ufw allow $shimmerHornetAutopeeringPort/udp > /dev/null 2>&1
                                            fi
                                        fi
                                        sudo systemctl start shimmer-hornet > /dev/null 2>&1
                                        echo 80
                                        sleep 2
                                        shimmerHornetStatus="$(systemctl show -p ActiveState --value shimmer-hornet)"
                                        if [ "$shimmerHornetStatus" != "active" ]; then
                                            sudo systemctl restart shimmer-hornet > /dev/null 2>&1
                                        fi
                                        echo 100
                                    fi
                                } | whiptail --gauge "Please wait while installing [Shimmer] Hornet..." 8 70 0
                                if [ -f "/usr/bin/shimmer-hornet" ]; then
                                    if [ -f "/tmp/shimmer-hornet.checksum" ]; then
                                        shimmerHornetChecksum=$(cat /tmp/shimmer-hornet.checksum)
                                    fi
                                    if [ "$shimmerHornetAutopeeringEnabled" = "true" ]; then
                                        shimmerHornetAutopeeringPortInfo="\nAutopeering: $shimmerHornetAutopeeringPort/udp"
                                    fi
                                    whiptail --title "Hornet [SHIMMER] Installer" --msgbox "[Shimmer] Hornet installation finished!\n\nYou need to open the following ports for peering\n\nGossip: $shimmerHornetGossipPort/tcp$shimmerHornetAutopeeringPortInfo\n\nChecksum: $shimmerHornetChecksum" 17 65
                                    if [ -f "/tmp/shimmer-hornet.checksum" ]; then
                                        sudo rm -rf /tmp/shimmer-hornet.checksum > /dev/null 2>&1
                                    fi
                                    if (whiptail --title "Proxy [SHIMMER] Hornet" --yesno --defaultno "Do you want to set up the proxy with the installation?" 8 70); then
                                        source $swarmConfigs/proxy.cfg
                                        if [ -z "$proxyShimmerHornetUrl" ]; then
                                            proxyUrl="example.com:443"
                                            proxyUrl=$(whiptail --inputbox "\nSet your domain and port for [Shimmer] Hornet" 10 65 "$proxyUrl" --title "Proxy [SHIMMER] Hornet" 3>&1 1>&2 2>&3)
                                            exitStatus=$?
                                            if [ "$proxyUrl" = "my.example.com:443" ]; then
                                                unset proxyUrl
                                            fi
                                            if [ "$exitStatus" != "1" ]; then
                                                source $proxyModule/proxyUrlValidation
                                                if [ "$proxyUrlValid" = "true" ]; then
                                                    proxyShimmerHornetUrl=$proxyUrl
                                                    sudo sed -i 's/^proxyShimmerHornetUrl=.*/proxyShimmerHornetUrl="'$proxyUrl'"/' $swarmConfigs/proxy.cfg
                                                    source $proxyModule/proxyDeployment
                                                fi
                                            fi
                                            unset proxyUrl proxyUrlValid
                                        else
                                            proxyUrl=$proxyShimmerHornetUrl
                                            source $proxyModule/proxyUrlValidation
                                            if [ "$proxyUrlValid" = "true" ]; then
                                                source $proxyModule/proxyDeployment
                                            fi
                                            unset proxyUrl proxyUrlValid
                                        fi
                                    fi
                                else
                                    {
                                        echo 0
                                        echo 25
                                        source $swarmConfigs/shimmer-hornet.cfg
                                        echo 50
                                        source $shimmerHornetModule/shimmerHornetRemoval
                                        echo 75
                                        echo 100
                                    } | whiptail --gauge "Please wait while the [Shimmer] Hornet files are removed..." 8 70 0
                                    whiptail --title "Hornet [SHIMMER] Installer" --msgbox "Error while installing [Shimmer] Hornet! Please try again later." 8 70
                                fi
                                if [ -f "/tmp/shimmer-hornet.lock" ]; then
                                    sudo rm -rf /tmp/shimmer-hornet.lock > /dev/null 2>&1
                                fi
                            else
                                whiptail --title "Hornet [SHIMMER] Installer" --msgbox "Aborted - [Shimmer] Hornet is currently locked by Watchdog, please try again." 8 70
                            fi
                        else
                            if [ -f "/usr/bin/shimmer-hornet" ]; then
                                whiptail --title "Hornet [SHIMMER] Installer" --msgbox "[Shimmer] Hornet already installed." 8 70
                            else
                                if [ "$shimmerHornetSkipInstallation" = "true" ]; then
                                    whiptail --title "Hornet [SHIMMER] Installer" --msgbox "Installation of [Shimmer] Hornet aborted." 8 70
                                fi
                            fi
                        fi
                        unset shimmerHornetSkipInstallation shimmerHornetChecksum
                    ;;
                    "3)")
                        if (whiptail --title "Hornet [SHIMMER] Installer" --yesno --defaultno "Do you really want to remove [Shimmer] Hornet?" 8 70); then
                            {
                                echo 0
                                shimmerHornetRemoval=true
                                echo 50
                                source $shimmerHornetModule/shimmerHornetRemoval
                                echo 100
                                sleep 0.5
                            } | whiptail --gauge "Please wait while [Shimmer] Hornet will be removed..." 8 70 0
                            whiptail --title "Hornet [SHIMMER] Installer" --msgbox "[Shimmer] Hornet successfully removed." 8 70

                            if [ ! -f "/usr/bin/shimmer-hornet" ]; then
                                if (whiptail --title "Hornet [SHIMMER] Installer" --yesno --defaultno "Do you also want to remove all installed [Shimmer] INX plugins?" 8 70); then
                                    nmbCounter=0
                                    {
                                        echo $nmbCounter
                                        for shimmerInxPlugin in ${shimmerInxPlugins[@]}
                                        do
                                            if [ -f "/usr/bin/shimmer-inx-$shimmerInxPlugin" ]; then
                                                source $shimmerInxModule/shimmer-inx-$shimmerInxPlugin/shimmerInx${shimmerInxPlugin}Removal
                                            fi
                                            let nmbCounter=$nmbCounter+10
                                            echo $nmbCounter
                                        done
                                    } | whiptail --gauge "Please wait while [Shimmer] INX plugins will be removed..." 8 70 0
                                    unset nmbCounter
                                    whiptail --title "Hornet [SHIMMER] Installer" --msgbox "[Shimmer] INX plugins successfully removed." 8 70
                                fi
                            fi
                        fi
                    ;;
                esac
            done
            exitCode=0
        ;;
    esac
done
exitCode=0
