#!/bin/bash
# GoShimmer MENU
while [ $exitCode -lt 1 ]; do
    source $swarmConfigs/goshimmer.cfg
    clear
    CHOICE=$(
        whiptail --title "GoShimmer - Menu" --menu "\nChoose an option" 24 65 0 \
        "1)" "GoShimmer Info" \
        "2)" "GoShimmer Configurations" \
        "3)" "GoShimmer Debugging" \
        "4)" "GoShimmer Installer" 3>&2 2>&1 1>&3
    )
    exitstatus=$?
    if [ "$exitstatus" = "1" ]; then
        exitCode=1
    fi

    case $CHOICE in
        "1)")
            source $goshimmerModules/goshimmerInfo
        ;;
        "2)")
            while [ $exitCode -lt 1 ]; do
                clear
                CHOICE=$(
                    whiptail --title "GoShimmer - Configuration" --menu "\nChoose an option" 24 65 0 \
                    "1)" "GoShimmer configuration" \
                    "2)" "Advanced Configuration" 3>&2 2>&1 1>&3
                )

                exitstatus=$?
                if [ "$exitstatus" = "1" ]; then
                    exitCode=1
                fi

                case $CHOICE in
                    "1)")
                        source $goshimmerModules/goshimmerConfiguration
                    ;;
                    "2)")
                        while [ $exitCode -lt 1 ]; do
                            clear
                            CHOICE=$(
                                whiptail --title "GoShimmer - Configuration" --menu "\nChoose an option" 24 65 0 \
                                "1)" "Config.json" \
                                "2)" "GoShimmer.cfg (SWARM)" 3>&2 2>&1 1>&3
                            )

                            exitstatus=$?
                            if [ "$exitstatus" = "1" ]; then
                                exitCode=1
                            fi

                            case $CHOICE in
                                "1)")
                                    sudo $swarmCLEditor $goshimmerHome/config.json
                                    if (whiptail --title "GoShimmer - Configuration" --yesno --defaultno "Would you like to restart GoShimmer now?" 8 65); then
                                        {
                                            echo 0
                                            echo 50
                                            sudo systemctl restart goshimmer > /dev/null 2>&1
                                            echo 100
                                            sleep 0.25
                                        } | whiptail --gauge "Please wait while GoShimmer is restarting..." 8 65 0
                                    fi
                                ;;
                                "2)")
                                    sudo $swarmCLEditor $swarmConfigs/goshimmer.cfg
                                    if (whiptail --title "GoShimmer - Configuration" --yesno --defaultno "Would you like to restart GoShimmer now?" 8 65); then
                                        {
                                            echo 0
                                            source $goshimmerModules/goshimmerParser
                                            echo 50
                                            sudo systemctl restart goshimmer > /dev/null 2>&1
                                            echo 100
                                            sleep 0.25
                                        } | whiptail --gauge "Please wait while GoShimmer is restarting..." 8 65 0
                                    fi
                                ;;
                            esac
                        done
                        exitCode=0
                    ;;
                esac
            done
            exitCode=0
        ;;
        "3)")
            if [ -f "/usr/bin/goshimmer" ]; then
                while [ $exitCode -lt 1 ]; do
                    CHOICE=$(
                        whiptail --title "GoShimmer Debugging" --menu "\nChoose your option" 24 65 0 \
                        "1)" "Show GoShimmer log" \
                        "2)" "Start/Stop GoShimmer" \
                        "3)" "Reset GoShimmer Database" \
                        "4)" "Reset GoShimmer Config" 3>&2 2>&1 1>&3
                    )
                    exitstatus=$?
                    if [ "$exitstatus" = "1" ]; then
                        exitCode=1
                    fi
                    case $CHOICE in
                        "1)")
                            # Display last 65 lines of log
                            sudo journalctl -fu goshimmer | less -FRSXM
                            clear
                        ;;
                        "2)")
                            CHOICE=$(
                                whiptail --title "GoShimmer - Debugging" --menu "\nChoose your option" 24 65 0 \
                                "1)" "Restart GoShimmer" \
                                "2)" "Start GoShimmer" \
                                "3)" "Stop GoShimmer" \
                                "4)" "Status GoShimmer" 3>&2 2>&1 1>&3
                            )
                            case $CHOICE in
                                "1)")
                                    {
                                        echo 0
                                        echo 50
                                        sudo systemctl restart goshimmer > /dev/null 2>&1
                                        echo 100
                                        sleep 0.25
                                    } | whiptail --gauge "Please wait while GoShimmer is restarting..." 8 65 0
                                    whiptail --title "GoShimmer - Debugging" --msgbox "GoShimmer successfully restarted" 8 65
                                ;;
                                "2)")
                                    {
                                        echo 0
                                        echo 50
                                        sudo systemctl start goshimmer > /dev/null 2>&1
                                        echo 100
                                        sleep 0.25
                                    } | whiptail --gauge "Please wait while GoShimmer is starting..." 8 65 0
                                    whiptail --title "GoShimmer - Debugging" --msgbox "GoShimmer successfully started" 8 65
                                ;;
                                "3)")
                                    {
                                        echo 0
                                        echo 50
                                        sudo systemctl stop goshimmer > /dev/null 2>&1
                                        echo 100
                                        sleep 0.25
                                    } | whiptail --gauge "Please wait while GoShimmer is stopping..." 8 65 0
                                    whiptail --title "GoShimmer - Debugging" --msgbox "GoShimmer successfully stopped" 8 65
                                ;;
                                "4)")
                                    goshimmerStatus="$(sudo systemctl status goshimmer)"
                                    whiptail --title "GoShimmer - Debugging" --msgbox "$goshimmerStatus" 15 65
                                ;;
                            esac
                        ;;
                        "3)")
                            if (whiptail --title "GoShimmer - Debugging" --yesno --defaultno "Do you really want to remove the goshimmer database?" 8 65); then
                                source $swarmConfigs/goshimmer.cfg
                                if (whiptail --title "GoShimmer - Debugging" --yesno "Do you want to download latest database from the IF?" 8 65); then
                                    goshimmerAllowDbDownload=true
                                else
                                    goshimmerAllowDbDownload=false
                                fi
                                exitStatus=$?
                                if [ $exitStatus != 1 ]; then
                                    {
                                        echo 0
                                        echo 25
                                        if [ "$killall" = "true" ]; then
                                            sudo killall -s SIGKILL goshimmer > /dev/null 2>&1
                                        else
                                            sudo systemctl stop goshimmer > /dev/null 2>&1
                                        fi
                                        echo 50
                                        sudo rm -rf $goshimmerHome/mainnetdb $goshimmerHome/peerdb $goshimmerHome/snapshot.bin > /dev/null 2>&1
                                        source $goshimmerModules/goshimmerDbDownload
                                        sudo sed -i 's/^goshimmerStatusCounter=.*/goshimmerStatusCounter=0/' $swarmConfigs/watchdog.cfg
                                        sudo sed -i 's/^goshimmerSyncCounter=.*/goshimmerSyncCounter=0/' $swarmConfigs/watchdog.cfg
                                        echo 75
                                        sudo systemctl start goshimmer > /dev/null 2>&1
                                        echo 100
                                        sleep 0.25
                                    } | whiptail --gauge "Please wait while the cleanup is running (this may take a while)..." 8 65 0
                                    whiptail --title "GoShimmer - Debugging" --msgbox "GoShimmer database successfully reset" 8 65
                                    unset goshimmerAllowDbDownload
                                fi
                            fi
                        ;;
                        "4)")
                            if (whiptail --title "GoShimmer - Debugging" --yesno --defaultno "Are you sure you want to reset the GoShimmer config file?" 8 65); then
                                source $swarmConfigs/goshimmer.cfg
                                {
                                    echo 0
                                    echo 20
                                    sudo systemctl stop goshimmer > /dev/null 2>&1
                                    echo 40
                                    sudo -u goshimmer wget -q -O $goshimmerHome/config.json https://raw.githubusercontent.com/iotaledger/goshimmer/master/config.json
                                    echo 60
                                    source $goshimmerModules/goshimmerParser
                                    echo 80
                                    sudo systemctl start goshimmer > /dev/null 2>&1
                                    echo 100
                                    sleep 0.25
                                } | whiptail --gauge "Please wait while the config reset is running (this may take a while)..." 8 65 0
                                whiptail --title "GoShimmer - Debugging" --msgbox "GoShimmer config successfully reset" 8 65
                            fi
                        ;;
                    esac
                done
                exitCode=0
            else
                whiptail --title "GoShimmer - Debugging" --msgbox "GoShimmer installation not found, please install GoShimmer first!" 8 65
            fi
        ;;
        "4)")
            if [ "$osArchitecture" = "amd64" ]; then
                while [ $exitCode -lt 1 ]; do
                    CHOICE=$(
                        whiptail --title "GoShimmer - Installer" --menu "\nChoose your option" 24 65 0 \
                        "1)" "Update GoShimmer" \
                        "2)" "Install GoShimmer" \
                        "3)" "Remove GoShimmer" 3>&2 2>&1 1>&3
                    )

                    exitstatus=$?
                    if [ "$exitstatus" = "1" ]; then
                        exitCode=1
                    fi

                    case $CHOICE in
                        "1)")
                            if [ -f "/usr/bin/goshimmer" ]; then
                                if (whiptail --title "GoShimmer - Updater" --yesno --defaultno "Do you really want to update GoShimmer?" 8 65); then
                                    sudo touch /tmp/goshimmer.lock
                                    if (whiptail --title "GoShimmer - Updater" --yesno --defaultno "Do want to download the latest GoShimmer DB backup?" 8 65); then
                                        goshimmerAllowDbDownload=true
                                    fi
                                    # Update GoShimmer
                                    source $goshimmerModules/goshimmerVersion
                                    if [ ! -z "$latestGoshimmerVersion" ]; then
                                        {
                                            echo 0
                                            echo 10
                                            sudo systemctl stop goshimmer > /dev/null 2>&1
                                            echo 20
                                            sudo rm -rf $goshimmerHome/mainnetdb $goshimmerHome/peerdb $goshimmerHome/snapshot.bin > /dev/null 2>&1
                                            echo 40
                                            source $goshimmerModules/goshimmerInstaller
                                            echo 60
                                            source $goshimmerModules/goshimmerParser
                                            echo 80
                                            sudo systemctl start goshimmer > /dev/null 2>&1
                                            echo 100
                                            sleep 0.5
                                        } | whiptail --gauge "Please wait while GoShimmer is updated..." 8 65 0
                                        whiptail --title "GoShimmer - Updater" --msgbox "GoShimmer successfully updated.\n\nChecksum: $goshimmerChecksum" 10 65
                                    sudo rm -rf /tmp/goshimmer.lock > /dev/null 2>&1
                                    else
                                        whiptail --title "GoShimmer - Updater" --msgbox "Congratulations, you have already installed the latest version of GoShimmer!" 8 65
                                    fi
                                    unset goshimmerChecksum
                                fi
                            else
                                whiptail --title "GoShimmer - Updater" --msgbox "Sorry, but GoShimmer is not installed or update blocked!" 8 65
                            fi
                        ;;
                        "2)")
                            if [ -f "/usr/bin/hornet" ] || [ -f "/usr/bin/hornet-shimmer" ] || [ -f "/usr/bin/bee" ] || [ -f "/usr/bin/bee-shimmer" ] || [ -f "/usr/bin/wasp" ]; then
                                if (whiptail --title "GoShimmer - Installer" --yesno --defaultno "Already installed nodes found on the system!\nIt is not recommended to run multiple nodes on one host.\n\nDo you still want to continue?" 12 65); then
                                    goshimmerSkipInstallation=false
                                else
                                    goshimmerSkipInstallation=true
                                fi
                            else
                                goshimmerSkipInstallation=false
                            fi
                            # INSTALL GoShimmer
                            if [ ! -f "/usr/bin/goshimmer" ] && [ "$goshimmerSkipInstallation" = "false" ]; then
                                source $goshimmerModules/goshimmerVersion
                                if (whiptail --title "GoShimmer - Installer" --yesno --defaultno "Are you sure you want to install Goshimmer v$latestGoshimmerVersion?" 8 65); then
                                    if (whiptail --title "GoShimmer - Installer" --yesno --defaultno "Do you want to download the latest database backup from IOTA Foundation?" 8 65); then
                                        goshimmerNoInstallerDbDownload=false
                                    else
                                        goshimmerNoInstallerDbDownload=true
                                    fi
                                    sudo touch /tmp/goshimmer.lock
                                    {
                                        echo 0
                                        echo 20
                                        source $swarmConfigs/goshimmer.cfg
                                        echo 40
                                        source $goshimmerModules/goshimmerInstaller
                                        echo 50
                                        # CALL MODULE CONFIGPARSER
                                        if [ -f "/usr/bin/goshimmer" ] && [ -f "$goshimmerHome/config.json" ]; then
                                            if ! [ -x "$(command -v apache2-utils)" ]; then
                                                sudo apt -qq install apache2-utils -y > /dev/null 2>&1
                                            fi
                                            source $swarmConfigs/goshimmer.cfg
                                            echo 60
                                            source $goshimmerModules/goshimmerParser
                                            echo 70
                                            if [ "$ufw" = "true" ]; then
                                                sudo ufw allow $goshimmerGossipPort/tcp > /dev/null 2>&1
                                                sudo ufw allow $goshimmerAutopeeringPort/udp > /dev/null 2>&1
                                            fi
                                            sudo systemctl start goshimmer > /dev/null 2>&1
                                            echo 80
                                            sleep 2
                                            goshimmerStatus="$(systemctl show -p ActiveState --value goshimmer)"
                                            if [ "$goshimmerStatus" != "active" ]; then
                                                sudo systemctl restart goshimmer > /dev/null 2>&1
                                            fi
                                            echo 100
                                            sleep 0.2
                                        fi
                                    } | whiptail --gauge "Please wait while installing GoShimmer..." 8 65 0
                                    if [ -f "/usr/bin/goshimmer" ] && [ -f "$goshimmerHome/config.json" ]; then
                                        if [ -f "/tmp/goshimmer.checksum" ]; then
                                            goshimmerChecksum=$(cat /tmp/goshimmer.checksum)
                                        fi
                                        whiptail --title "GoShimmer - Installer" --msgbox "GoShimmer installation finished!\n\nYou need to open the following ports for peering\n\nGossip: $goshimmerGossipPort/tcp\nAutopeering: $goshimmerAutopeeringPort/udp\n\nChecksum: $goshimmerChecksum" 17 65
                                        if [ -f "/tmp/goshimmerChecksum" ]; then
                                            sudo rm -rf /tmp/goshimmer.checksum > /dev/null 2>&1
                                        fi
                                    else
                                        {
                                            echo 0
                                            echo 25
                                            source $swarmConfigs/goshimmer.cfg
                                            echo 50
                                            source $goshimmerModules/goshimmerRemoval
                                            echo 75
                                            echo 100
                                        } | whiptail --gauge "Please wait while the GoShimmer files are removed...." 8 65 0
                                        whiptail --title "GoShimmer - Installer" --msgbox "Error while installing GoShimmer! Please try again later." 8 65
                                    fi
                                    sudo rm -rf /tmp/goshimmer.lock > /dev/null 2>&1
                                    unset goshimmerChecksum
                                fi
                            else
                                if [ -f "/usr/bin/goshimmer" ]; then
                                    whiptail --title "GoShimmer - Installer" --msgbox "GoShimmer already installed." 8 65
                                else
                                    if [ "$goshimmerSkipInstallation" = "true" ]; then
                                        whiptail --title "GoShimmer - Installer" --msgbox "Installation of GoShimmer aborted." 8 65
                                    fi
                                fi
                            fi
                            unset goshimmerSkipInstallation goshimmerNoInstallerDbDownload
                        ;;
                        "3)")
                            if (whiptail --title "GoShimmer - Installer" --yesno --defaultno "Do you really want to remove GoShimmer?" 8 65); then
                                sudo touch /tmp/goshimmer.lock
                                {
                                    echo 0
                                    echo 25
                                    source $swarmConfigs/goshimmer.cfg
                                    echo 50
                                    source $goshimmerModules/goshimmerRemoval
                                    echo 75
                                    echo 100
                                } | whiptail --gauge "Please wait while GoShimmer will be removed..." 8 65 0
                                whiptail --title "GoShimmer - Installer" --msgbox "GoShimmer successfully removed" 8 65
                                sudo rm -rf /tmp/goshimmer.lock > /dev/null 2>&1
                            fi
                        ;;
                    esac
                done
                exitCode=0
            else
                whiptail --title "GoShimmer - Installer" --msgbox "Error - Unsupported OS architecture for Goshimmer detected!" 8 65
            fi
        ;;
    esac
done
exitCode=0